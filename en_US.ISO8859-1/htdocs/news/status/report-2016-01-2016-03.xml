<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>January-March</month>

    <year>2016</year>
  </date>

  <section>
    <title>Introduction</title>

    <p><strong>This is a draft of the January&ndash;March 2016
      status report.  Please check back after it is finalized, and
      an announcement email is sent to the &os;-Announce mailing
      list.</strong></p>

    <?ignore
    <p>This report covers &os;-related projects between January and
      March 2016.  This is the first of four reports planned for
      2016.</p>

    <p>The first quarter of 2016 was another productive quarter for
      the &os; project and community. [...]</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from April
      to June 2016 is July 7, 2016.</p>
     ?>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='kern'>
    <title>Static Analysis of the &os; Kernel with PVS Studio</title>

    <contact>
      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>
	<email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.viva64.com/en/b/0377/">PVS-Studio delved into the FreeBSD kernel</url>
      <url href="https://reviews.freebsd.org/D5245">PVS Static Analysis Phabricator Review</url>
    </links>

    <body>
      <p>In February, Program Verification Systems used their
	PVS-Studio tool to run a static analysis of the &os; kernel.
	A Phabricator review was created to allow developers to share
	comments on the results.  A number of bugs ranging from
	trivial typos to redundant code to important logic errors were
	found and fixed.  Some results were false positives.  Several
	of these were addressed by changing code that misled the
	static analyzer and could also mislead a human reader.</p>

      <p>The cooperation that Program Verification Systems offers to
	open-source projects like &os; benefits everyone.  We thank
	them for sharing this analysis and their insights with us.</p>
    </body>
  </project>

  <project cat='doc'>
    <icon>doc-mid.jpg</icon>

    <title>Spanish FAQ and Chinese Porter's Handbook
      Translations</title>

    <contact>
      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>
	<email>wblock@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Federico</given>
	  <common>Caminiti</common>
	</name>
	<email>demian.fc@gmail.com</email>
      </person>

      <person>
	<name>
	  <given>Carlos</given>
	  <common>J Puga Medina</common>
	</name>
	<email>cpm@fbsd.es</email>
      </person>

      <person>
	<name>
	  <given>Ruey-Cherng</given>
	  <common>Yu</common>
	</name>
	<email>raycherng@gmail.com</email>
      </person>
    </contact>

    <links>
      <url href="https://www.freebsd.org/doc/es_ES.ISO8859-1/books/faq/">Preguntas Frecuentes para FreeBSD 9.X y 10.X</url>
      <url href="https://www.freebsd.org/doc/zh_TW.UTF-8/books/porters-handbook/">FreeBSD Porter 手冊</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-translators/">&os; Translators Mailing List</url>
      <url href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/fdp-primer/po-translations.html">PO Translations</url>
      <url href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/fdp-primer/">&os; Documentation Project Primer for New Contributors</url>
    </links>

    <body>
      <p>Federico Caminiti created an entirely new Spanish translation
	of the 31,000-word
	<a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/faq/">FAQ</a>
	with editorial help from Carlos J Puga Medina.</p>

      <p>This landmark accomplishment marks the first use of the new
	PO translation system to translate an entire book!</p>

      <p>Ruey-Cherng Yu has begun an ambitious Chinese translation
	(zh_TW) of the 64,000-word
	<a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/porters-handbook/">Porter's Handbook</a>.
	About half of the strings in the book have been translated so
	far.</p>
    </body>

    <help>
      <task>
	<p>Help add and improve translations of &os; documents into
	  Spanish:
	  <a href="https://lists.freebsd.org/pipermail/freebsd-translators/2016-March/000113.html">start of <tt>freebsd-translators</tt> thread</a>.</p>
      </task>

      <task>
	<p>Help add and improve translations of &os; documents into
	  Chinese or other languages.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>NFS server</title>

    <contact>
      <person>
	<name>
	  <given>Rick</given>
	  <common>Macklem</common>
	</name>
	<email>rmacklem@FreeBSD.org</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>A new option "-manage-gids" was added to the nfsuserd
	daemon.  This option tells the NFS server to use the list of
	groups for a uid on the server and not the list of groups in
	the NFS RPC request. Use of this option avoids the 16 group
	limit for NFS RPCs using AUTH_SYS (the default).</p>

      <p>Work is ongoing with respect to development of pNFS support
	for the NFS server using GlusterFS as a back end.  This will
	be a long term project with the eventual goal of allowing the
	NFS server to scale beyond a single server system.  Hopefully
	it will be available for testing in late Spring 2016.  pNFS
	allows a NFSv4.1 client to do reads/writes directly to a data
	server and not the NFS server.</p>
    </body>

    <help>
      <task>
	<p>Development of the pNFS server will be in need of testing
	  or it will never progress to a near production status.  I
	  hope to have code available in FreeBSD's subversion projects
	  branch for testing in late spring 2016.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>powerpcspe target</title>

    <contact>
      <person>
	<name>
	  <given>Justin</given>
	  <common>Hibbits</common>
	</name>
	<email>jhibbits@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://svnweb.freebsd.org/base/projects/powerpcspe/">Source tree</url>
    </links>

    <body>
      <p>The purpose of this is to enable use of the Signal Processing
	Engine found in the NXP/Freescale e500v2 SoC.  The SPE uses
	opcodes overlapping with Altivec, so is mutually exclusive.
	Additionally, the e500v2 does not have a traditional FPU, and
	instead uses the SPE for all floating point operations (or
	emulation as is currently done).  Combined with the fact that
	the SPE ABI is incompatible with traditional ABI, a new
	MACHINE_ARCH is created to address this.</p>

      <p>A project branch has been created with the work.  A
	powerpcspe kernel boots on the RouterBoard RB800, and base
	utilities run properly.</p>
    </body>

    <help>
      <task>
	<p>Potentially optimizing setjmp/longjmp to not use SPE unless
	  it's already been enabled.  This would save the kernel
	  switch for processes that don't otherwise use the SPE.  This
	  is a low priority task which may not be completed.</p>
      </task>
    </help>
  </project>

  <project cat="proj">
    <title>The Graphics stack on FreeBSD</title>

    <contact>
      <person>
	<name>
	  <common>FreeBSD Graphics team</common>
	</name>
	<email>freebsd-x11@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">Graphics stack roadmap and supported hardware matrix</url>
      <url href="https://github.com/freebsd/freebsd-ports-graphics">Ports development tree on GitHub</url>
      <url href="https://fosdem.org/2016/schedule/event/freebsd_graphic_stack/">FreeBSD Graphics Team at FOSDEM 2016</url>
      <url href="https://wiki.freebsd.org/SummerOfCodeIdeas#Devices_management:_link_.2Fdev_entries_to_sysctl_nodes">GSoC 2016: link /dev entries to sysctl nodes</url>
      <url href="https://wiki.freebsd.org/SummerOfCodeIdeas#Devices_management:_redesign_and_rewrite_libdevq">GSoC 2016: redesign libdevq</url>
    </links>

    <body>
      <p>The major news for this quarter is the update of the i915
	driver in the kernel!  The driver now matches Linux 3.8.13, so
	it includes initial Haswell support. Linux 3.8 is already
	three years old, but work continues to upgrade DRM further.
	In particular, the move to <tt>linuxkpi</tt> was started.</p>

      <p>In the Ports tree, Mesa was updated to 11.1.2. The next minor
	release, 11.2.0, is ready for testing in our development tree.
	We also updated libclc to 0.2.0.20151006, a library used by
	Mesa to provide OpenCL support.</p>

      <p>We attended FOSDEM 2016 in Brussels.  Jean-S??bastien P??dron
	gave a talk to explain the work of the graphics team and show
	how people can contribute. It was well received and the
	presentation was followed by interesting discussions.  FOSDEM
	was also a nice occasion to meet and talk again to the nice
	"upstream" developers of the graphics stack.</p>

      <p>For the first year, we added two ideas for GSoC 2016: one for
	a kernel task, one to redesign libdevq.  Six students
	submitted a proposal for those two ideas, that was unexpected!
	We now need to decide which one we want to mentor and the
	choice is difficult.</p>

      <p>The blog is still down.  We started to work on a replacement.
	We will probably go with a static generated website hosted on
	GitHub pages.</p>
    </body>

    <help>
      <task>
	<p>See the "Graphics" wiki page for up-to-date
	  information.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>ARM Allwinner SoC Support</title>

    <contact>
      <person>
	<name>
	  <given>Jared</given>
	  <common>McNeill</common>
	</name>
	<email>jmcneill@freebsd.org</email>
      </person>

      <person>
	<name>
	  <given>Emmanuel</given>
	  <common>Vadot</common>
	</name>
	<email>manu@bidouilliste.com</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/FreeBSD/arm/Allwinner">Allwinner FreeBSD Wiki</url>
    </links>

    <body>
      <p>Allwinner SoC are used in multiple hobbyist devboards and
	single board computers.  Recently, support for these SoC have
	received a lot of updates</p>

      <p>Task done during first quarter :</p>

      <ul>
	<li>I2C</li>
	<li>HDMI output</li>
	<li>Basic AXP209 support (Power Management Unit)</li>
	<li>Switch to upstream DTS for most boards</li>
	<li>Basic Support for A31/A31S SoC</li>
	<li>RTC</li>
	<li>Proper Pinmux/GPIO support</li>
	<li>Audio Codec / Audio HDMI</li>
	<li>A10/A20 DMA support</li>
	<li>A20 now uses the GIC (General Interrupt Controller)</li>
	<li>A20 now uses the ARM Generic Timer</li>
      </ul>

      <p>Ongoing task :</p>

      <ul>
	<li>Switch to new clock framework
	  <a href="https://reviews.freebsd.org/D5752">(In review)</a></li>

	<li>Convert A10 interrupt controller to INTRNG
	  <a href="https://reviews.freebsd.org/D5573">(In review)</a></li>

	<li>OHCI support
	  <a href="https://reviews.freebsd.org/D5481">(In review)</a></li>

	<li>Generic ALLWINNER kernel config file
	  <a href="https://reviews.freebsd.org/D5580">(In review)</a></li>

	<li>A20/A31 NMI support
	  <a href="https://reviews.freebsd.org/D5663">(In review)</a></li>

	<li>USB OTG</li>

	<li>Finish the switch to upstream DTS</li>

	<li>A83T SoC Support</li>

	<li>H3 SoC Support</li>
      </ul>
    </body>

    <help>
      <task>
	<p>SPI driver</p>
      </task>

      <task>
	<p>LCD Support</p>
      </task>

      <task>
	<p>Any unsupported hardware device that might be of
	  interest.</p>
      </task>
    </help>
  </project>

  <project cat='docs'>
    <title>new "FreeBSD Mastery" books</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Lucas</common>
	</name>
	<email>mwlucas@michaelwlucas.com</email>
      </person>
    </contact>

    <links>
      <url href="https://www.michaelwlucas.com/nonfiction/fmsf">FreeBSD Mastery: Specialty Filesystems</url>
    </links>

    <body>
      <p><a href="https://www.michaelwlucas.com/nonfiction/fmsf">FreeBSD Mastery: Specialty Filesystems</a>
	is now available everywhere, in print and ebook.</p>

      <p>Lucas and Allan Jude have also finished writing "FreeBSD
	Mastery: Advanced ZFS."  It's in copyedit now, and should be
	available before May 2016.  Check
	<a href="zfsbook.com">zfsbook.com</a> for details.</p>

      <p>Lucas' next book, "PAM Mastery," has a whole bunch of FreeBSD
	content in it.</p>
    </body>

    <help>
      <task>
	<p>Make grammar corrections to Advanced ZFS, get it in
	  print.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>FreeBSD on Cavium ThunderX (arm64)</title>

    <contact>
      <person>
	<name>
	  <given>Dominik</given>
	  <common>Ermel</common>
	</name>
	<email>der@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Wojciech</given>
	  <common>Macek</common>
	</name>
	<email>wma@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Zbigniew</given>
	  <common>Bodek</common>
	</name>
	<email>zbb@semihalf.com</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>Since the last report &os; support for ThunderX has been
	significantly improved and stabilized.  Semihalf contributions
	include the following items:</p>

      <ul>
	<li>Support for the newest ThunderX chip revisions (Pass 2.0)
	  and current Cavium firmware. Backward compatibility is
	  maintained.</li>

	<li>Moved to using pci_host_generic.c as a main driver for the
	  internal PCIe bridge.  Significant rework of PCIe code to
	  support both generic and ThunderX based platforms. </li>

	<li> Serious networking performance boost and bug fixes: </li>
	  <ul>
	    <li>Fixed race condition on Rx path causing very rare
	      ‘use after free’ issue</li>

	    <li>Hardware L3 and L4 checksums support</li>

	    <li>Hardware assisted TCP Segmentation Offloading
	      (TSO)</li>

	    <li>Support for software Large Receive Offload (LRO)</li>

	    <li>Various improvements to Tx and Rx paths and
	      configuration</li>
	  </ul>
      </ul>

      <p>The driver supports all available Ethernet connections (1,
	10, 30 Gbps) and system can can saturate 10 Gbps link (on Tx)
	using 4 CPU cores.</p>

      <ul>
	<li>Significantly improved overall I/O performance:</li>
	<ul>
	  <li>Complete rework of copyin/copyout and bzero
	    functionalities</li>
	</ul>

	<li>Other improvements:</li>
	  <ul>
	    <li>Support for interrupt to CPU binding (including
	      GICv3/ITS backends)</li>
	  </ul>
      </ul>

      <p>This work is integrated to the FreeBSD HEAD on on-going
	basis.</p>
    </body>

    <sponsor>
      Cavium
    </sponsor>

    <sponsor>
      Semihalf
    </sponsor>

    <help>
      <task>
	<p>Support for multi Queue Set operation in VNIC</p>
      </task>
    </help>
  </project>

  <project cat='bin'>
    <title>Updates to GDB</title>

    <contact>
      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The new thread target that directly uses <tt>ptrace(2)</tt>
	was committed upstream and included in GDB 7.11.  The port was
	also updated to GDB 7.11.</p>
    </body>

    <help>
      <task>
	<p>Figure out why the powerpc kgdb targets are not able to
	  unwind the stack past the initial frame.</p>
      </task>

      <task>
	<p>Add support for more platforms (arm, mips, aarch64) to
	  upstream gdb for both userland and kgdb.</p>
      </task>

      <task>
	<p>Add support for debugging powerpc vector registers.</p>
      </task>

      <task>
	<p>Add support for catching system calls.</p>
      </task>

      <task>
	<p>Add support for $_siginfo.</p>
      </task>

      <task>
	<p>Add support for ELF auxv data via 'info auxv'.</p>
      </task>

      <task>
	<p>Implement 'info os' commands.</p>
      </task>

      <task>
	<p>Implement gdbserver for freebsd.</p>
      </task>
    </help>
  </project>

  <project cat='bin'>
    <title>Native PCI-express HotPlug</title>

    <contact>
      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/bsdjhb/freebsd/tree/pci_hp">Native PCI-express HotPlug support</url>
    </links>

    <body>
      <p>A new implementation for support of native PCI-express
	hotplug is present at the URL above.  Much of the new code
	lives in the PCI-PCI bridge driver to handle hotplug events
	and manage the PCI-express slot registers.  Additional changes
	in the branch include adding new 'rescan' and 'delete'
	commands to <tt>devctl(8)</tt> as well as support for
	rescanning PCI busses.</p>

      <p>The current implementation has been tested on systems with
	ExpressCard but could use additional testing, especially on
	systems with other PCI-express HotPlug features such as
	mechanical latches, attention buttons, indicators, etc.</p>
    </body>

    <help>
      <task>
	<p>Split branch into separate logical changes as commit
	  candidates.</p>
      </task>

      <task>
	<p>Additional testing.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>KDE on FreeBSD</title>

    <contact>
      <person>
	<name>KDE on FreeBSD team</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://freebsd.kde.org/">KDE on FreeBSD website</url>
      <url href="https://freebsd.kde.org/area51.php">Experimental KDE ports staging area</url>
      <url href="https://wiki.FreeBSD.org/KDE">KDE on FreeBSD wiki</url>
      <url href="https://mail.kde.org/mailman/listinfo/kde-freebsd">KDE/FreeBSD mailing list</url>
      <url href="http://src.mouf.net/area51/log/branches/plasma5">Development repository for integrating KDE Frameworks 5 and Plasma 5</url>
    </links>

    <body>
      <p>The KDE on FreeBSD team focuses on packaging and making sure
	that the experience of KDE and Qt on FreeBSD is as good as
	possible.</p>

      <p>While the list of updates is shorter compared to the previous
	quarter, the team remained busy and work on KDE Frameworks 5
	and Plasma 5 continues.</p>

      <p>This quarter, Tobias Berner, who has been driving our KDE
	Frameworks 5 and Plasma 5 efforts from the beginning, received
	a KDE commit bit, and has been putting it to good use by
	upstreaming FreeBSD across several KDE repositories.  Another
	team highlight in the beginning of this year is the
	(re)addition of another committer to our experimental
	repository: Adriaan de Groot, a longtime KDE contributor who
	also used to work on KDE and FreeBSD almost a decade ago when
	our team was first formed.  Welcome back, Ade!</p>

      <p>The following big updates were landed in the ports tree this
	quarter.  In many cases, we have also contributed patches to
	the upstream projects.</p>

      <ul>
	<li>CMake 3.4.2 and 3.5.0</li>

	<li>Calligra 2.9.11, the latest release of the integrated work
	  applications suite.  We have managed to keep in sync with
	  the upstream releases since 2.9.10.</li>

	<li>KDE Telepathy was updated to 0.9.0 and Telepathy-Qt4 was
	  updated to 0.9.6.1, the latest upstream releases.</li>

	<li>The Qt 5 ports were finally updated to 5.5.1, which were
	  the latest stable version at the time.</li>

	<li>The first commit preparing the groundwork for KDE
	  Frameworks 5 and Plasma 5
	  <a href="https://svnweb.freebsd.org/changeset/ports/411156">was
	    landed to the ports tree</a>.</li>
      </ul>

      <p>In our experimental area51 repository, work on Qt 5.6.0 is
	underway in our experimental repositories.  Additionally, at
	the time of writing it also contains KDE Frameworks 5.20.0,
	Plasma 5.6.1 and KDE Applications 16.03.80.</p>

      <p>Users interested in testing those ports are encouraged to
	follow the instructions in
	<a href="https://freebsd.kde.org/area51.php">our website</a>
	and report their results to our mailing list. Qt5 5.6.0 is in
	our "qt-5.6" branch, and Plasma 5 and the rest is in the
	"plasma5" branch.</p>
    </body>

    <help>
      <task>
	<p>Land the KDE Frameworks 5 and Plasma 5 ports to the
	  tree.</p>
      </task>

      <task>
	<p>Commit the DigiKam 4.14.0 update currently being worked on
	  in our experimental repository.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Process-Shared locks for libthr</title>

    <contact>
      <person>
	<name>
	  <given>Konstantin</given>
	  <common>Belousov</common>
	</name>

	<email>kib@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>POSIX specifies several kinds of pthread locks, for this
	report the private and process-shared variants are considered.
	Private locks can be used only by the threads of the same
	process, which share the address space.  Process-shared locks
	can be used by threads from any process, assuming the process
	can map the lock memory into its address space.</p>

      <p>Our libthr, the library implementing the POSIX threads and
	locking operations, uses a pointer as the internal
	representation behind a lock.  The pointer contains the
	address of the actual structure carrying the lock.  This has
	unfortunate consequences for implementing the
	<tt>PTHREAD_PROCESS_SHARED</tt> attribute for locks, since
	really only the pointer is shared when the lock is mapped into
	distinct address spaces.</p>

      <p>A common opinion was that we have no choice but to break the
	libthr Application Binary Interface (ABI) by changing the lock
	types to be the actual lock structures (and padding for future
	ABI extension).  This is very painful for users, as our
	previous experience with non-versioned libc and libc_r
	shown.</p>

      <p>Instead, I proposed and implemented a scheme where
	process-shared locks can be implemented without breaking the
	ABI.  The lock memory is used as a key into the system-global
	hash of the shared memory objects (off-pages), which carry the
	real lock structures.</p>

      <p>New umtx operations to create or look up the shared object,
	by the memory key, were added.  Libthr is modified to lookup
	the object and use it for shared locks, instead of using
	malloc() as for private locks.</p>

      <p>The pointer value in the user-visible lock type contains a
	canary for shared locks.  Libthr detects the canary and
	switches into the shared-lock mode.</p>

      <p>The proposal of inlining the lock structures, besides the
	drawbacks of breaking ABI, has its merits.  Most important,
	the inlining avoids the need of indirection.  Another
	important advantage over the off-page page approach is that no
	off-page object needs to be maintained, and the lifecycle of
	the shared lock naturally finishes with the destruction of the
	shared memory, without explicit cleanup.  Right now, off-pages
	hook into vm object termination to avoid leakage, but long
	liviness of the vnode vm object prolonges the off-page
	existence for shared locks backed by files, however unlikely
	they may be.</p>

      <p>Libthr with inlined locks become informally known as libthr2
	project, since the library name better be changed instead of
	only bumping the library version.  The rtld should ensure that
	libthr and libthr2 do not become simultaneously loaded into a
	single address space.</p>
    </body>

    <sponsor>The FreeBSD Foundation</sponsor>

    <help>
      <task>
	<p>Implement robust mutexes.</p>
      </task>

      <task>
	<p>Evaluate and implement libthr2.</p>
      </task>
    </help>
  </project>

  <project cat='team'>
    <title>Clusteradm</title>

    <contact>
      <person>
	<email>clusteradm@freebsd.org</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>
	<ul>
	  <li>migrated services out of the hosting space in ISC
	    (peter, sbruno)</li>

	  <li>begun migration of services into RootBSD hosting space
	    (peter, sbruno)</li>

	  <li>collaborated with phabricator admin team to migrate to
	    new and improved host in NYI. (AllanJude, peter,
	    sbruno)</li>

	  <li>installed new and beefier Jenkins machine(gnn, lwshu,
	    sbruno)</li>

	  <li>still looking for more Asian mirrors for pkg,svn,ftp
	    (Japan, India). (sbruno)</li>

	  <li>migration of Taiwanese mirror to new location completed.
	    (lwshu)</li>

	  <li>clang/llvm buildbbot now hosted in the FreeBSD cluster
	    at NYI (sbruno, emaste)</li>

	  <li>resolved UK mirror outtage with Bytemark (gavin,
	    peter)</li>
	</ul></p>
    </body>
    <help></help>
  </project>

  <project cat='ports'>
    <title>Obsoleting Rails 3</title>

    <contact>
      <person>
	<name>
	  <given>Torsten</given>
	  <common>Zühlsdorff</common>
	</name>
	<email>ports@toco-domains.de</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>Ruby on Rails is the base for most of the rubygems in the
	portstree.  Currently version 3.2 and 4.2 coexists, but since
	Rails 3.2 runs out of support, the time has come to
	switch.</p>

      <p>There is an ongoing progress to remove Rails 3.2 from the
	ports tree. While many gems already work with the new version,
	there are some exceptions. For example www/redmine needs a big
	update (which is currently tested) because it depends on gems
	which therefore depends on Rails 3.2.</p>

      <p>If you want to help porting or testing, feel free to contact
	me or the mailinglist <tt>ruby@FreeBSD.org</tt>.</p>
    </body>
    <help></help>
  </project>

  <project cat='ports'>
    <title>GitLab Port</title>

    <contact>
      <person>
	<name>
	  <given>Torsten</given>
	  <common>Zühlsdorff</common>
	</name>
	<email>ports@toco-domains.de</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>After nearly a year of work on this project, GitLab 8.5.5 was
	committed into the ports tree.  A big thanks to the enormous
	number of people involved! Since GitLab is a fast moving
	project, there is also ongoing work to stay in sync with
	upstream. Have fun!</p>
    </body>
    <help></help>
  </project>

  <project cat='misc'>
    <title>FreeBSD Build</title>

    <contact>
      <person>
	<name>
	  <given>Bryan</given>
	  <common>Drewery</common>
	</name>
	<email>bdrewery@FreeBSD.org</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>Build improvements for buildworld on <em>head</em> continue.
	Some highlights include:</p>

      <ul>
	<li><em>WITH_FAST_DEPEND</em> was made default in r296668 and
	  later made the only option in r297434.  The new depend code
	  avoids a 'make depend' tree walk and generates .depend files
	  during build as a side-effect of compiling.  This is using
	  the -MF flags of the compiler.  This speeds up the build by
	  15-35%.</li>

	<li><a href="http://bugs.freebsd.org/196193">PR 196193</a>:
	  <em>WITHOUT_CROSS_COMPILER</em> was fixed to properly use
	  <em>--sysroot</em> which allows the option to work in more
	  cases.  It is still unsafe when major compiler upgrades
	  occur.  Further work is planned to improve that still.</li>

	<li><em>WITHOUT_TOOLCHAIN</em> now properly builds.</li>
      </ul>
    </body>

    <sponsor>
      EMC / Isilon Storage Division
    </sponsor>

    <help>
      <task>
	<p>Opportunistically skipping the bootstrap compiler phase of
	  buildworld.</p>
      </task>

      <task>
	<p>Skipping the 'make obj' tree walk.</p>
      </task>

      <task>
	<p>Enabling <em>WITH_META_MODE</em> in buildworld to provide a
	  reliable incremental build using filemon(4) and bmake's
	  .MAKE.MODE=meta.  This should not be confused with
	  <em>WITH_DIRDEPS_BUILD</em> which previously was named
	  <em>WITH_META_MODE</em> and is a drastically different build
	  system presented at BSDCan 2014 by Simon Gerraty.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Filemon performance/stability improvements</title>

    <contact>
      <person>
	<name>
	  <given>Bryan</given>
	  <common>Drewery</common>
	</name>
	<email>bdrewery@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Mateusz</given>
	  <common>Guzik</common>
	</name>
	<email>mjg@FreeBSD.org</email>
      </person>
    </contact>

    <links></links>

    <body>
      <p>Filemon is a kernel module for tracing which files a command
	creates, reads, writes or executes.  It allows tracking build
	dependencies in combination with bmake's meta mode.  Bmake
	will store filemon's output in a .meta file along with the
	build command and later use this to check if any of the files
	references are missing or modified, or if the build command
	changes, to trigger a rebuild of the target.  It provides the
	same functionality as compiler -MF flags but for everything.
	It will be critical for buildworld's <em>WITH_META_MODE</em>
	(which is the normal buildworld but just using filemon) to
	provide a reliable incremental build without even the need of
	.depend files or compiler -MF flags.  This will allow
	<em>-DNO_CLEAN</em> to work all of the time.</p>

      <p>Over this quarter filemon on head was improved for stability
	and performance.  It no longer causes every syscall it hooks
	into to loop on processes looking for a matching filemon
	struct.  It now just attaches directly to the struct proc with
	its own pointer.  This improves performance by reducing lock
	contention during a build using it. Much other work went into
	improving error handling and other stability issues in the
	module as well.</p>

      <p>All of this work was done by Bryan Drewery, sponsored by EMC,
	but much help and identification of bugs was provided by
	Mateusz Guzik.</p>
    </body>

    <sponsor>
      EMC / Isilon Storage Division
    </sponsor>

    <help>
      <task>
	<p>Improving credential handling</p>
      </task>

      <task>
	<p>Improving EVENTHANDLER performance</p>
      </task>

      <task>
	<p>Possibly providing a framework for syscallenter/syscallret
	  hooking to avoid the need to hook syscalls as Filemon
	  does.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>AmigaOne X5000 support</title>

    <contact>
      <person>
	<name>
	  <given>Justin</given>
	  <common>Hibbits</common>
	</name>
	<email>jhibbits@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.amigaos.net/hardware/133/amigaone-x5000" />
    </links>

    <body>
      <p>A continuation of the Book-E QorIQ support enhancements by
	Semihalf dating back to 2012.</p>

      <p>The AmigaOne X5000 series of AmigaOS compatible systems uses
	the Freescale QorIQ series of SoCs for a desktop-class form
	factor.  The work here entails adding support for the e5500
	core itself, in addition to support for the SoC
	peripherals.</p>

      <p>Currently most code is checked in to enable basic support:
	dTSEC (ethernet), core support (e500mc, e5500).  Additionally,
	as part of this, rman, the kernel resource manager, was
	enhanced to use uintmax_t for resources.  This allows devices
	to be physically above the 4GB boundary on 32-bit systems.
	With a statically compiled device tree, it boots to multiuser
	mode, with nfsroot, and can be used as normal (serial and ssh
	logins once configured).</p>
    </body>

    <sponsor>
      Alex Perez (Inertial Computing)
    </sponsor>

    <help>
      <task>
	<p>eSDHC driver.  Work has been started on this, hijacking the
	  imx_sdhc.c from Ian Lepore, but there are still bugs:
	  missing DMA from the iMX driver, and odd timeouts after the
	  system starts up.</p>
      </task>

      <task>
	<p>SATA support.  There is a WIP driver for the SATA
	  controller, but it's currently very slow, about 11MB/s on a
	  SATA 2 link.  It currently relies on a 10ms delay on every
	  SATA transaction, in order for it to be even somewhat
	  stable.  Without this delay, the disk scan never works and I
	  haven't yet figured out why.</p>
      </task>

      <task>
	<p>Local console (VGA) support.  It currently boots with a
	  serial console.  vgapci0 is seen if there's a PCIe graphics
	  card, but vt(4) doesn't attach to it yet.</p>
      </task>

      <task>
	<p>64-bit support.  The CPU on the board is a P5020, a 64-bit
	  e5500 dual-core SoC.  Currently, booke support in FreeBSD is
	  32-bit only.</p>
      </task>

      <task>
	<p>SMP.  SMP support on Book-E hardware is currently
	  broken.</p>
      </task>

      <task>
	<p>U-boot support.  Currently this uses a compiled-in device
	  tree, but it would be preferred for it to use the device
	  tree provided by u-boot, or at least the Linux-compatible
	  device tree.</p>
      </task>

      <task>
	<p>More work is needed on the DPAA front (Datapath
	  Acceleration Architecture) to improve the ethernet driver,
	  and utilize the SEC engine for crypto, <tt>random(4)</tt>,
	  and IPSec.</p>
      </task>
    </help>
  </project>

  <project cat='docs'>
    <title>The FreeBSD German Documentation Project</title>

    <contact>
      <person>
	<name>
	  <given>Bj??rn</given>
	  <common>Heidotting</common>
	</name>
	<email>bhd@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Benedict</given>
	  <common>Reuschling</common>
	</name>
	<email>bcr@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Johann</given>
	  <common>Kois</common>
	</name>
	<email>jkois@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://people.freebsd.org/~jkois/FreeBSDde/de/">Homepage of the FreeBSD German Documentation Project</url>
    </links>

    <body>
      <p>The FreeBSD German Documentation Project translates FreeBSD's
	documentation (handbook, articles, website, etc.) into the
	German language.</p>

      <p>Due to the tireless effort of Bj??rn Heidotting, we made huge
	improvements in catching up with the translation of the German
	handbook.  Benedict helped with reviewing the changes using
	FreeBSD's review system Phabricator, which helped a lot.  We
	now have the following handbook chapters in sync with the
	latest version in the English tree:</p>

      <ul>
	<li>filesystems</li>

	<li>kernelconfig</li>

	<li>ports</li>

	<li>x11</li>
      </ul>

      <p>We try to keep up the good work, while also looking at new
	ways to translate like the PO/gettext-based system.  We are
	always looking for volunteers who are interested in
	translating small sections or even entire documents.  The
	process is relatively easy and contributors don't have to know
	much to get started. The members of the FreeBSD German
	Documentation Team are also willing to mentor people who are
	interested in helping out.</p>
    </body>

    <help>
      <task>
	<p>Translate more documents.</p>
      </task>
    </help>
  </project>
</report>
