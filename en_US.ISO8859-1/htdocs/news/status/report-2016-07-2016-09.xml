<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>July-September</month>

    <year>2016</year>
  </date>

  <section>
    <title>Introduction</title>

    <p><strong>This is a draft of the July&ndash;September 2016
      status report.  Please check back after it is finalized, and
      an announcement email is sent to the &os;-Announce mailing
      list.</strong></p>

    <?ignore
    <p>This report covers &os;-related projects between July and
      September 2016.  This is the third of four reports planned for
      2016.</p>

    <p>The third quarter of 2016 was another productive quarter for
      the &os; project and community. [...]</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from October
      to December 2016 is January 7, 2016.</p>
     ?>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>gsoc</name>

    <description>Google Summer of Code</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='proj'>
    <title>ClonOS: New &os;-Based Free/Open Hosting Platform</title>

    <contact>
      <person>
	<name>
	  <given>Oleg</given>
	  <common>Ginzburg</common>
	</name>
	<email>olevole@olevole.ru</email>
      </person>
    </contact>

    <links>
      <url href="http://clonos.tekroutine.com">ClonOS Homepage</url>
    </links>

    <body>
      <p>Currently, &os; is well proven as a base for routers
	(<strong>pfSense</strong>, <strong>OPNSense</strong>,
	<strong>BSDRP</strong>) and NAS (<strong>FreeNAS</strong>,
	<strong>zfsGuru</strong>, <strong>Nas4Free</strong>).  However,
	&os;-based solutions are almost completely absent in the
	virtualization area, and <strong>ClonOS</strong> is one of the
	attempts to change it.
      </p>

      <p>ClonOS is a new free open-source &os;-based platform for virtual
	environment creation and management.  In the core platform are:
      </p>

      <ul>
	<li>&os; as the host OS</li>
	
	<li><a href="http://man.FreeBSD.org/bhyve/8">bhyve</a></li>

	<li><a href="https://www.xenproject.org/">xen</a></li>

	<li><a href="http://man.freebsd.org/vale/4">vale</a></li>

	<li><a href="http://man.freebsd.org/jail/8">jail</a></li>

	<li><a href="https://www.bsdstore.ru/">CBSD</a> (as a management
	  tool)</li>

	<li><a href="https://puppet.com/">puppet</a> (for configuration
	  management)</li>

	<li>additional features such as go-micro services (obtaining
	  VMs, resizing disks and so on)</li>
      </ul>
    </body>

    <help>
      <task>We would like to see ClonOS in real-world use.  In this
	regard we are interested in finding more people and companies who
	used &os; in hosting tasks.  In addition, it could be great to
	work with the developers of existing NAS solutions (zfsGuru,
	Nas4Free)
      </task>
    </help>
  </project>

  <project cat='soc'>
    <title>Google Summer of Code 2016</title>

    <contact>
      <person>
	<name>
	  <given>Gavin</given>
	  <common>Atkinson</common>
	</name>
	<email>gavin@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Pedro</given>
	  <common>Giffuni</common>
	</name>
	<email>pfg@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/SummerOfCode2016Projects">GSoC 2016 Projects</url>
      <url href="https://wiki.FreeBSD.org/SummerOfCodeIdeas">GSoC Ideas page</url>
    </links>

    <body>
      <p>As in all previous editions of the Google Summer of Code, &os;
	was an accepted organization, and we had the chance to mentor 15
	projects.  Huge thanks to all our mentors for keeping the high
	quality standards that make our community shine.</p>

      <p>This year was rather unique in that we accepted for the first
	time well-known members of the community that are not src
	committers to co-mentor.  We also accepted projects that have
	a different upstream than &os;.  Both are clear signs that &os; is
	growing and adapting to the wider community.</p>

      <p>This year we are also had administrative issues with Perforce
	and have accepted officially the use of external repositories, in
	particular github, as requested by students.</p>

      <p>12 of 15 projects were successful, which we think is an
	excellent result for a Google Summer of Code.</p>
    </body>

    <sponsor>
      Google Inc.
    </sponsor>

    <sponsor>
      The FreeBSD Foundation
    </sponsor>

    <help>
      <task>The world is changing and we need fresh project ideas.  We
	need to start looking for those ideas <strong>now</strong>.</task>
      
      <task>The project ideas wiki page has been reset and we need to
	get it populated before applying for the next Google Summer of
	Code.  Please help unleash the next stream of projects you want to
	see in &os;.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>CloudABI: Running Untrusted Programs Directly on top of &os;</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Schouten</common>
	</name>
	<email>ed@FreeBSD.org</email>
      </person>

      <person>
	<name>The CloudABI mailing list</name>
	<email>cloudabi-devel@googlegroups.com</email>
      </person>
    </contact>

    <links>
      <url href="https://nuxi.nl/">Official CloudABI Website.</url>
      <url href="https://nuxi.nl/cloudabi/FreeBSD/">Using CloudABI on &os;.</url>
      <url href="https://nuxi.nl/blog/2016/08/01/cloudabi-python.html">Python for CloudABI.</url>
      <url href="https://github.com/NuxiNL">CloudABI on GitHub.</url>
    </links>

    <body>
      <p>CloudABI is a compact UNIX-like runtime environment inspired by
	&os;'s Capsicum security framework.  It allows you to safely
	run potentially untrusted programs directly on top of &os;,
	Linux and macOS, without requiring the use of virtualisation,
	jails, etc.  This makes it a useful building block for
	cluster/cloud computing.</p>

      <p>Over the last couple of months, several new libraries and
	applications have been ported over to CloudABI, the most
	important addition being Python 3.6.  This means that you can now
	write strongly sandboxed apps in Python!</p>

      <p>Support for different hardware platforms has also improved.  In
	addition to amd64 and arm64, we now support i686 and armv6.
	The release of LLVM 3.9 was important to us, as it has
	integrated all the necessary changes to support the first three
	platforms.  Full armv6 support is still blocked on some issues
	with LLVM's linker, LLD.</p>
    </body>

    <sponsor>
      Nuxi, the Netherlands
    </sponsor>

    <help>
      <task>Play around with CloudABI and let us know what you think of
	it!  Full support for amd64 and arm64 is part of &os; 11.0.
	i686 and armv6 support is only available on HEAD, but will be
	merged to the stable/11 branch in the future.</task>

      <task>Interested in Python programming? Give our copy of Python a
	try and share your experiences!</task>

      <task>Do you maintain pieces of software that could benefit from
	strong sandboxing?  Try building them using the CloudABI cross
	compiler!</task>
    </help>
  </project>

  <project cat='kern'>
    <title>&os; on Hyper-V and Azure</title>

    <contact>
      <person>
	<name>
	  <given>Sepherosa</given>
	  <common>Ziehau</common>
	</name>
	<email>sepherosa@gmail.com</email>
      </person>

      <person>
	<name>
	  <given>Hongjiang</given>
	  <common>Zhang</common>
	</name>
	<email>honzhan@microsoft.com</email>
      </person>

      <person>
	<name>
	  <given>Dexuan</given>
	  <common>Cui</common>
	</name>
	<email>decui@microsoft.com</email>
      </person>

      <person>
	<name>
	  <given>Kylie</given>
	  <common>Liang</common>
	</name>
	<email>kyliel@microsoft.com</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/HyperV">&os; Virtual Machines on Microsoft Hyper-V</url>
      <url href="https://technet.microsoft.com/en-us/library/dn531030.aspx">Supported Linux and &os; virtual machines for Hyper-V on Windows</url>
    </links>

    <body>
      <p>This quarter, the Hyper-V storage driver was greatly improved:
	its performance was increased by a factor of 1.2-2 by applying
	BUS_DMA and UNMAP_IO, enlarging the request queue, and selecting the
	outgoing channel with the LUN considered;  TRIM/UNMAP was enabled;
	and some critical bugs (PRs 209443, 211000, 212998) were fixed so
	that disk hot add/remove and VHDX online resizing should work
	now.</p>

      <p>The VMBus driver also received attention, with enhancements made for
	the handling of device hot add/remove.</p>

      <p> In the Hyper-V network driver, configurable RSS key and dynamic
	MTU change are now supported.</p>

      <p>&os; images on Azure continue to be updated &mdash; after
	publishing the &os; 10.3 VM image on the global Microsoft Azure in
	June, Microsoft also published the VM image on the Microsoft Azure
	operated by 21Vianet in China in September.</p>

      <p>Patches have been developed to support PCIe pass-through (also
	known as Discrete Device Assignment); this feature allows physical
	PCIe devices to be passed through to &os; VMs running on Hyper-V
	(Windows Server 2016), giving them near-native performance with low
	CPU utilization.  The patch to enable the feature will be posted for
	review soon.</p>
    </body>

    <sponsor>
      Microsoft
    </sponsor>
  </project>

  <project cat='gsoc'>
    <title>ptnet Driver and bhyve Device Model</title>

    <contact>
      <person>
	<name>
	  <given>Vincenzo</given>
	  <common>Maffione</common>
	</name>
	<email>v.maffione@gmail.com</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/SummerOfCode2016/PtnetDriverAndDeviceModel">&os; Wiki Page for Project Overview</url>
      <url href="http://info.iet.unipi.it/~luigi/papers/20160613-ptnet.pdf">Conference Paper</url>
      <url href="https://svnweb.FreeBSD.org/socsvn/soc2016/vincenzo/head/">Subversion Repository</url>
    </links>

    <body>
      <p>This project provides:</p>

      <ul>
	<li>A new driver (<tt>if_ptnet</tt>) for a paravirtualized network
	  device, modeled after the netmap API.  The driver supports
	  multi-queue netmap ports, and it is able to work both in netmap
	  mode and in normal mode.</li>

	<li>The emulation of the <tt>ptnet</tt> device model as a module
	  of the <tt>bhyve</tt> hypervisor.</li>
      </ul>

      <p>The <tt>ptnet</tt> device and driver has been introduced to
	overcome the performance limitations of TCP/IP networking between
	bhyve VMs.  Prior to this work, the most performant solution for
	VM-to-VM intra-host TCP communication provided less than 2 Gbps TCP
	throughput.  With <tt>ptnet</tt>, in the same VM-to-VM TCP
	communication scenario, it is possible to obtain up to 20 Gbps.</p>
    </body>

    <sponsor>
      Google Summer of Code
    </sponsor>

    <help>
      <task>Share <tt>virtio-net</tt> header management code with the
	<tt>if_vtnet</tt> driver.  In the current code, about 100 lines of
	code have been copied and pasted from <tt>if_vtnet.c</tt>.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>LXQt on &os;</title>

    <contact>
      <person>
	<name>
	  <given>Olivier</given>
	  <common>Duchateau</common>
	</name>
	<email>olivierd@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Jesper</given>
	  <common>Schmitz Mouridsen</common>
	</name>
	<email>jesper@schmitz.computer</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/LXQt">&os; LXQt Project</url>
      <url href="http://lxqt.org/">LXQt Project</url>
      <url href="https://www.assembla.com/spaces/lxqt/subversion/source">LXQt Development Repository</url>
    </links>

    <body>
      <p>LXQt is the Qt port of and the upcoming version of LXDE, the
	Lightweight Desktop Environment.  It is the product of a merge
	between the LXDE-Qt and Razor-qt projects.</p>

      <p>The porting effort remains very much a work in progress: it
	requires some components of Plasma 5, the new major KDE
	workspace.</p>

      <p>The porting of the 0.11 branch is now complete, with new ports
	(compared to the previous release).  See our wiki page for a
	complete list of applications.</p>

      <p>We also have updates for:</p>

      <ul>

	<li><tt>x11-toolkits/qtermwidget</tt> (0.7.0)</li>

	<li><tt>x11/qterminal</tt> (0.7.0)</li>

	<li><tt>x11/qterminal-l10n</tt></li>
      </ul>
    </body>

    <help>
      <task> Improve &os; support in <tt>sysutils/lxqt-admin</tt>,
	especially with respect to user management.</task>

      <task>Add additional panel plugins.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>Xfce on &os;</title>

    <contact>
      <person>
	<name>
	  <given>&os; Xfce Team</given>
	</name>
	<email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Xfce">&os; Xfce Project</url>
      <url href="https://www.assembla.com/spaces/xfce4/subversion/source">&os; Xfce Repository</url>
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms such as &os;.  It aims to be fast and
	lightweight, while still being visually appealing and easy to
	use.</p>

      <p>During this quarter, the team has kept the following applications
	up-to-date:</p>

      <ul>
	<li><tt>audio/xfmpc</tt> (0.2.3)</li>

	<li><tt>deskutils/xfce4-notifyd</tt> (0.3.2)</li>

	<li><tt>deskutils/xfce4-volumed-pulse</tt> (0.2.2)</li>

	<li><tt>devel/thunar-vcs-plugin</tt> (0.1.5)</li>

	<li><tt>misc/xfce4-weather-plugin</tt> (0.8.8)</li>

	<li><tt>sysutils/xfce4-settings</tt> (4.12.1)</li>

	<li><tt>x11/xfce4-clipman-plugin</tt> (1.4.0)</li>

	<li><tt>x11/xfce4-dashboard</tt> (0.6.0)</li>

	<li><tt>x11/xfce4-goodies</tt>, the meta-port for the Xfce4
	  Goodies Project (plugins, applications)</li>

	<li><tt>x11/xfce4-whiskermenu-plugin</tt> (1.6.0)</li>
      </ul>

      <p>We also follow the unstable releases; the current unstable
	release brings support for Gtk3 (available in our experimental
	repository) to:</p>

      <ul>
	<li><tt>audio/xfce4-mpc-plugin</tt> (0.4.99)</li>

	<li><tt>sysutils/garcon</tt> (0.5.0)</li>

	<li><tt>sysutils/xfce4-battery-plugin</tt> (1.0.99)</li>

	<li><tt>sysutils/xfce4-diskperf-plugin</tt> (2.5.99)</li>

	<li><tt>sysutils/xfce4-fsguard-plugin</tt> (1.0.99)</li>

	<li><tt>sysutils/xfce4-netload-plugin</tt> (1.2.99)</li>

	<li><tt>sysutils/xfce4-systemload-plugin</tt> (1.1.99)</li>

	<li><tt>www/xfce4-smartbookmark-plugin</tt> (0.4.99)</li>

	<li><tt>x11/libexo</tt> (0.11.1)</li>

	<li><tt>x11/libxfce4menu</tt> (4.13.1)</li>

	<li><tt>x11/xfce4-dashboard</tt> (0.7.0)</li>

	<li><tt>x11/xfce4-terminal</tt> (0.6.92)</li>

	<li><tt>x11/xfce4-whiskermenu-plugin</tt> (2.0.1)</li>

	<li><tt>x11-clocks/xfce4-datetime-plugin</tt> (0.6.99)</li>
      </ul>

      <p>Currently, the unstable releases work fine with our Gtk3 ports
	available in the ports tree, but in the future, support for 3.18
	will be removed in preference of 3.20.x.</p>
    </body>

    <help>
      <task>Continue working on unstable releases.</task>
    </help>
  </project>

  <project cat='gsoc'>
    <title>Non-BSM to BSM Conversion Tools</title>

    <contact>
      <person>
	<name>
	  <given>Mateusz</given>
	  <common>Piotrowski</common>
	</name>
	<email>0mp@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/SummerOfCode2016/NonBSMtoBSMConversionTools">Wiki Page</url>
      <url href="https://github.com/0mp/FreeBSD">GitHub Repository</url>
      <url href="https://github.com/0mp/FreeBSD/pull/9">Pull Request With Consolidated Patch</url>
    </links>

    <body>
      <p>This project was started during Google Summer of Code this year.
	The aim was to create a library which can convert the audit trail
	files in Linux Audit format or the format used by Windows to the BSM
	format (the format &os; uses for its audit logs).  Apart from that,
	I wanted to create a simple command-line tool and extend
	<tt>auditdistd</tt> so that it is possible to send non-BSM logs to
	<tt>auditdistd</tt> over a secure connection and save those audit
	logs on disk, preferably in the BSM format.</p>

      <p>So far, it is possible to reasonably convert some of the most
	common Linux audit log events to BSM, but it still needs a lot of
	work.  Secondly, I was able to configure <tt>auditdistd</tt> to
	communicate with CentOS over an insecure connection.  Thirdly, the
	command-line tool is usable but not perfect.</p>

      <p>The present work focuses on configuring the secure TLS connection
	between CentOS and <tt>auditdistd</tt>.  I've already tried using
	rsyslogd but wasn't able to make it work.</p>
    </body>

    <sponsor>
      Google Summer of Code
    </sponsor>

    <help>
      <task>I need more examples of rare Linux Audit logs; please send me
	some examples if you have any.  It is much easier to improve the
	conversion process with real-life examples of the audit events you
	try to convert.</task>

      <task>Configure <tt>auditdistd</tt> to be able to communicate with some
	software on CentOS over TLS in order to receive audit logs.  I
	wasn't able to come up with a simple solution for that.</task>

      <task>Additional open tasks are listed on the Wiki page and in the
	TODO file in the root directory of the project.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>Improvements to Non-Transparent Bridge Subsystem</title>

    <contact>
      <person>
	<name>
	  <given>Alexander</given>
	  <common>Motin</common>
	</name>
	<email>mav@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Non-Transparent Bridges allow creation of memory windows between
	different systems, using the regular PCIe links of CPUs as a
	transport.  During the last quarter, the NTB subsystem gained a
	significant set of improvements and fixes:</p>

      <ul>
	<li>The code was modularized, utilizing &os;'s NewBus interfaces
	  to allow support for different hardware types with different
	  drivers, support for multiple NTB instances in a system,
	  using the <tt>ntb_transport</tt> module for consumers other
	  than <tt>if_ntb</tt>, etc.</li>

	<li>Support for splitting NTB resources between different
	  applications was added, such as doing direct access to some range
	  of remote memory and to a virtual network interface between nodes
	  at the same time, etc.</li>

	<li>The virtual network interface driver gained support for many
	  modern features, such as multiple queues, new locking, etc.</li>

	<li>NTB performance and SMP scalability was improved.</li>

	<li>Multiple workarounds for hardware issues were added.</li>
      </ul>

      <p>The code is committed to the &os; head, stable/11 and stable/10
	branches.</p>
    </body>

    <sponsor>
      The project is sponsored by iXsystems, Inc.
    </sponsor>

    <help>
      <task>Support for the next generation of Intel hardware.</task>

      <task>Support for non-Intel hardware (AMD, PLX, etc.).</task>

      <task>Support for I/OAT and other DMA offloads.</task>

      <task>Creating a more efficient packet transport protocol.</task>

      <task>Creating a greater variety of NTB applications.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>ZFS Code Sync with Latest OpenZFS/Illumos</title>

    <contact>
      <person>
	<name>
	  <given>Alexander</given>
	  <common>Motin</common>
	</name>
	<email>mav@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Andriy</given>
	  <common>Gapon</common>
	</name>
	<email>avg@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The ZFS code base in &os; regularly gets merges of new code,
	staying in sync with latest OpenZFS/Illumos sources.  Among other
	things, the latest merge included the following improvements:</p>

      <ul>
	<li>The ARC now mostly stores compressed data, the same as is
	  stored on disks, decompressing them on demand.</li>

	<li>The L2ARC now stores the same (compressed) data as ARC without
	  recompression, and its RAM usage was further reduced.</li>

	<li>The largest size of indirect block possible has been increased
	  from 16KB fo 128KB, and speculative prefetching of indirect blocks
	  is now performed.</li>

	<li>Improved ordering of space allocation.</li>

	<li>The SHA-512t256 and Skein hashing algorithms are now
	  supported.</li>
      </ul>
    </body>
  </project>

  <project cat='arch'>
    <title>&os; on Marvell Armada38x</title>

    <contact>
      <person>
	<name>
	  <given>Marcin</given>
	  <common>Wojtas</common>
	</name>
	<email>mw@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Bartosz</given>
	  <common>Szczepanek</common>
	</name>
	<email>bsz@semihalf.com</email>
      </person>
    </contact>


    <body>
      <p>&os; includes support for the Marvell Armada38x platform, which
	has been tested and improved in order to gain production quality.
	Most of this effort has been invested in development and
	benchmarking of the on-chip Gigabit Ethernet (NETA) functionality.
	Numerous bug fixes, as well as some new features, have been
	introduced.</p>

      <p>Work completed this quarter includes:</p>

      <ul>
	<li>NETA rework and improvements.</li>

	<li>Enable multi-port support in PCIe 2.0 driver
	  (<tt>mv_pci_ctrl</tt>).</li>

	<li>Introduce an alternative, coherent, <tt>bus_dma</tt> for the
	  armv7 arch.</li>

	<li>AHCI controller support.</li>

	<li>SDHCI controller support.</li>

	<li>Improve the <tt>e6000sw</tt> etherswitch driver.</li>

	<li>Fix Marvell bus configuration for numerous interfaces.</li>
      </ul>

      <p>Along with support for new boards (SolidRun ClearFog and
	DB-88F6285-AP), all changes will be submitted upstream.</p>
    </body>

    <sponsor>
      Stormshield
    </sponsor>

    <sponsor>
      Semihalf
    </sponsor>

    <help>
      <task>Finalize NETA and prepare for submission.</task>

      <task>Submit remaining fixes and drivers.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>&os; Driver for the Annapurna Labs ENA</title>

    <contact>
      <person>
	<name>
	  <given>Jan</given>
	  <common>Medala</common>
	</name>
	<email>jan@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Jakub</given>
	  <common>Palider</common>
	</name>
	<email>jpa@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html">Amazon AWS Documentation of the ENA</url>
    </links>

    <body>
      <p>The Elastic Network Adapter (ENA) is a 25G SmartNIC developed by
	Annapurna Labs based on a custom ARMv8 chip.  This is a
	high-performance networking card that is available to AWS virtual
	machines.  It introduces enhancements in network utilization
	scalability on EC2 machines running various operating systems, in
	particular &os;.</p>

      <p>The goal of &os; enablement is to provide top performance and a
	wide range of monitoring and management features such as:</p>

      <ul>
	<li>multiple queue modes</li>

	<li>various offload functionality</li>

	<li>admin queue</li>

	<li>asynchronous notification</li>

	<li>robust hardware access</li>

	<li>scalable number of MSI-X interrupts</li>

	<li>counters</li>
      </ul>

      <p>The current state offers stable driver operation with good
	performance on machines running &os; directly on the hardware.</p>
    </body>

    <sponsor>
      Annapurna Labs &mdash; an Amazon company
    </sponsor>

    <help>
      <task>Optimize performance for virtualized environments.</task>

      <task>Prepare for submitting the driver as a Phabricator
	review.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Annapurna Labs Alpine</title>

    <contact>
      <person>
	<name>
	  <given>Jan</given>
	  <common>Medala</common>
	</name>
	<email>jan@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Michal</given>
	  <common>Stanek</common>
	</name>
	<email>mst@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Wojciech</given>
	  <common>Macek</common>
	</name>
	<email>wma@semihalf.com</email>
      </person>
    </contact>

    <body>
      <p>Alpine is a family of Platform-on-Chip devices, including
	multi-core 32-bit (first-gen Alpine) and 64-bit (Alpine V2) ARM
	CPUs, developed by Annapurna Labs.</p>

      <p>The primary focus areas of the Alpine platform are
	high-performance networking, storage and embedded applications.  The
	network subsystem features 10-, 25-, and 50-Gbit Ethernet
	controllers with support for virtualization, load-balancing,
	hardware offload and other advanced features.</p>

      <p>A basic patch set has already been committed to HEAD including:</p>

      <ul>
	<li>PCIe Root Complex support</li>

	<li>Cache Coherency Unit driver</li>

	<li>North Bridge Service driver</li>

	<li>Updated Alpine HAL</li>

	<li>Extended MSI support in GICv2 and GICv3 code</li>
     </ul>

      <p>Additional work, such as an MSI-X driver and full Ethernet
	support, is currently undergoing community review on Phabricator.</p>

      <p>The multi-user SMP system is stable and fully working, along with
	the 1G and 10G Ethernet links.</p>

      <p>The interrupt management code has been adjusted to work with the
	new INTRNG framework on both ARM32 and ARM64.</p>
    </body>

    <sponsor>
      Annapurna Labs &mdash; an Amazon company
    </sponsor>

    <sponsor>
      Semihalf
    </sponsor>
  </project>

  <project cat='doc'>
    <title>Documenting the History of Utilities in /bin and /sbin</title>

    <contact>
      <person>
	<name>
	  <given>Sevan</given>
	  <common>Janiyan</common>
	</name>
	<email>sevan@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.FreeBSD.org/ports/head/textproc/igor">The <tt>igor</tt> Port.</url>
      <url href="https://svnweb.FreeBSD.org/base/head/share/misc/bsd-family-tree?view=log">BSD Family Tree in Subversion</url>
      <url href="http://www.tuhs.org">The UNIX Heritage Society</url>
      <url href="http://man.cat-v.org">Cat-V Manual Library</url>
    </links>

    <body>
      <p>For EuroBSDcon, I began looking into inconsistencies within
	components inside our family of operating systems.  My workflow
	consisted of reading the documentation for a given utility and
	checking the history in the revision control system for missing
	fixes or functionality in the trees of NetBSD, &os;, OpenBSD, and
	DragonFly BSD.</p>

      <p>One thing which became obvious very quickly, was the
	inconsistency between operating systems about where and/or which
	version a utility originated in, despite our common heritage.</p>

      <p>I began with working through the man pages in &os;, verifying the
	details in pages which already had a history section and making
	patches for those which did not.</p>

      <p>From there, changes were propogated out to NetBSD, OpenBSD and
	Dragonfly BSD where applicable (not all utilities originated from
	the same source or implimentation, for example).</p>

      <p>This was a good exercise in:</p>

      <ul>
	<li>Becoming familiar with
	  <a href="http://mdocml.bsd.lv/man">mandoc</a>.</li>

	<li>Using tools such as the linting functionality in mandoc and
	  the <tt>igor</tt> documentation script.</li>

	<li>Becoming familiar with the locations where things are
	  documented and with external sources of historical information,
	  such as the BSD Family Tree which is included in the &os; base
	  system, and projects like <a href="http://www.tuhs.org">The UNIX
	    Heritage Society</a> and the <a href="http://man.cat-v.org">manual
	    library</a> on <a href="http://cat-v.org">cat-v.org</a> which
	  hosts copies of manuals such as those shipped with
	  <a href="https://en.wikipedia.org/wiki/Research_Unix">Research
	    UNIX</a>.  These manuals are not commonly available
	  elsewhere.</li>
      </ul>
    </body>

    <help>
      <task>Cover the remaining manuals for userland utilities, and maybe
	expand onto library and syscall APIs, though I say that without
	estimating the feasibility &mdash; components originating from a
	closed-source operating system are tricky to document the history
	of, due to the lack of availability of sources or sometimes even
	headers.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>VirtualBox Shared Folders Filesystem</title>

    <contact>
      <person>
	<name>
	  <given>Li-Wen</given>
	  <common>Hsu</common>
	</name>
	<email>lwhsu@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Oleksandr</given>
	  <common>Tymoshenko</common>
	</name>
	<email>gonzo@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/lwhsu/FreeBSD-vboxfs">Project Repository</url>
    </links>

    <body>
      <p>&os; provides an API for guest OSes to access shared folders on
	the host OS so that the kernel driver can expose them to the
	guest's userland.  This project aims to add such functionality to
	the VirtualBox Guest Additions driver.</p>

      <p>Good progress was made over last few months.  Developers were
	able to mount a filesystem in read-only mode and, with some
	limitations, in read-write mode.  The implementation still lacks
	some critical pieces, but the roadmap is clear.</p>
    </body>

    <help>
      <task>Finish the missing pieces.</task>
      
      <task>implement proper locking.</task>
      
      <task>general clean-up and bugfixes.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>evdev Support</title>

    <contact>
      <person>
	<name>
	  <given>Vladimir</given>
	  <common>Kondratiev</common>
	</name>
	<email>wulf@cicgroup.ru</email>
      </person>

      <person>
	<name>
	  <given>Oleksandr</given>
	  <common>Tymoshenko</common>
	</name>
	<email>gonzo@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/wulf7/&os;">evdev WIP Repository</url>
      <url href="https://wiki.FreeBSD.org/SummerOfCode2014/evdev_Touchscreens">Original evdev Proposal</url>
    </links>

    <body>
      <p><tt>evdev</tt> is a portable, API-compatible implementation of
	the Linux <tt>/dev/input/eventX</tt> interface.  It covers a wide
	variaty of input devices like keyboards, mice, and touchscreens
	(with multitouch support), and support for it is implemented in a
	lot of existing userland components like Qt, <tt>libinput</tt>, and
	<tt>tslib</tt>.</p>

      <p><tt>evdev</tt> support was started by Jakub Klama as a Google SoC
	2014 project, and later picked up and finished by Vladimir
	Kondratiev.  General API and <tt>evdev</tt> support bits for
	<tt>ukbd</tt> and <tt>ums</tt> were committed to HEAD.  Support was
	also added for TI's AM33xx touchstreen controller (the popular
	BeagleBone is based on the AM33xx) and the official touschreen for
	the Raspberry Pi.  Multitouch support for the Raspberry Pi was
	successfully demoed using the lastest Qt development branch.</p>
  </body>

    <help>
      <task>Documentation. In particular, manual pages are needed for the
	KPI.</task>

      <task>Support additional hardware.</task>

      <task>Enable <tt>evdev</tt> support in existing ports, and add new
	<tt>evdev</tt>-dependent ports.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/arm64</title>

    <contact>
      <person>
	<name>
	  <given>Andrew</given>
	  <common>Turner</common>
	</name>
	<email>andrew@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Jared</given>
	  <common>McNeill</common>
	</name>
	<email>jmcneill@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/arm64">&os; arm64 Wiki Entry</url>
      <url href="https://github.com/wca/crochet/tree/add-pine64-support">Using Crochet to Build &os; Images</url>
    </links>

    <body>
      <p>Transparent superpage support has been added.  This will allow
	&os; to create 2MiB blocks with a single pagetable and TLB entry.
	This has shown a small but significant improvement in the
	buildworld time on ThunderX machines.  Superpages have been
	enabled in head with and merged to stable/11, but they are
	disabled by default on stable/11 due to a lack of testing
	there.</p>

      <p>Support for the pre-INTRNG interrupt framework has been
	removed.  This means that arm64 requires INTRNG to even build.
	This has allowed various cleanups within the arm64 drivers that
	interact with the interrupt controller.</p>

      <p>The cortex Strings library from Linaro has been imported.  The
	parts of this that have been shown to be improvements over the
	previous C code were attached to the libc build.</p>

      <p>There is ongoing work to add ACPI support to the kernel.  On
	ThunderX, &os; can get to the mountroot prompt, however, due to
	incomplete ACPI tables the external PCIe support needed to support
	the netboot setup in the test cluster is not functional.</p>

      <p>Pine64 support has been committed to head.  &os; can now boot
	to multiuser with SMP enabled.  This includes support for clocks,
	the secure ID controller, USB Host controller, GPIOs, non-maskable
	interrupts, the AXP81x power management unit, cpu freqency and
	voltage scaling, MMC, UART, gigabit networking, the watchdog, and
	the thermal sensors.</p>
    </body>

    <sponsor>
      The FreeBSD Foundation
    </sponsor>

    <sponsor>
      ABT Systems Ltd
    </sponsor>
  </project>

  <project cat='ports'>
    <title>KDE on &os;</title>

    <contact>
      <person>
	<name>KDE on &os; team</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://FreeBSD.kde.org/">KDE on &os; website</url>
      <url href="https://FreeBSD.kde.org/area51.php">KDE ports staging area</url>
      <url href="https://wiki.FreeBSD.org/KDE">KDE on &os; wiki</url>
      <url href="https://mail.kde.org/mailman/listinfo/kde-FreeBSD">KDE/&os; mailing list</url>
      <url href="http://src.mouf.net/area51/log/branches/plasma5">Development repository for integrating Plasma 5 and KDE Frameworks 5</url>
      <url href="http://src.mouf.net/area51/log/branches/qt-5.7">Development repository for integrating Qt 5.7</url>
    </links>

    <body>
      <p>The KDE on &os; team focuses on packaging the KDE software and
	making sure that the experience of KDE and Qt on &os; is as good as
	possible.</p>

      <p>The following big updates were landed in the ports tree this
	quarter:</p>

      <ul>
	<li>Added a Qt5 option to <tt>multimedia/mlt</tt>.</li>

	<li>Added the <tt>devel/grantlee5</tt> port and, with it,
	  <tt>Uses/grantlee.mk</tt>.</li>

	<li>Added the <tt>multimedia/gstreamer1-qt5</tt> port.</li>

	<li>Added the <tt>net-im/telepathy-qt5</tt> port.</li>

	<li>CMake was updated to versions 3.6.1 and 3.6.2.</li>

	<li>An important fix was made to <tt>qmake</tt>, where the clang
	  version was not correctly detected.</li>

	<li>Qt 5.6.1 was committed to ports.</li>

	<li>Phonon and its backend to were updated to 4.9.0 in preparation
	  for Qt 5.6.1.</li>

	<li>Updated the <tt>net-im/telepathy-qt4</tt> port to 0.9.7.</li>

	<li>Various LibreSSL related fixes by Matthew Rezny.</li>

	<li>bsd.kde4.mk has been replaced by Uses/kde.mk.</li>

	<li><tt>www/webkit-qt5</tt> was fixed to depend on the systems
	  leveldb.</li>
      </ul>

      <p>In our development repository, we have done the following
	work:</p>

      <ul>
	<li>The plasma5 branch has been kept up to date with KDE's upstream and
	  contains ports for Frameworks 5.26.0, Plasma Desktop 5.8.0 and
	  Applications 16.08.1 (branches/plasma5).</li>
      </ul>

    </body>
  </project>

  <project cat='team'>
    <title>The &os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The third quarter started with the handover to the ninth Core
	team as it took office.  With four members returning from the
	previous core (Baptiste Daroussin, Ed Maste, George Neville-Neil
	and Hiroki Sato); one returning member after a term away (John
	Baldwin) and four members new to core (Allan Jude, Kris Moore,
	Benedict Reuschling and Benno Rice) the new core team represents
	just about the ideal balance between experience and fresh
	blood.</p>

      <p>Beyond handing over all of the ongoing business, reviewing
	everything on Core's agenda and other routine changeover
	activities, the first action of the new core was to respond to a
	query from Craig Rodrigues concerning how hardware supplied to the
	project through donations to the &os; Foundation was being
	used.</p>

      <p>The Foundation does keep records of what hardware has been
	supplied over time and has some idea of the original purpose that
	hardware was provisioned for, but does not track the current usage
	of the project's hardware assets.  Cluster administration keep
	their own configuration database, but this is not suitable for
	general publication and covers much more than Foundation supplied
	equipment.  After some discussion it was decided that updated
	information about the current disposition of Foundation supplied
	equipment should be incorporated in the Foundation's annual
	report.</p>

      <p>Ensuring that all of the &os; code base is supplied under open
	and unencumbered licensing terms and that we do not infringe on
	patent terms or otherwise act counter to any legal requirements
	are some of Core's primary concerns.  During this quarter, there
	were three items of this nature.</p>

      <ul>
	<li>Importing Concurrency Kit.  In consultation with the
	  Foundation's legal counsel, it was determined that the relevant
	  patents on the 'Read Copy Update' synchronization mechanisms
	  have expired, and consequently the import of selected parts of
	  concurrency kit was approved.</li>

	<li>The proposal to create a shadow GPLv3 toolchain repository
	  was put to the community.  Ultimately the whole idea has been
	  rendered largely redundant by faster than anticipated progress
	  at integrating the latest LLVM toolchain on most of the
	  interesting system architectures.  The goal of a GPL-free base
	  system is within our grasp.</li>

	<li>Reports that GPL code has been pasted into linuxkpi sources
	  are under investigation.  Core would like to stress that great
	  care must be taken to avoid inadvertent license infringement,
	  especially when implementing hardware interfaces or similar
	  where there is limited scope to invent new constants or
	  otherwise make it clear this is a novel implementation.</li>
      </ul>

      <p>Work on LLVM has thrown up problems with the presence of
	certain pre-compiled binary-only drivers as part of the GENERIC
	kernel.  Core has adopted the policy that such binary-only code
	should be moved to loadable modules and that the GENERIC kernel
	must be compiled entirely from original sources.</p>

      <p>The item that has absorbed the largest portion of Core's
	attention this quarter concerns the project's handling of security
	vulnerabilities in bspatch(1), libarchive(3), FreeBSD-update(8)
	and portsnap(8).  A partial fix was applied in
	&os;-SA-16:25.bspatch but this lacks fixes to libarchive code
	that were not yet available from upstream.</p>

      <p>SecTeam receives privileged early reports of many
	vulnerabilities and consequently has a strict policy of not
	commenting publicly until an advisory and patches have been
	published.  Early access to information about vulnerabilities is
	contingent on their ability to avoid premature disclosure, and
	without such, they could not have security advisories and
	patches ready to go immediately the vulnerability is
	published.</p>

      <p>However, in this case, vulnerabilities were already public and
	the lack of any official response from the &os; project was
	leading to concern amongst users and some critical press coverage.
	Core stepped in and published a statement clarifying the situation
	and the particular difficulties involved in securely modifying the
	mechanisms used to deliver security patches.  Core believes that
	prompt notification and discussion of the implications and
	possible workarounds to any <i>public</i> vulnerability should not wait
	on the availability of formal OS patches.</p>

      <p>The OpenSSH project has deprecated DSA keys upstream.  &os; had
	kept DSA keys enabled in the later 10.x releases for compatibility
	reasons, but with the release of 11.0 the time has come to
	synchronise again with upstream.  Since there are numerous DSA
	keys in use in the &os; cluster this has necessitated an
	exercise to get replacement keys installed.  Core would like to
	thank David Wolfskill and the accounts team for handling the surge
	in key changes with a great deal of aplomb.</p>

      <p>During this quarter we welcomed Michael Zhilin, Imre Vadasz,
	Steve Kiernan and Toomas Soome as new source committers.  Over the
	same period, we said farewell to Martin Wilke and Erwin Lansing
	who have handed in their commit bits.  We wish them well in their
	future endeavours and hope to see them return as soon as they
	can.</p>
    </body>
  </project>
</report>
