<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>July-September</month>

    <year>2015</year>
  </date>

  <section>
    <title>Introduction</title>

    <p><strong>This is a draft of the July&ndash;September 2015
      status report.  Please check back after it is finalized, and
      an announcement email is sent to the &os;-Announce mailing
      list.</strong></p>

    <?ignore
    <p>This report covers &os;-related projects between July and
      September 2015.  This is the third of four reports planned for
      2015.</p>

    <p>The third quarter of 2015 was another productive quarter for
      the &os; project and community. [...]</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from October
      to December 2015 is January 7, 2016.</p>
     ?>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='kern'>
    <title>ioat(4) driver import</title>

    <contact>
      <person>
	<name>
	  <given>Jim</given>
	  <common>Harris</common>
	</name>
	<email>jimharris@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Conrad</given>
	  <common>Meyer</common>
	</name>
	<email>cem@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://en.wikipedia.org/wiki/I/O_Acceleration_Technology">Wikipedia
	article on IOAT</url>
      <url href="https://svnweb.FreeBSD.org/base?view=revision&amp;revision=r287117">Commit
	importing ioat(4)</url>
    </links>

    <body>
      <p>A new driver, ioat(4), was added to the tree.  ioat(4)
	supports Intel's I/O Acceleration Technology devices which are found
	on some Intel server systems.</p>

      <p>These devices are DMA offload engines, which can accelerate
	some I/O-heavy applications by offloading memory copies from the main
	CPU to the I/OAT unit.  This acceleration is not transparent;
	applications must be adapted to take advantage of the hardware.</p>

      <p>Some I/OAT models support more advanced copying modes, like
	XOR; these modes are not yet supported in the ioat(4) driver.</p>
    </body>

    <sponsor>
      Intel Corporation
    </sponsor>

    <sponsor>
      EMC / Isilon Storage Division
    </sponsor>

    <help>
      <task>
	<p>Further testing, especially on a range of device models other
	  than BDXDE (looking for volunteers here).</p>
      </task>

      <task>
	<p>Support for the more advanced copy modes.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>IPsec Upgrades</title>

    <contact>
      <person>
	<name>
	  <given>George</given>
	  <common>Neville-Neil</common>
	</name>
	<email>gnn@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>John-Mark</given>
	  <common>Gurney</common>
	</name>
	<email>jmg@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ermal</given>
	  <common>Lu√ßi</common>
	</name>
	<email>eri@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>IPsec is now enabled by default in the GENERIC kernel
	configuration, and work is proceeding to speed things up in various
	ways.  The latest changes are the addition, by &a.jmg;, &a.eri;, and
	&a.gnn;, of AES modes both in hardware and in software.  Part of this
	work also includes more benchmarks undertaken using Conductor in the
	netperf project.  Results have been reported at BSDCan and vBSDcon
	with more to come at EuroBSDcon and BSDCon Brasil.
      </p>
    </body>

    <sponsor>
      Netgate
    </sponsor>

    <sponsor>
      FreeBSD Foundation
    </sponsor>

    <help>
      <task>
	<p>Performance improvements and other tweaks are ongoing.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>DTrace and TCP</title>

    <contact>
      <person>
	<name>
	  <given>George</given>
	  <common>Neville-Neil</common>
	</name>
	<email>gnn@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://svnweb.freebsd.org/changeset/base/287759" />
    </links>

    <body>
      <p>With the advent of DTrace we are able to replace many of
	the internal kernel debugging options, such as TCPDEBUG,
	with statically defined tracepoints (SDTs).  Tracepoints have now
	been added to the system that replicate the functionality of the
	TCPDEBUG kernel option.  No new kernel options need to be added
	&mdash; they are standard with any kernel that has DTrace, which
	is included in the default GENERIC kernels in 10.x and HEAD.
      </p>
    </body>

    <sponsor>
      Limelight Networks
    </sponsor>
  </project>

  <project cat='proj'>
    <title>FreeBSD on the Acer C720 Chromebook</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Gmelin</common>
	</name>
	<email>freebsd@grem.de</email>
      </person>
    </contact>

    <links>
      <url href="http://blog.grem.de/pages/c720.html">Blog post on
	how to get things working</url>
      <url href="http://blog.grem.de/sysadmin/FreeBSD-On-AcerC720-Merged-2015-07-25-23-30.html">Blog
	post with links to commits in CURRENT</url>
      <url href="http://blog.grem.de/sysadmin/FreeBSD-10.2-On-AcerC720-2015-09-19-17-00.html">Backported
	patch for 10.2-RELEASE</url>
    </links>

    <body>
      <p>The Acer C720 Chromebook is an affordable (under $200) and
	powerful little laptop, that provides a battery life of up to six
	hours running FreeBSD.  It is a great machine for travelling and
	coding in general.  The machine is fully functional, meaning that
	all essential devices work: Keyboard, trackpad, light sensor,
	backlight control, display in VESA mode (fast), external Display
	on HDMI (only VESA mirror mode), sound, USB ports, SD card slot,
	camera and Atheros Wireless.</p>

      <p>This quarter, this project extended previous work on the
	boot process and keyboard driver as well as the smbus(4) driver.
	It added three new drivers: ig4(4), cyapa(4) and isl(4).</p>

      <p>Much of the development was originally done in late 2014;
	since then, the patches have been massively improved and merged
	into CURRENT, so that all relevant devices work without manual
	patching.</p>

      <p>For those who are unable to run CURRENT, there is a
	backported patch to 10.2-RELEASE.</p>

      <p>Thanks to everyone who helped in the process, I couldn't
	have done it without you (you know who you are).
      </p>

    </body>
  </project>

  <project cat='kern'>
    <title>Cavium LiquidIO Smart NIC driver</title>

    <contact>
      <person>
	<name>
	  <given>Stanislaw</given>
	  <common>Kardach</common>
	</name>
	<email>kda@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Zyta</given>
	  <common>Racia</common>
	</name>
	<email>zr@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="http://www.cavium.com/LiquidIO_Application_Acceleration_Adapters.html">LiquidIO
	product page</url>
    </links>

    <body>
      <p>This project aims to add support for the LiquidIO family
	of high-performance programmable accellerator 10/40-gigabit
	Ethernet network adapters.  The currently developed kernel driver
	supports CN6640- and CN6880-based PCIe cards, enabling the
	following features:</p>

      <ul>
	<li>A CNNIC API for controlling/interacting with the smart NIC
	  from user and kernel space including:
	  <ul>
	    <li>Handling multiple concurrent applications running on the
	      same device</li>
	    <li>Request/reply mechanism for (a)synchronous
	      ordered/unordered communication</li>
	    <li>Remote memory operations</li>
	    <li>Device shutdown/reset</li>
	  </ul>
	</li>
	<li>A basic NIC module utilizing the CNNIC API and a
	  Cavium-provided NIC firmware.  This module provides:
	  <ul>
	    <li>Single/multi-queue TX</li>
	    <li>Hardware TCP/UDP checksum offloading</li>
	    <li>Large Receive Offload</li>
	    <li>Promiscous mode</li>
	  </ul>
	</li>
	<li>Sysctl-based device statistics and configuration view</li>
	<li>Custom firmware loading via user-built modules and
	  &os;'s firmware(9) mechanism.</li>
      </ul>

      <p>The project is currently being developed in house and is
	currently being prepared for upstream.  We plan on making it
	available in &os; 11.</p>

    </body>

    <sponsor>
      Cavium
    </sponsor>

    <sponsor>
      Semihalf
    </sponsor>

    <help>
      <task>Upstream the code to &os; HEAD.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os;&nbsp;Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url
	href="https://www.freebsd.org/releases/10.2R/announcement.html">&os;&nbsp;10.2-RELEASE
	announcement</url>
      <url
	href="http://ftp.freebsd.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os; development
	  snapshots</url>
      <url
	href="https://www.freebsd.org/releases/10.3R/schedule.html">&os;&nbsp;10.3-RELEASE
	  schedule</url>
      <url
	href="https://www.freebsd.org/releases/11.0R/schedule.html">&os;&nbsp;11.0-RELEASE
	  schedule</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is responsible for setting
	and publishing release schedules for official project releases
	of &os;, announcing code freezes, and maintaining the
	respective branches, among other things.</p>

      <p>In mid-August, the &os;&nbsp;Release Engineering Team
	released &os;&nbsp;10.2-RELEASE, two weeks earlier than the
	original schedule anticipated.</p>

      <p>The &os;&nbsp;Release Engineering Team would like to thank
	all that have tested the BETA and RC builds and reported
	issues during the release cycle.</p>

      <p>The &os;&nbsp;Release Engineering Team, with approval from
	the &os;&nbsp;Core Team, appointed &a.marius; as the Deputy
	Lead.</p>
    </body>

    <sponsor>
	The FreeBSD Foundation
    </sponsor>
  </project>

  <project cat='proj'>
    <title>Porting bhyve to ARM-based platforms</title>

    <contact>
      <person>
	<name>
	  <given>Mihai</given>
	  <common>Carabas</common>
	</name>
	<email>mihai@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Peter</given>
	  <common>Grehan</common>
	</name>
	<email>grehan@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/SummerOfCode2015/PortingBhyveToArm">Project
	Wiki page</url>
    </links>

    <body>
      <p>This summer we've started porting bhyve onto ARMv7
	platforms.  We rewrote the low-level routines for ARM processors,
	while trying to preserve the hypervisor API originally created for
	the x86 architectures.  We managed to bring up a &os; guest up to
	the point of initializing interrupts.  There is still work to be
	done in order to virtualize the interrupts and the timer.  As
	short-term plan after finishing the interrupts and the timer is
	porting to a real hardware platform (Cubie2).
      </p>
    </body>

    <help>
      <task>
	<p>Virtualize interrupts and timer</p>
      </task>

      <task>
	<p>Port to a real hardware platform</p>
      </task>

      <task>
	<p>Create SMP support for bhyve-on-arm</p>
      </task>

      <task>
	<p>Port to ARMv8</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Bringing GitLab into the Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Torsten</given>
	  <common>Z√ºhlsdorff</common>
	</name>
	<email>ports@toco-domains.de</email>
      </person>

      <person>
	<name>
	  <given>Michael</given>
	  <common>Fausten</common>
	</name>
	<email>ports@michael-fausten.de</email>
      </person>
    </contact>

    <links>
      <url href="https://bugs.FreeBSD.org/bugzilla/show_bug.cgi?id=202468">PR
	for the new Port</url>
      <url href="https://github.com/t-zuehlsdorff/gitlabhq/blob/master/doc/install/installation-freebsd.md">Installation
	guide</url>
      <url href="https://github.com/gitlabhq/gitlabhq/">GitLab
	Source Tree</url>
    </links>

    <body>
      <p>GitLab is a web-based Git repository manager with many
	features, used by more than 100.000 organizations, including NASA
	and Alibaba.  It also is a very long-standing entry on the
	&quot;Wanted Ports&quot; list on the &os; Wiki.</p>

      <p>In the last month there was steady progress, which finally
	resulted in the PR for adding the new port.  In addition to the
	many dependencies &a.pgollucci; is working on, there was already a
	large amount of work done.  In addition to  many new or updated
	rubygems, Rails 4.1 was resurrected.  Many committers were
	involved in the process and guided us through the various problems
	and pitfalls.</p>

      <p>Because of the number of dependencies &mdash; we nearly hit
	100 &mdash; making progress takes some time.  In the meantime,
	there is already a new major version of GitLab released, which
	requires even more dependencies and updates.  Work on this version
	is already in progress, but the first goal is to get the latest
	stable version from the 7.14 branch into the ports tree.
      </p>
    </body>

    <sponsor>
      anyMOTION GRAPHICS GmbH, D√ºsseldorf, Germany
    </sponsor>

    <help>
      <task>
	<p>Closing all the PRs of the dependencies</p>
      </task>

      <task>
	<p>Committing the GitLab port itself</p>
      </task>

      <task>
	<p>Update the port to the latest version of the 8.x branch</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Xfce on &os;</title>

    <contact>
      <person>
	<name>&os; Xfce Team</name>
	<email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Xfce">&os; Xfce Project</url>
      <url href="https://www.assembla.com/spaces/xfce4/subversion/source">&os; Xfce Repository</url>
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms, such as &os;.  It aims to be fast and
	lightweight, while still being visually appealing and easy to
	use.</p>

      <p>During this quarter, the team has kept these applications
	up-to-date:</p>

      <ul>
	<li><tt>science/xfce4-equake-plugin</tt> 1.3.8</li>
	<li><tt>sysutils/xfce4-power-manager</tt> 1.5.2</li>
	<li><tt>x11/libexo</tt> 0.10.7</li>
	<li><tt>x11/xfce4-embed-plugin</tt> 1.6.0</li>
	<li><tt>x11/xfce4-verve-plugin</tt> 1.1.0</li>
	<li><tt>x11/xfce4-whiskermenu-plugin</tt> 1.5.1</li>
	<li><tt>x11-wm/xfce4-desktop</tt> 4.12.3</li>
	<li><tt>www/midori</tt> 0.5.11</li>
      </ul>

      <p>We also follow the unstable releases (available in our
	experimental repository) of:</p>

      <ul>
	<li><tt>sysutils/xfce4-panel-switch</tt> 1.0.2 (utility to backup
	  panel layouts)</li>
	<li><tt>x11/xfce4-dashboard</tt> 0.5.1</li>
      </ul>

      <p>In the <tt>trunk</tt> branch, <tt>x11-wm/xfce4-panel</tt>
	contains a patch to support <tt>sysutils/xfce4-panel-switch</tt>
	(available through the panel preferences).</p>
    </body>

    <help>
      <task>
	<p>Test the new stable release of GLib 2.46.x with the
	  kqueue/kevent backend enabled (it was disabled with revision <a
	  href="https://svnweb.FreeBSD.org/ports?view=revision&amp;revision=393663">r393663</a>.
	  Currently several features are broken, especially in Thunar,
	  xfce4-panel, and Xfdashboard.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Node.js Modules</title>

    <contact>
      <person>
	<name>
	  <given>Olivier</given>
	  <common>Duchateau</common>
	</name>
	<email>olivierd@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.assembla.com/spaces/cozycloud/subversion/source">Node.js
	modules</url>
      <url href="https://people.FreeBSD.org/~olivierd/porters-handbook/using-nodejs.html">Pre-draft
	documentation</url>
    </links>

    <body>
      <p>Node.js is a platform built on Chrome's JavaScript runtime
	for easily building fast, scalable, network applications.  It uses
	an event-driven, non-blocking I/O model that makes it lightweight
	and efficient, perfect for data-intensive real-time applications
	that run across distributed devices.</p>

      <p>The goal of this project is to make it easy to install the
	modules available on the <a href="http://npmjs.org/">npm package
	registry</a>.</p>

      <p>Currently, the repository contains more than 100 new ports,
	in particular:</p>

      <ul>
	<li>CoffeeScript (a programming language that transcompiles to
	  JavaScript)</li>
	<li>node-gyp (allows building Node.js addons, often written in
	  C or C++)</li>
	<li>Request (a simplified HTTP client)</li>
      </ul>

      <p>We have also written several helpers for the porting, available
	in our experimental repository.
      </p>
    </body>

    <help>
      <task>
	<p>Bring in grunt.js (and modules), the JavaScript task runner.</p>
      </task>
      <task>
	<p>Put more effort into support of node-gyp in the USES
	  framework</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Root remount</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napierala</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://reviews.freebsd.org/D3693">Userland
	code review</url>
    </links>

    <body>
      <p>One of the long missing features of FreeBSD was the ability
	to boot up with a temporary rootfs, configure the kernel to
	be able to access the real rootfs, and then replace the
	temporary root with the real one.
	In Linux, the functionality is known as pivot_root.
	The reroot projects aims to provide similar functionality in
	a different, slightly more user-friendly way: rerooting.
	Simply put, from the user point of view it's as simple as
	running "reboot -r", which makes the system perform a partial
	shutdown, killing all processes and unmounting the rootfs,
	and then partial bringup, mounting the new rootfs, running
	init, and running the startup scripts as usual.</p>

      <p>The kernel part of the project was committed to 11-CURRENT.
	The userland part is at "finishing touches" stage, and is
	expected to be committed soon.
	A merge to stable/10 is planned and reroot support should
	be included in &os; 10.3.</p>
    </body>

    <sponsor>
      The FreeBSD Foundation
    </sponsor>
  </project>

  <project cat='proj'>
    <title>Clang, llvm, lldb, compiler-rt and libc++ updated to 3.7.0</title>

    <contact>
      <person>
	<name>
	  <given>Dimitry</given>
	  <common>Andric</common>
	</name>
	<email>dim@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Roman</given>
	  <common>Divacky</common>
	</name>
	<email>rdivacky@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Davide</given>
	  <common>Italiano</common>
	</name>
	<email>davide@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://llvm.org/releases/3.7.0/docs/ReleaseNotes.html">LLVM 3.7.0 Release Notes</url>
      <url href="http://llvm.org/releases/3.7.0/tools/clang/docs/ReleaseNotes.html">Clang 3.7.0 Release Notes</url>
      <url href="https://bugs.freebsd.org/201377">PR 201377 Ports exp-run</url>
    </links>

    <body>

      <p>We have updated clang, llvm, lldb, compiler-rt and libc++
	in base to 3.7.0 release.
	These all contain numerous improvements; please see the linked
	release notes for more detailed information.
	This brings us completely up-to-date with the latest upstream
	versions of these projects.  Meanwhile, &a.emaste; is working
	on importing the llvm.org version of libunwind.</p>

      <p>Like the 3.5.x and 3.6.x releases, these components require
	C++11 support to build.  At this point, FreeBSD 10.0 and later
	provide that support, at least on x86.
	Currently, there are no solid plans to MFC these versions to
	any stable branches, due to the difficulties this would
	introduce for the usual upgrade scenarios.</p>

      <p>Thanks to &a.emaste; and &a.andrew; for their help with this
	import, and thanks to &a.antoine; for several ports exp-runs.
      </p>

      <p>During the first ports exp-run, some major problems were
	found, one introduced by a clang bug which caused pow() to
	generate floating point exceptions in some cases, which in
	turn caused libpng to fail to build, and one bug in
	libjpeg-turbo, which was caused by undefined behavior.
	These two problems took some time to fix, after which another
	exp-run was done, and this resulted in about a dozen newly
	failed ports.  For almost all of these new failures, fixes
	were submitted, and linked to the original PR 201377 for
	the exp-run.</p>

    </body>

    <help>
      <task>
	Commit ports fixes for dependencies of PR 201377.
      </task>
      <task>
	Test and report issues with the new tool chain.
      </task>
    </help>
  </project>

  <project cat='misc'>
    <title>UEFI Boot and Framebuffer Support</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@freebsd.org</email>
      </person>
      <person>
	<name>
	  <given>Marcel</given>
	  <common>Moolenaar</common>
	</name>
	<email>marcel@freebsd.org</email>
      </person>
    </contact>

    <body>
      <p>A number of UEFI bug fixes were committed over the last
	quarter, improving compatibility with different UEFI
	implementations.
	This includes improvements to EFI's vt(4) framebuffer
	driver, efifb, to handle systems with high resolution
	displays and unusual framebuffer stride values.
	In particular this improves compatibility with a large
	number of recent Apple MacBook Pros and other Macs.</p>
    </body>
    <help>
      <task>Test FreeBSD-CURRENT and FreeBSD-STABLE snapshots on
	a variety of UEFI implementations.</task>
    </help>
  </project>

  <project cat="ports">
    <title>The Graphics stack on FreeBSD</title>

    <contact>
      <person>
	<name>
	  <common>FreeBSD Graphics team</common>
	</name>
	<email>freebsd-x11@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">Graphics stack roadmap and supported hardware matrix</url>
      <url href="http://blogs.freebsdish.org/graphics/">Graphics stack team blog</url>
      <url href="https://github.com/freebsd/freebsd-ports-graphics">Ports development tree on GitHub</url>
    </links>

    <body>
      <p>The Mesa ports were updated to 10.6.8. At the same time the
	ports received a major overhaul to make sure all ports are
	correctly configured.
	Also the dual version support was removed, there is only one
	mesa version for all supported FreeBSD versions.
	The libosmesa port was merged into the Mesa framework.</p>

      <p>Another big item that was included in the Mesa port was
	OpenCL.  There are two GPU based OpenCL implimentations
	namely:
	lang/clover for supported Radeon cards and
	lang/beignet for supported Intel cards (currently only
	Ivybridge).
	Thanks go to Johannes Dieterich, O. Hartman, and Koop Mast
	for making this happen.</p>

      <p>Now that Mesa is up-to-date, we can do the same with the
	X.Org server.
	Currently at 1.14, an update to 1.17 is ready.
	It should be committed shortly.</p>

      <p>On the kernel side progress has been made with the
	i915 update.  The driver is able to attach.
	There are some reports that the X.Org server starts, but Mesa
	is unhappy so acceleration doesn't work yet.
	If you want to test, instructions will be posted on the wiki,
	in the i915 update article (see links).
	At this stage, we can only accept patches though, we won't be
	able to provide support.</p>

      <p>We attended two conferences: XDC 2015 in Toronto and
	EuroBSDcon 2015 in Stockholm.
	Reports will be posted on the blog.</p>
    </body>

    <help>
      <task>See the "Graphics" wiki page for up-to-date
	information.</task>
    </help>
  </project>

  <project cat='misc'>
    <title>The FreeBSD Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSDFoundation.org/">Foundation
	website</url>
      <url href="http://freebsdjournal.com/">&os; Journal</url>
    </links>

    <body>
      <p>The FreeBSD Foundation is a 501(c)(3) non-profit organization
	dedicated to supporting and promoting the &os; Project and
	community worldwide.
	Funding comes from individual and corporate donations and is
	used to fund and manage development projects, conferences and
	developer summits, and provide travel grants to &os;
	developers.  The Foundation purchases hardware to improve and
	maintain &os; infrastructure and publishes &os; white papers
	and marketing material to promote, educate, and advocate for
	the &os; Project.
	The Foundation also represents the &os; Project in executing
	contracts, license agreements, and other legal arrangements
	that require a recognized legal entity.</p>

      <p>Here are some highlights of what we did to help &os; last
	quarter:</p>

      <p>Anne Dickison and Deb Goodkin attended OSCON to promote
	&os;.</p>

      <p>&a.rwatson; organized and ran the Cambridge &os;
	Developer Summit 2015 ("BSDCam").
	We provided travel grants to two &os; developers to attend
	the summit.
	Three Foundation board/staff members attended too.</p>

      <p>&a.gnn; attended the ARM Partner Meeting where
	he met with 15 silicon and systems vendors to present the
	unique traits and qualities of &os; and work on setting up
	partnerships with the companies building and deploying
	ARM hardware.</p>

      <p>George and &a.rwatson; collaborated in Cambridge on
	developing further &os;-based teaching material at
	undergraduate and masters levels.
	Part of this project was funded by the Foundation.</p>

      <p>George planned and ran the DevSummit at vBSDCon 2015.</p>

      <p>We were  proud to be a sponsor of
	<url href="http://www.verisign.com/en_US/internet-technology-news/verisign-events/vbsdcon/index.xhtml">vBSDCon
	2015</url>, Sept 11-13 in Washington DC.
	&a.gnn; and &a.emaste; presented "Supporting a
	BSD Project" at the conference.
	&a.dru;, &a.gjb;, &a.gnn;, and &a.emaste;
	attended and represented the Foundation at both vBSDCon and
	the &os; Developer Summit that preceded it.
	We had many people stop by our table to make a donation,
	and it was another great opportunity to talk and work with
	people face-to-face.</p>

      <p>Cheryl Blain and &a.jhb; promoted the Foundation and
	&os; at the SNIA 2015 Storage Developer Conference, in
	Santa Clara, California, Sept 21-24.
	The Foundation was also a sponsor.</p>

      <p>We sponsored Andy Turner to attend Linaro Connect in
	San Francisco, Sept 21-25.</p>

      <p>&a.emaste;, our project development director, attended the
	X.Org Developer's Conference (XDC) in Toronto, Ontario.</p>

      <p>We sponsored the 2015 nginx Conference and sent &os;
	community member &a.jhb;.</p>

      <p>George  Neville-Neil continued planning the
	<url href="https://wiki.freebsd.org/201511VendorDevSummit">2015
	Silicon Valley Vendor Summit</url>, including securing
	the venue.</p>

      <p>&a.bcr; and &a.erwin; helped plan and
	organize the EuroBSDCon &os; Developer Summit.
	This included setting up the working groups, securing the
	venue, and getting the T-shirts made.</p>

      <p>Benedict helped organize, and he and &a.dru; participated
	in, the
	<url href="https://wiki.freebsd.org/201507DevSummit">&os;
	Hackathon</url> in the Linuxhotel in Essen, Germany.
	It was a successful weekend of fixing bugs and collaborating
	with others.</p>

      <p>&a.dru; taught a &os; class in Berlin, Germany
	July 29-31.</p>

      <p>We were a sponsor of
	<url href="http://womencourage.acm.org/index.cfm">womENcourage
	2015</url>, in Uppsala Sweden, Sept 24-26.
	Dru was the moderator for a panel on
	<url href="http://womencourage.acm.org/panel2.cfm">Open Source
	as a Career Path</url>.
	All the panelists were &os; contributors including
	Dan Langille, Allan Jude, Benedict Reuschling,
	and Deb Goodkin.
	We also had a table at the job fair and talked to a lot of
	students and professors about the benefits of working on &os;
	as an alternative to an internship, teaching about &os; in
	university classes, and hosting &os; events at their schools.
	Dan taught a workshop on How to Contribute to an Open Source
	project.
	Deb participated in this workshop and started a discussion on
	offering a similar workshop at BSD and non-BSD conferences.
	The workshop would be titled "How to Contribute to &os;",
	and participants would learn how to contribute documentation
	to the Project.</p>

      <p>We continued to publish our monthly newsletters keeping the
	community informed on what we are doing including event
	recaps, testimonials, project updates, and upcoming events.
	We received testimonials from Microsoft, NYCBus, and
	ScaleEngine.
	We also continued to approach companies to provide us with
	testimonials to help promote their use of &os;.</p>

      <p>Anne Dickison rebooted the Faces of &os; series and is
	working with &os; contributors on writing their stories.
	She continued to produce more &os; Swag and literature to
	promote &os;, as well as advocating for &os; over our social
	channels and with new partnerships.</p>

      <p>We reached our 2015 goal of 10,000 &os; Journal subscribers,
	and we published a new Open Journal article on our website,
	to help promote the Journal.
	We also started offering a new subscription bundle, where you
	can buy all the 2014 issues.
	The July/August issue what published.</p>

      <p>&a.gibbs; began a semester long &os; class at a middle
	school in Boulder, Colorado.
	We are using the BeagleBone Black (BBB) to run &os; connected
	to Macs and PCs.
	We‚Äôve received a lot of support, both internally, and from
	the Project, to get the &os; images to work on the BBB with
	the Macs and PCs.
	It‚Äôs been a great collaborative effort with community
	members, and this will help future classes in being able
	to support inexpensive platforms for teaching &os;.</p>

      <p>Work continued on creating &os; curriculum for a half day
	workshop.
	Hopefully this will be available in late Spring.</p>

      <p>We provided legal support for the Project including granting
	trademark permission for some users and companies who
	requested permission to put the &os; logo on their websites
	and marketing literature.</p>

      <p>We met with commercial users to get their input on what
	they‚Äôd like to see supported in &os;.
	We also do this to help connect &os; developers with
	commercial users to help facilitate collaboration.</p>

      <p>&os; Foundation employee and Release Engineer, &a.gjb;,
	was extremely busy during this quarter, working on a number
	of exciting areas of the &os; Project.
	Some of the highlights include:
	<ul>
	  <li>Code cleanup and bug fixes to several parts of the
	    release build code, and finished adding support for
	    automatically uploading cloud provider images, which was
	    merged to the stable/10 branch before the code freeze.
	    The 10.2-RELEASE cycle spanned a 9-week timeframe overall,
	    from the start of the code slush.</li>
	  <li> With the &os; Release Engineering Team, released two
	    BETA builds and three RC builds for the 10.2-RELEASE
	    cycle, with the final release announced mid-August,
	    two weeks ahead of the original schedule.</li>
	  <li>With the &os; Cluster Administrators Team, assisted with
	    a number of general updates and enhancements to the &os;
	    infrastructure.</li>
	</ul>
      </p>
    </body>
  </project>

  <project cat='proj'>
    <title>Multiqueue Testing</title>

    <contact>
      <person>
	<name>
	  <given>Tiwei</given>
	  <common>Bie</common>
	</name>
	<email>btw@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Hiren</given>
	  <common>Panchasara</common>
	</name>
	<email>hiren@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>George</given>
	  <common>Neville-Neil</common>
	</name>
	<email>gnn@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Robert</given>
	  <common>Watson</common>
	</name>
	<email>rwatson@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/SummerOfCode2015/MultiqueueTestingProject">Project
	Wiki Page</url>
    </links>

    <body>
      <p>The aim of this project is to design and implement
	infrastructure to validate that a number of the network stack's
	multiqueue behaviours are functioning as expected.</p>

      <p>At present, most parts of this project have been
	implemented.  It mainly consists of two parts:</p>

      <ol>
	<li>A general mechanism to collect the per-ring per-cpu
	  statistics that can be used by all NIC drivers, and extensions to
	  netstat(1) to report these statistics.</li>

	<li>A suite of network stack behavior testing programs that consists
	  of:
	  <ul>
	    <li>a virtual multiqueue ethernet interface (vme)</li>
	    <li>a UDP packet generator based on vme</li>
	    <li>a UDP server based on socket(2)</li>
	    <li>a TCP client based on lwip and vme</li>
	    <li>a TCP server based on socket(2).</li>
	  </ul>
	</li>
      </ol>

      <p>However, it still needs further refinements to make it suitable for
	committing to &os;-HEAD.</p>
    </body>

    <sponsor>
      Google Summer of Code 2015
    </sponsor>
  </project>

  <project cat='ports'>
    <title>GNOME on &os;</title>

    <contact>
      <person>
	<name>&os; GNOME Team</name>
	<email>freebsd-gnome@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/gnome">&os; Gnome website</url>
      <url href="https://github.com/freebsd/freebsd-ports-gnome">Devel repository</url>
      <url href="https://wiki.gnome.org/Projects/Jhbuild/FreeBSD">Upstream build bot</url>
      <url href="https://www.FreeBSD.org/doc/en_US.ISO8859-1/books/porters-handbook/using-gnome.html">USE_GNOME porters-handbook chapter</url>
    </links>

    <body>
      <p>The &os; GNOME Team maintains the GNOME, MATE, and CINNAMON
	desktop environments and graphical user interfaces for &os;.
	GNOME 3 is part of the GNU Project.  MATE is a fork of the GNOME 2
	desktop.  CINNAMON is a desktop environment using GNOME 3
	technologies but with a GNOME 2 look and feel.</p>

      <p>This quarter, GNOME 3.16 and MATE 1.10 were committed to the
	ports tree, followed up by some incremental improvements.  A
	chapter covering the use of USE_GNOME within individual ports'
	Makefiles was written and committed to the porters handbook.</p>

      <p>GNOME 3.18 has been ported.  There are, however, some issues
	that need to be resolved before it can be committed to the
	ports tree.
      </p>
    </body>

    <help>
      <task>
	<p>The GNOME website is stale.  Work is underway to improve
	  it.</p>
      </task>

      <task>
	<p>Please give feedback on and suggest improvements to the
	  chapter in the Porters handbook on the <tt>USE_GNOME</tt>
	  functionality.</p>
      </task>

      <task>
	<p>Continue working on investigating the issues blocking
	  GNOME 3.18.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>Atomics</title>

    <contact>
      <person>
	<name>
	  <given>Konstantin</given>
	  <common>Belousov</common>
	</name>
	<email>kib@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Alan</given>
	  <common>Cox</common>
	</name>
	<email>alc@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Bruce</given>
	  <common>Evans</common>
	</name>
	<email>bde@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Atomic operations serve two fundamental purposes.  First, they
	are the building blocks for expressing synchronization algorithms
	in a single, machine-independent way using high-level languages.
	In essense, atomics abstract the different building blocks
	supported by the various architectures on which &os; runs,
	making it easier to develop and reason about lock-less code by
	hiding hardware-level details.</p>

      <p>Atomics also provide the barrier operations that allow software
	to control the effects on memory of out-of-order and speculative
	execution in modern processors as well as optimizations by
	compilers.  This capability is especially important to
	multithreaded software, such as the &os; kernel, when running
	on systems where multiple processors communicate through a shared
	main memory.</p>

      <p>Each machine architecture defines a memory model, which
	specifies the possible effects on memory of out-of-order and
	speculative execution.  More precisely, it specifies the extent to
	which the machine may visibly reorder memory accesses in order to
	optimize performance.  Unfortunately, there are almost as many
	models as architectures.  Moreover, some architectures, for
	instance IA32 or Sparcv9 TSO, are relatively strongly ordered.  In
	contrast, others, like PowerPC or ARM, are very relaxed.  In
	effect, atomics define a very relaxed abstract memory model for
	&os;'s machine-independent code that can be efficiently
	realized on any of these architectures.</p>

      <p>However, most &os; development and testing still happens on
      x86 machines, which, when combined with x86's strongly ordered
      memory model, leads to errors in the use of atomics, specifically,
      barriers.  In other words, the code is not properly written to
      &os;'s abstract memory model, but the strong ordering of the
      x86 architecture hides this fact.  The architectures impacted
      by the code that incorrectly uses atomics are less popular or
      have limited availability, and the resulting bugs from the misuse
      of atomics are hard to diagnose.</p>

      <p>The goal of this project is to audit and upgrade the usage of
	lockless facilities, hopefully fixing bugs before they are
	observed in the wild.</p>

      <p>&os; defines its own set of atomics operations, like many
	other operating systems.  But unlike other operating systems, &os;
	models its atomics and barriers on the release consistency model,
	which is also known as acquire/release model.  This is the same
	model which is used by the C11 and C++11 language standards as
	well as the new 64-bit ARM architecture.  Despite having
	syntactical differences, C11 and &os; atomics share essentially
	the same semantics.  Consequently, ample tutorials about the C11
	memory model and algorithms expressed with C11 atomics can be
	trivially reused under &os;.</p>

      <p>One facility of C11 that was missing from &os; atomics,
	was fences.  Fences are bidirectional barrier operations
	which could not be expressed by the existing atomic+barrier
	accesses.  They were added in r285283.</p>

      <p>Due to the strong memory model implemented by x86 processors,
	atomic_load_acq() and atomic_store_rel() can be implemented by
	plain load and store instructions with only a compiler barrier; no
	additional ordering constraints are required.  This simplification
	of atomic_store_rel() was done some time ago in r236456.  The
	atomic_load_acq() change was done in r285934, after careful review
	of all its uses in the kernel and user-space to ensure that no
	hidden dependency on a stronger implementation was left.</p>

      <p>The only reordering in memory accesses which is allowed on
	x86 is that loads may be reordered with older stores to different
	locations.  This results from the use of store buffers at the
	micro-architecural level.  So, to ensure sequentially consistent
	behavior on x86, a store/load barrier needs to be issued, which
	can be done with an MFENCE instruction or by any locked RMW
	operation.  The latter approach is recommended by the optimization
	guides from Intel and AMD.  It was noted that careful selection of
	the scratch memory location, which is modified by the locked RWM
	operation, can reduce the cost of barrier by avoiding false data
	dependencies.  The corresponding optimization was committed in
	r284901.</p>

      <p>The atomic(9) man page was often a cause of confusion due to
	both erroneous and ambiguous statements.  The most significant of
	these issues were addressed in changes r286513 and r286784.</p>

      <p>Some examples of our preemptive fixes to the misuse of atomics
	that would only become evident on weakly ordered machines
	are:</p>

      <ul>
	<li>A very important lockless algorithm, used in both the
	  kernel and libc, is the timekeeping functionality implemented in
	  <tt>kern/kern_tc.c</tt> and the userspace
	  <tt>__vdso_gettimeofday</tt>.  This algorithm relied on x86 TSO
	  behavior.  It was fixed in r284178 and r285286.</li>

	<li>The <tt>kern/kern_intr.c</tt> lockless updates to the
	  <tt>it_need</tt> indicator were corrected in r285607.</li>

	<li>An issue with
	  <tt>kern/subr_smp.c:smp_rendezvous_cpus()</tt> not guaranteeing
	  the visibility of updates done on other CPUs to the caller was
	  fixed in r285771.</li>

	<li>The <tt>pthread_once()</tt> implementation was fixed to
	  include missed barriers in r287556.</li>
      </ul>
    </body>

    <sponsor>
      The FreeBSD Foundation (Konstantin Belousov's work)
    </sponsor>
  </project>

  <project cat='arch'>
    <title>FreeBSD/RISC-V Port</title>

    <contact>
      <person>
	<name>
	  <given>Ruslan</given>
	  <common>Bukin</common>
	</name>
	<email>br@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Arun</given>
	  <common>Thomas</common>
	</name>
	<email>arun.thomas@baesystems.com</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/riscv">FreeBSD
	wiki RISC-V</url>
      <url href="https://people.freebsd.org/~br/riscv-singleuser.txt">Single
	user boot log</url>
    </links>

    <body>
      <p>RISC-V is an open source Instruction Set Architecture (ISA)
	designed at UC Berkeley.  It is freely available for all uses
	without requiring fees or license agreements.
	The RISC-V team intends to provide freely available
	BSD licensed CPU designs.</p>

      <p>&a.br; (University of Cambridge) now has &os; booting
	to a single user shell on a RISC-V simulator.
	The porting effort started only two months ago
	and is very much a work in progress, requiring significant
	refactoring and clean up before it reaches a committable
	state.  Nonetheless this is exceptional progress in a short
	time.  The porting effort also identified a number of
	proposed ISA improvements.</p>

      <p>The port currently uses the GNU tool chain (GCC and
	binutils), and runs on the Spike simulator.  Improved RISC-V
	support in Clang/LLVM and related tools is highly desired.</p>
    </body>

    <sponsor>
      DARPA, AFRL
    </sponsor>
  </project>

  <project cat='ports'>
    <title>Ports on PowerPC</title>

    <contact>
      <person>
	<name>
	  <given>Alexey</given>
	  <common>Dokuchaev</common>
	</name>
	<email>danfe@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The Ports Collection typically receives less attention on
	Tier-2 architectures than on Tier-1 architectures, although
	several build-runs were performed at various points in the past,
	and broken ports were marked as such at those times.</p>

      <p>Some of the Tier-2 platforms, such as PowerPC and ARM,
	have improved considerably recently, both on &os;'s and the
	compilers' sides, but as the tree is not rebuilt on the cluster
	very often, it was suspected that many ports are marked BROKEN
	while they in fact now build and run correctly.</p>

      <p>Over the past several weeks, 26 ports that were indeed
	broken on at least PowerPC had been fixed, 58 ports that were
	incorrectly marked as broken (left-overs from the old times) were
	unmarked, and fewer than 40 ports still have issues requiring
	further work.
      </p>
    </body>

    <help>
      <task>
	<p>The Ports Collection could benefit a lot from more frequent sweeps
	  targetting Tier-2 systems.</p>
      </task>

      <task>
	<p>Recent work on QEMU-backed emulators and the
	  much-anticipated cross-building of ports are essential pieces to
	  bring &os; packages on par with the base system's support,
	  architecture-wise.</p>
      </task>
    </help>
  </project>

</report>
