<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>January-March</month>

    <year>2017</year>
  </date>

  <section>
    <title>Introduction</title>

    <p><strong>This is a draft of the January&ndash;March 2017
      status report.  Please check back after it is finalized, and
      an announcement email is sent to the &os;-Announce mailing
      list.</strong></p>

    <?ignore
    <p>This report covers &os;-related projects between January and
      March 2017.  This is the first of four reports planned for
      2017.</p>

    <p>The first quarter of 2017 was another productive quarter for
      the &os; project and community. [...]</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from April
      to June 2017 is July 7, 2017.</p>
     ?>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='doc'>
    <title>The &os; Dutch Documentation Project</title>

    <contact>
      <person>
	<name>
	  <given>Rene</given>
	  <common>Ladan</common>
	</name>
	<email>rene@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Remko</given>
	  <common>Lodder</common>
	</name>
	<email>remko@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.FreeBSD.org/docproj/translations.html#dutch">The Dutch Translation Project</url>
    </links>

    <body>
      <p>Work has started on an initial translation of the &os;
	Handbook to the Dutch language via the 'po' system.  While we
	have an (outdated) version of the Handbook available via the
	older XML files, we are now trying to get back into shape with
	the po file.</p>

      <p>Rene started working on 2 articles already and did some
	translation strings for the FDP-Primer, while Remko had started
	working on the Handbook.  If you think you can assist with that,
	please let Rene and Remko know on their email addresses so that
	we can start coordinating work.</p>

      <p>In addition, since we have a translation set already from the
	XML files, it would be interesting to see and know whether we
	can merge them easily into the po structure.  If you have ideas
	on that, contact us a.s.a.p.</p>

      <p>Part of this work is facilitated by Remko's employer:
	Snow&nbsp;B.V.</p>
    </body>

    <sponsor>Snow&nbsp;B.V.</sponsor>

    <help>
      <task>Identify a way to merge the current XML translations into
	the nl_NL.po files.</task>

      <task>Merge the translations into the .po files.</task>

      <task>Update the remaining/open items into the po files.</task>

      <task>Remove the old/outdated translation files from the main
	repo and use the po and book.xml files to generate the dutch
	handbook and other files.</task>

      <task>Identify whether we can also translate the htdocs pages
	via the po system.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; s390x attempt III</title>

    <contact>
      <person>
	<name>
	  <given>Bjoern A.</given>
	  <common>Zeeb</common>
	</name>
	<email>bz@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>A long time ago, in the &os; 5 times, there was an initial
	port of &os; to s390 (32bit) and s390x (64bit)
	which booted past init on good days in an emulator.</p>

      <p>As an attempt to revive the s390x/systemz efforts I started
	to get &os; s390x to build with clang/llvm 3.90.
	At this time it is possible to build world and a GENERIC kernel
	skeleton (not doing anything yet) using external binutils.</p>

      <p>The primary idea of this initial work was to allow to
	incrementally add the neccessary architecture-specific code.
	Having the build framework done will allow third-party
	developers to simply type <tt>make</tt>, as they are willing
	to contribute to the port without having to know &os; build
	specifics.  After some cleanup and further updates to a more
	recent HEAD I am planning to push the current work to a public
	repo to allow collaboration.</p>
    </body>

    <help>
      <task>Write a wiki page with per-architecture specific tasks
	that need to be done based on the current work and the experience
	from arm64 and riscv.</task>

      <task>Implement both the user space and kernel per-architecture
	gaps.</task>

      <task>Figure out a way to get access to IBM's zPDT or better
	emulators to ease implementation, testing, and debugging.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>64-bit PowerPC Book-E support</title>

    <contact>
      <person>
	<name>
	  <given>Justin</given>
	  <common>Hibbits</common>
	</name>
	<email>jhibbits@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The Book-E platform target now supports 64-bit mode
	(&quot;powerpc64&quot;).  It includes a 63-bit address space
	split, but the page table directory list uses holes to expand
	to the full address space, leaving gaps in the address space
	where page mappings are repeated.  This may change in the
	future.</p>

      <p>As with the AIM powerpc64 port, this supports running powerpc
	(32-bit) binaries as well, and has even been tested with a
	32-bit <tt>init</tt> and 64-bit shell.</p>

      <p>Several of the SoC drivers are supported, however, the dTSEC
	ethernet controller is not yet supported.  Work is ongoing to
	support this.</p>

      <p>A QORIQ64 config is included, targeting the P5 and T* series
	SoCs from Freescale.</p>

      <p>Thanks to Juniper Networks for providing patches against an
	older internally maintained &os; version, which enabled this
	porting effort, and for providing historical context for quirks
	of the pmap changes.</p>
    </body>

    <help>
      <task>Port the dTSEC driver to 64-bit.  There are assumptions in the
	reference driver of operating in a 32-bit environment.  It may
	be easier to port the Linux driver instead, which would also
	give ARM support.</task>

      <task>Take advantage of pointer alignment to squeeze more bits
	out of the page tables; it should be possible to squeeze at
	least 3 more bits out, one at each level.</task>
    </help>
  </project>

  <project cat="kern">
    <title>pNFS server Plan B</title>

    <contact>
      <person>
	<name>
	  <given>Rick</given>
	  <common>Macklem</common>
	</name>
	<email>rmacklem@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Parallel NFS (pNFS) is an extension to the NFSv4 protocol that
	allows for file accesses within a single logical mount to be
	performed against multiple NFS file servers, "in parallel".
	Thus, a pNFS server separats the MetaData operations from the
	Data operations (Read/Write/Setattr of size N), letting
	existing NFSv3 servers be used for the bulk data storage
	while still taking advantage of NFSv4 protocol enhancements,
	among other things.</p>

      <p>My first attempt at a pNFS server using GlusterFS was a dud.
	It worked, but performance was so poor that it was not
	usable.  This attempt that I call Plan B, only uses &os;,
	with one &os; server handling the MetaData operations and K
	&os; servers configured to serve Data.  An NFSv4.1 client
	that supports the pNFS File Layout will be able to
	Read/Write to the Data servers directly, spreading out the
	RPC load and allowing growth beyond that of what a single
	&os; NFS server could achieve.</p>

      <p>There is no support for the Flex Files Layout or mirroring
	at this time.  I hope to use the Flex Files Layout to add
	mirroring support over the next year or so.  Striping is
	also not supported, but I have no plans for implementing it
	at the moment.</p>

      <p>Plan B is working quite well now and should be available
	for testing by the end of April.  I will announce how to do this on
	the freebsd-fs@FreeBSD.org mailing list when it is available.</p>
    </body>

    <help>
      <task>Testing by others will be needed, once it is available.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>OpenBSM</title>

    <contact>
      <person>
	<name>
	  <given>Christian</given>
	  <common>Brueffer</common>
	</name>
	<email>brueffer@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Robert</given>
	  <common>Watson</common>
	</name>
	<email>rwatson@FreeBSD.org</email>
      </person>

      <person>
	<name>TrustedBSD audit mailing list</name>
	<email>trustedbsd-audit@TrustedBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.openbsm.org">OpenBSM: Open Source Basic Security Module (BSM) Audit Implementation</url>
      <url href="https://github.com/openbsm/openbsm">OpenBSM on GitHub</url>
      <url href="https://www.FreeBSD.org/doc/en_US.ISO8859-1/books/handbook/audit.html">&os; Audit Handbook Chapter</url>
      <url href="https://reviews.FreeBSD.org/D10149">DTrace Audit Provider</url>
      <url href="https://www.cl.cam.ac.uk/research/security/cadets/">DARPA CADETS project</url>
      <url href="https://github.com/openbsm/openbsm/blob/master/TODO">TODO List on GitHub</url>
    </links>

    <body>
      <p>OpenBSM is a BSD-licensed implementation of Sun's Basic Security
	Module (BSM) API and file format.  It is the user space side of the
	CAPP Audit implementations in &os; and Mac OS X.  Additionally,
	the audit trail processing tools are expected to work on Linux.</p>

      <p>During this quarter, experimental support for UUIDs in BSM trails
	was added to OpenBSM.  A DTrace audit provider using this
	functionality has been developed as part of the DARPA CADETS
	project and is in review (<a
	  href="https://reviews.FreeBSD.org/D10149">https://reviews.FreeBSD.org/D10149</a>).
	In the OpenBSM GitHub repository, support for Coverity static
	analysis was added via TravisCI.  Additionally, the OpenBSM
	1.2-alpha5 release has been merged into the &os; HEAD
	branch.</p> </body>

    <help>
      <task>Test the latest release on different versions of &os;, Mac OS X
	and Linux.  Testing on the latest versions of Mac OS X
	would be particularly appreciated.</task>

      <task>Fix problems that have been reported via GitHub and the
	&os; bug tracker.</task>

      <task>Implement features mentioned in the TODO list on
	GitHub.</task>
    </help>

    <sponsor>DARPA/AFRL (in part)</sponsor>
  </project>

  <project cat='proj'>
    <title>TrustedBSD</title>

    <contact>
      <person>
	<name>
	  <given>Christian</given>
	  <common>Brueffer</common>
	</name>
	<email>brueffer@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Robert</given>
	  <common>Watson</common>
	</name>
	<email>rwatson@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>TrustedBSD announce mailing list</given>
	</name>
	<email>trustedbsd-announce@TrustedBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.trustedbsd.org">TrustedBSD Website</url>
      <url href="https://github.com/trustedbsd">TrustedBSD on GitHub</url>
    </links>

    <body>
      <p>The TrustedBSD Project is an open source community developing
	advanced security features for the open source &os; operating
	system.  Started in April 2000, the project developed support
	for extended attributes, access control lists (ACLs), UFS2,
	OpenPAM, security event auditing, OpenBSM, a flexible kernel
	access control framework, mandatory access control, and the
	GEOM storage layer.  The results of this work may be found not
	just in &os;, but also NetBSD, OpenBSD, Linux, and Apple's Mac
	OS X and iOS operating systems.  Today, the project continues
	to maintain and enhance these mature features in &os;.</p>

      <p>During this quarter, the TrustedBSD project transitioned from the
	&os; Perforce server to GitHub.  This was made possible by
	Alexis Sarghel, who owned the user "trustedbsd" on GitHub and
	graciously transferred this account to the TrustedBSD project.
	To date, the repositories hosting the TrustedBSD website and
	the SEBSD repository have been moved.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>MySQL</title>

    <contact>
      <person>
	<name>
	  <given>Mahdi</given>
	  <common>Mokhtari</common>
	</name>
	<email>mmokhi@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Mark</given>
	  <common>Felder</common>
	</name>
	<email>feld@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.mysql.com/why-mysql/presentations/mysql-80-overview/">MySQL80 Overview</url>
      <url href="https://www.mysql.com/why-mysql/presentations/innodb-whats-new-mysql-80/">MySQL80 InnoDB New Features</url>
    </links>

    <body>
      <p>This quarter a new <tt>-dev</tt> version of MySQL landed in
	the port tree, MySQL 8.0.  It introduces many new features,
	though we had to (re)-patch parts of it which were merged by
	MySQL from MySQL5.7.</p>

      <p>We also updated MySQL 5.6 to latest version and closed bunch
	of PRs related to it, mostly about using &os;-provided ports
	for librariess instead of the bundled copies.  And of course
	there were plenty of security updates.</p>

      <p>We can also report that the problem of having to specify
      <tt>${mysql_optfile}</tt>, which some people encountered while
      using MySQL, is now considered to be solved in all MySQL
      versions: 5.6, 5.7, and 8.0.  Now the init script will search
      all default locations, for backwards compatibility with the
      variety of locations used for configuration files before it
      gives up and reports an error.</p>
    </body>

    <help>
      <task>Test the new version and report problems.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Linuxulator</title>

    <contact>
      <person>
	<name>
	  <given>Dimitry</given>
	  <common>Chagin</common>
	</name>
	<email>dchagin@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napiera</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Mahdi</given>
	  <common>Mokhtari</common>
	</name>
	<email>mmokhi@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>In this quarter, we are pleased to announce two (of many) works achieved in the Linuxulator.</p>

      <p>We added a new placeholder marker <tt>UNIMPLEMENTED</tt> to
	accompany the previously existing <tt>DUMMY</tt>, for
	distinguishing syscalls that the Linux kernel itself does not
	implement from those that we currently do not implement.  Now
	our <tt>linux_dummy.c</tt> is clearer for the newcomers to
	follow, and they will quickly know which areas they can start
	working on.</p>

	<p>Support for two new syscalls, <tt>preadv</tt> and
	  <tt>pwritev</tt>, was added to the Linuxulator.</p>
    </body>

    <help>
      <task>We plan to implement the <tt>execveat</tt> syscall for the
	native &os; syscall table and then port/wrap it for use in
	the Linuxulator.</task>
    </help>
  </project>
</report>
