<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>January-March</month>

    <year>2015</year>
  </date>

  <section>
    <title>Introduction</title>

<!--     <?ignore -->
    <p><strong>This is a draft of the January&ndash;March 2015
      status report.  Please check back after it is finalized, and
      an announcement email is sent to the &os;-Announce mailing
      list.</strong></p>
<!--     ?> -->

    <p>This report covers &os;-related projects between January and
      March 2015.  This is the first of four reports planned for
      2015.</p>

    <p>The first quarter of 2015... was a very busy and productive
      time.</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from April
      to June 2015 is July 7th, 2015.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='kern'>
    <title>Address Space Layout Randomization (ASLR)</title>

    <contact>
      <person>
	<name>
	  <given>Shawn</given>
	  <common>Webb</common>
	</name>
	<email>shawn.webb@hardenedbsd.org</email>
      </person>
      <person>
	<name>
	  <given>Oliver</given>
	  <common>Pinter</common>
	</name>
	<email>oliver.pinter@hardenedbsd.org</email>
      </person>
    </contact>

    <links>
      <url href="https://hardenedbsd.org/">HardenedBSD</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-current/2015-February/054669.html">ASLR Call For Testing</url>
      <url href="https://reviews.freebsd.org/D473">FreeBSD Code Review of ASLR</url>
    </links>

    <body>
      <p>Address Space Layout Randomization (ASLR) is a
	computer security technique that aids in mitigating
	low-level vulnerabilities such as buffer overflows.
	ASLR randomizes the memory layout of running
	applications to prevent an attacker from knowing where
	a given exploitable vulnerability lies in memory.</p>

      <p>We have been working hard the last few months to ensure
	the robustness of our ASLR implementation. We have
	written a helpful manpage. We have updated the patch on
	FreeBSD's code review system (Phabricator).  Our ASLR
	implementation is in heavy use by the HardenedBSD team
	in production environments and is performing
	robustly.</p>

      <p>The next task is to compile the base system applications as
	Position-Independent Executables (PIEs). In order for
	ASLR to be effective, applications must be compiled as
	PIEs. It is likely that this part will take a long time
	to accomplish, given the complexity surrounding
	building the libraries in the base system. Even if applications
	are not compiled as PIEs, having ASLR available still
	helps those applications (like HardenedBSD's secadm)
	which force compilation as PIE for themselves.</p>
    </body>

    <sponsor>SoldierX</sponsor>

    <help>
      <task>
	<p>Test our patch against 11-CURRENT.</p>
      </task>

      <task>
	<p>For &os; committers: work with us to get this merged
	  into &os;.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Xfce on &os;</title>

    <contact>
      <person>
	<name>&os; Xfce Team</name>
	<email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Xfce" />
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms, such as &os;. It aims to be fast and
	lightweight, while still being visually appealing and easy to
	use.</p>

      <p>This quarter was an exciting time for the Xfce Team. We
	imported the Xfce desktop environment 4.12 into the ports
	tree, after more than two years of development.</p>

      <p>Overall, we have updated the following ports:</p>

      <ul>
	<li>Xfce core (4.12)</li>
	<li>audio/xfce4-mpc-plugin (0.4.5)</li>
	<li>deskutils/xfce4-tumbler (0.1.31</li>
	<li>deskutils/xfce4-xkb-plugin (0.7.1)</li>
	<li>editors/mousepad (0.4.0)</li>
	<li>graphics/ristretto (0.8.0)</li>
	<li>multimedia/xfce4-parole (0.8.0)</li>
	<li>sysutils/garcon (0.4.0)</li>
	<li>sysutils/xfce4-diskperf-plugin (2.5.5)</li>
	<li>sysutils/xfce4-fsguard-plugin (1.0.2)</li>
	<li>sysutils/xfce4-power-manager (1.4.4)</li>
	<li>sysutils/xfce4-wavelan-plugin (0.5.12)</li>
	<li>textproc/xfce4-dict-plugin (0.7.1)</li>
	<li>www/xfce4-smartbookmark-plugin (0.4.6)</li>
	<li>x11/libexo (0.10.4)</li>
	<li>x11-clocks/xfce4-timer-out-plugin (1.0.2)</li>
	<li>x11-fm/thunar (1.6.6)</li>
	<li>x11-themes/gtk-xfce-engine (3.2.0)</li>
      </ul>

      <p>At the same time we switched to the USES framework, and a new
	plugin has been added, called
	<tt>audio/xfce4-pulseaudio-plugin</tt>.</p>

      <p>We also follow the unstable releases (available in our
	experimental repository) of:</p>

      <ul>
	<li>x11/xfce4-dashboard (0.3.91)</li>
	<li>x11/xfce4-notes-plugin (1.8.0 beta)</li>
      </ul>

      <p>The following documentation patches are ready:</p>
      <ul>
	<li><a href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=197878">PR197878</a>,
	  Update Xfce section in Porter's Handbook</li>
	<li><a href="https://reviews.freebsd.org/D1305">D1305</a>, FAQ</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Work on support for Compact Disc Digital Audio (CD-DA) in
	  <tt>multimedia/xfce4-parole</tt>.</p>
      </task>

      <task>
	<p>Add a new property (through xfconf-query) in order to
	  allow users to change the greyscale value of quicklaunch
	  icons in x11/xfce4-dashboard (this feature is only available
	  in the unstable release).</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Lua boot loader</title>

    <contact>
      <person>
	<name>
	  <given>Rui</given>
	  <common>Paulo</common>
	</name>
	<email>rpaulo@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Pedro</given>
	  <common>Souza</common>
	</name>
	<email>pedrosouza@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Wojciech</given>
	  <common>Koszek</common>
	</name>
	<email>wkoszek@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://svnweb.freebsd.org/base/projects/lua-bootloader/" />
    </links>

    <body>
      <p>The Lua boot loader project is in its final stage and
	it can be used on x86 already.  The aim of this project is to
	replace the Forth boot loader with a Lua boot loader.  All the
	scripts were re-written in Lua and are available in
	sys/boot/lua.  Once all the Forth features have been tested
	and once the boot menus look exactly like in Forth, we will
	start merging this project to &os; HEAD.  Both loaders can
	co-exist in the source tree with no problems because a
	pluggable loader functionality was introduced for this
	purpose.</p>

      <p>The project was initially started by Wojciech
	Koszek, and Pedro Souza wrote most of the Lua code last year in
	his Google Summer of Code project.</p>

      <p>To build a Lua boot loader just use:</p>
<pre>WITH_LUA=y
WITHOUT_FORTH=y</pre>
    </body>

    <help>
      <task>
	<p>Feature/appearance parity with Forth.</p>
      </task>

      <task>
	<p>Investigate use of floating point by Lua.</p>
      </task>

      <task>
	<p>Test the EFI Lua loader.</p>
      </task>

      <task>
	<p>Test the U-Boot Lua loader.</p>
      </task>

      <task>
	<p>Test the serial console.</p>
      </task>
    </help>
  </project>

  <project cat='doc'>
    <title>More Michael Lucas &os; books</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Lucas</common>
	</name>
	<email>mwlucas@michaelwlucas.com</email>
      </person>
    </contact>

    <links>
      <url href="http://blather.michaelwlucas.com/archives/2352" />
    </links>

    <body>
      <p>The &os; storage books are proceeding slower than expected.
	This is a complex project.</p>

      <p>It appears that ZFS will be a two-book topic. The
	first book will cover basic ZFS, while the second will cover
	advanced cases like live and cold replication, sharing,
	performance, and using ZFS on top of less common GEOM
	providers.  More details can be found in the links section.</p>

      <p>Allan Jude (allanjude@) is co-authoring the ZFS
	books.  Little did he know of the magnitude of the task
	ahead of him when he signed up....</p>
    </body>
  </project>

  <project cat='proj'>
    <title>Opaque ifnet</title>

    <contact>
      <person>
	<name>
	  <given>Gleb</given>
	  <common>Smirnoff</common>
	</name>
	<email>glebius@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/projects/ifnet">Project wiki page</url>
    </links>

    <body>
      <p>The project is to design a new KPI for network drivers
	that would allow for the network stack to evolve, without
	breaking compatibility with older drivers.  The core idea is to
	hide <tt>struct ifnet</tt> from drivers, thus the
	project has the name "opaque ifnet".  However, the
	project will include more changes than just hiding the
	struct's definition.</p>

      <p>At present, the new KPI has been prototyped, most
	important parts of network stack have been modified
	appropriately, and several drivers have been converted to new
	KPI.</p>

      <p>The project needs more manpower, since there are many
	network drivers in the tree, with a total of 245 sites where a
	struct ifnet is allocated.</p>
    </body>

    <sponsor>Netflix</sponsor>

    <help>
      <task>
	<p>Convert more drivers.</p>
      </task>
    </help>
  </project>

  <project cat='team'>
    <title>Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Frederic</given>

	  <common>Culot</common>
	</name>
	<email>portmgr-secretary@FreeBSD.org</email>
      </person>

      <person>
	<name>Port Management Team</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/ports/" />
      <url href="http://www.freebsd.org/doc/en_US.ISO8859-1/articles/contributing-ports/" />
      <url href="http://portsmon.freebsd.org/index.html" />
      <url href="http://portscout.freebsd.org/" />
      <url href="http://www.freebsd.org/portmgr/index.html" />
      <url href="http://blogs.freebsdish.org/portmgr/" />
      <url href="http://www.twitter.com/freebsd_portmgr/" />
      <url href="http://www.facebook.com/portmgr" />
      <url href="http://plus.google.com/communities/108335846196454338383" />
    </links>

    <body>
      <p>As of the end of Q1 the ports tree holds almost 25,000
	ports, and the PR count is just over 1,500.  The tree saw
	more activity than during the previous quarter, with
	almost 7,000 commits performed by 163 active committers.
	The number of problem reports closed also increased by
	about 20%, with nearly 2,000 PRs closed!</p>

      <p>In Q1 two new developers were granted a ports commit bit
	(jbeich@ and brd@) and one was taken in for safekeeping
	(rafan@, on his request).</p>

      <p>On the management side, decke@ decided to step down from
	his portmgr duties in February.  No other changes were made
	to the team during Q1.</p>

      <p>This quarter also saw the release of the first quarterly
	branch of the year, 2015Q1.  On this branch, 140 changes were
	applied by 35 committers.</p>

      <p>On the QA side, 29 exp-runs were performed to validate sensitive
	updates or cleanups.</p>
    </body>

    <help>
      <task>
	<p>As during the previous quarter a tremendous amount
	  of work was done on the tree to update major ports and to
	  close even more PRs than in 2014 Q4.  However, we sometimes
	  lag behind with regards to documentation, so volunteers
	  are welcome to help on this important task.</p>
      </task>
    </help>

  </project>

  <project cat='proj'>
    <title>bhyve</title>

    <contact>
      <person>
	<name>
	  <given>Peter</given>
	  <common>Grehan</common>
	</name>
	<email>grehan@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Neel</given>
	  <common>Natu</common>
	</name>
	<email>neel@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Tycho</given>
	  <common>Nightingale</common>
	</name>
	<email>tychon@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>
	<email>freebsd@allanjude.com</email>
      </person>

      <person>
	<name>
	  <given>Alexander</given>
	  <common>Motin</common>
	</name>
	<email>mav@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.bhyve.org">bhyve FAQ and talks</url>
    </links>

    <body>
      <p>bhyve is a hypervisor that runs on the FreeBSD/amd64
	platform.  At present, it runs FreeBSD (8.x or later), Linux
	i386/x64, OpenBSD i386/amd64, and NetBSD/amd64 guests.  Current
	development is focused on enabling additional guest operating
	systems and implementing features found in other hypervisors.</p>

      <p>Peter Grehan did a status update at bhyvecon 2015 in
	Tokyo.  The slides are available at <a
	href="http://bhyvecon.org/bhyvecon2015-Peter.pdf">
	http://bhyvecon.org/bhyvecon2015-Peter.pdf</a></p>

      <p>Mihai Carabas presented the results of his GSoC project
	on implementing instruction caching in bhyve at AsiaBSDCon
	2015 in Tokyo.  The slides are available at <a
	href="http://people.freebsd.org/~neel/bhyve/bhyve-cache-emul-slides.pdf">
	http://people.freebsd.org/~neel/bhyve/bhyve-cache-emul-slides.pdf</a></p>

      <p>A number of improvements were made to bhyve this quarter:</p>

      <ul>
	<li>The RTC device model can now be instructed to keep UTC time
	  instead of localtime.  This is useful for guests like OpenBSD
	  that expect the RTC to keep UTC time.</li>
	<li>The virtio-blk device now does I/O asynchronously without
	  blocking the vcpu thread that initiated the I/O.</li>
	<li>The virtio-blk and ahci-hd devices are now able to execute
	  multiple I/O requests in parallel.  This can significantly
	  boost virtual disk throughput.</li>
	<li>The ahci-hd device emulation advertises TRIM to the guest
	  if the backend device supports it (e.g., ZVOL).</li>
	<li>The virtio-blk and ahci-hd devices now advertise the proper
	  logical and physical block size of the backend device or file.</li>
      </ul>

    </body>

    <help>
      <task>
	<p>Improve documentation.</p>
      </task>

      <task>
	<p>bhyveucl is a script for starting bhyve instances based on a
	  libUCL config file.  More information is at
	  <a
	    href="https://github.com/allanjude/bhyveucl">https://github.com/allanjude/bhyveucl</a></p>
      </task>

      <task>
	<p>Add support for virtio-scsi.</p>
      </task>

      <task>
	<p>Flexible networking backends: wanproxy, vhost-net.</p>
      </task>

      <task>
	<p>Move to a single process model, instead of bhyveload
	  and bhyve.</p>
      </task>

      <task>
	<p>Support running bhyve as non-root.</p>
      </task>

      <task>
	<p>Add filters for popular VM file formats (VMDK, VHD,
	  QCOW2).</p>
      </task>

      <task>
	<p>Implement an abstraction layer for video (no X11 or SDL in
	  the base system).</p>
      </task>

      <task>
	<p>Suspend/resume support.</p>
      </task>

      <task>
	<p>Live Migration.</p>
      </task>

      <task>
	<p>Nested VT-x support (bhyve in bhyve).</p>
      </task>

      <task>
	<p>Support for other architectures (ARM, MIPS, PPC).</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Jenkins Continuous Integration for &os;</title>

    <contact>
      <person>
	<name>
	  <given>Craig</given>
	  <common>Rodrigues</common>
	</name>
	<email>rodrigc@FreeBSD.org</email>
      </person>

      <person>
	<name>Jenkins Administrators</name>
	<email>jenkins-admin@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Testing</name>
	<email>freebsd-testing@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://jenkins.freebsd.org">Jenkins CI server in &os; cluster</url>
      <url href="http://www.cloud9ers.com/">Cloud9ers</url>
      <url href="https://wiki.ubuntu.com/AhmedKamal">Ahmed Kamal</url>
      <url href="https://github.com/saltstack/salt/pulls?q=is%3Apr+author%3Akim0">Ahmed's contributions to SaltStack</url>
      <url href="http://julipedia.meroh.net/2015/02/kyua-turns-parallel.html">Kyua turns parallel</url>
      <url href="https://github.com/jenkinsci/multiple-scms-plugin/commits?author=rodrigc">Jenkins Multiple SCM's plugin fixes</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-toolchain/2016-March/001545.html">GCC 4.9 problems</url>
      <url href="https://wiki.freebsd.org/ExternalToolchain">External Toolchain Support</url>
    </links>

    <body>
      <p>The Jenkins Continuous Integration and Testing
	project has been helping to improve the quality of &os;.
	Since the last status report, we have quickly found commits
	which caused build breakage or test failures.  &os; developers
	saw these problems and quickly fixed them.  Some of the
	highlights include:</p>

      <ul>
	<li><p>Ahmed Kamal agreed to join the jenkins-admin
	    team.  Even though he is not a &os; committer, he is
	    subscribed the the jenkins-admin alias, and is contributing
	    code via GitHub.  Ahmed has contributed mutiple SaltStack
	    scripts which are in the freebsd-ci GitHub repository.  Ahmed
	    has also found multiple bugs in SaltStack's &os; support.  He
	    has fixed these bugs and pushed them back to SaltStack via
	    GitHub pull requests.</p>
	  <p>Ahmed is a software developer who lives in
	    Cairo, Egypt.  He presently works for Cloud9ers, a cloud and
	    devops consulting firm.  In the past, he has worked for
	    Canonical as the Ubuntu Cloud and Server community liaison.</p>
	  <p>Ahmed found out about the Request for Help sent
	    out by &a.rodrigc; for help with Jenkins in &os; via a random
	    web search.  Ahmed found &os; to be a very nice project, and
	    was eager to volunteer and help out, and responded to the
	    Request.  Ahmed will attend BSDCan, where he will learn more
	    about the BSD Community.</p>
        </li>

	<li>&a.jmmv; extended Kyua to support executing test
	  cases in parallel.  This should help the scaling of testing in
	  environments with thousands of test cases.</li>

	<li>&a.rodrigc; got a commit bit to the Jenkins
	  Multiple SCM's plugin, and committed fixes to that plugin to
	  help it work with Subversion 1.8 </li>

	<li>&a.rodrigc; worked with &a.dim; in the
	  freebsd-toolchain team to help identify and fix several
	  compilation problems in the &os; src tree when using GCC 4.9.
	  This work will help with the External Toolcain project.</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Set up more builds based on different architectures.</p>
      </task>

      <task>
        <p>Improve the maintenance of nodes in the Jenkins cluster
           using devops frameworks such as Saltstack.</p>
      </task>

      <task>
	<p>People interested in helping out should join the
	  freebsd-testing@FreeBSD.org list.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Clang, llvm and lldb updated to 3.6.0</title>

    <contact>
      <person>
	<name>
	  <given>Dimitry</given>
	  <common>Andric</common>
	</name>
	<email>dim@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Roman</given>
	  <common>Divacky</common>
	</name>
	<email>rdivacky@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Davide</given>
	  <common>Italiano</common>
	</name>
	<email>davide@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://llvm.org/releases/3.6.0/docs/ReleaseNotes.html">LLVM 3.6.0 Release Notes</url>
      <url href="http://llvm.org/releases/3.6.0/tools/clang/docs/ReleaseNotes.html">Clang 3.6.0 Release Notes</url>
    </links>

    <body>
      <p>Just before the end of the quarter, we have updated
	clang, llvm and lldb in base to 3.6.0 release.  These all
	contain numerous improvements; please see the linked release
	notes for more detailed information.</p>

      <p>We have also imported a newer snapshot of compiler-rt,
	with better support for Address Sanitizer and Undefined
	Behavior Sanitizer, and arm64 runtime support routines.
	With the updated clang, llvm, and compiler-rt, we now support the
	Address and Undefined Behavior Sanitizers in the base system
	toolchain.</p>

      <p>Like the 3.5.0 release, these components require C++11
	support to build.  At this point, FreeBSD 10.0 and later
	provide that support, at least on x86.</p>

      <p>It is still unclear whether we will be able to MFC this
	to any stable branches, due to the difficulty it will
	introduce for upgrading from a system without C++11 support,
	either older releases or architectures still using gcc.</p>

      <p>In the lld-import branch, we have also imported a recent
	snapshot of lld, a linker produced by the LLVM project.  This
	is a very preliminary effort of making it available as a
	system linker.</p>

      <p>Thanks to Ed Maste, Roman Divacky, Andrew Turner and
	Davide Italiano for their help with this import, and thanks to
	Antoine Brodin for performing a ports exp-run.</p>
    </body>

    <help>
      <task>
	<p>After the ports exp-run, a small number of ports
	  turned out to have problems, and for almost all of these, PRs
	  with fixes or workarounds were filed.  While most of these PRs
	  have been processed and closed, there are still a few left
	  that need attention, from either the maintainer(s) or other
	  volunteers.</p>
      </task>

      <task>
	<p>Andrew Turner is working on bringing up the arm64
	  architecture, which is now fully supported in clang and llvm.
	  This will be a very interesting new area for solving
	  challenging problems.</p>
      </task>

      <task>
	<p>There are still issues with the powerpc and sparc64
	  architectures, and any help in these areas is very much
	  appreciated.</p>
      </task>
    </help>
  </project>

  <project cat='misc'>
    <title>The &os; Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSDFoundation.org/">Foundation website</url>
      <url href="http://freebsdjournal.com/">&os; Journal</url>
      <url href="http://www.bsdnow.tv/episodes/2015_03_11-the_pcbsd_tour_ii">BSDNow PC-BSD Tour</url>
      <url href="http://www.bsdnow.tv/episodes/2015_02_25-from_the_foundation_2">BSDNow "From the Foundation"</url>
    </links>

    <body>
      <p>The Foundation turned 15 on March 15th!  We kicked off
	our anniversary celebration by launching a spring fundraising
	campaign, to bring in 500 new community investors.  In
	conjunction with our anniversary, BSDNow interviewed Justin
	Gibbs about our history and plans for the future as part of
	the PC-BSD tour.  BSDNow also interviewed Ed Maste about &os;
	projects and processes in a "From the Foundation" episode.</p>

      <p>We were a Platinum Sponsor of AsiaBSDCon and had five team
	members attend the conference.  Kirk McKusick taught a two-day
	&os; kernel tutorial and gave a talk on Journaled Soft
	Updates and George Neville-Neil gave a talk on network
	performance in &os;; George also taught a two day tutorial
	(A Look Inside FreeBSD with DTrace).  This is from ongoing work
	with Robert Watson in support of both academic and
	practitioner educational material for &os;.  Dru gave a talk
	on Advanced OpenSource Storage with FreeNAS 9.3, and Ed Maste
	gave a talk on the LLDB Debugger in FreeBSD.</p>

      <p>We became a Platinum Sponsor for BSDCan, and have approved six
	travel grants to &os; contributors.  We also sponsored
	Michael Dexter to attend SCALE so he could give a talk on
	virtualization.</p>

      <p>In addition to the above conferences, we helped promote &os;
	at the following conferences:</p>

      <ul>
	<li><a href="https://www.usenix.org/conference/fast15">USENIX
	    FAST '15</a></li>
	<li><a href="https://fosdem.org/2015/">FOSDEM</a></li>
	<li><a href="http://www.socallinuxexpo.org/scale/13x/">SCALE</a></li>
      </ul>

      <p>We received and published &os; testimonials from Xinuos,
	Netgate, and Tarsnap.</p>

      <p>We launched the "From the Trenches" series to provide stories
	from &os; contributors on what they are doing with &os;.
	Glen Barber wrote an article called ZFS and How to Make a Foot
	Cannon.  Glen also investigated a deadlock issue when rebooting
	after upgrades (PR 195458), and he released weekly 11-CURRENT and
	10-STABLE snapshot builds.</p>

      <p>The &os; Journal now has over 8300 subscribers and has a 98%
	renewal rate.  We are now publishing a few free <a
	  href="https://www.freebsdfoundation.org/journal/articles">&os;
	  Journal articles</a>.  We also created landing pages for each
	Journal issue for easier promotion.</p>

      <p>We started work on the Ottawa Vendor and Developer Summits and
	another one that has not yet been officially announced on the East
	Coast in the fall.</p>

      <p>Our development staff and project grant recipients were
	responsible for a large number of feature improvements and bug
	fixes over this past quarter.  We have eight individual reports
	in this quarterly update for Foundation-sponsored projects
	that demonstrate a number of different ways the Foundation
	supports the &os; project.</p>

      <p>One project is the subject of a research master's
	project at Swinburne University in Melbourne: the Multipath
	TCP (MPTCP) implementation for &os;.  The PCIe hot plug
	project is an individual project grant.  The FreeBSD/arm64
	project represents a collaborative development effort, where
	the Foundation facilitates a broader project with multiple
	participants.</p>

      <p>There are also a number of projects undertaken directly by
	Foundation staff.  In this quarterly report we have several
	reports in this category: Secure Boot, the autofs-based
	automount daemon, dynamically loadable libthr, Intel DMA
	remapping, migration to the ELF Tool Chain project tools.</p>

      <p>Additionally, one of the benefits of having long-term
	permanent staff is the ability to continue to maintain
	projects and contribute improvements beyond a fixed timeline.
	Over the last quarter Foundation staff contributed
	improvements to the UEFI boot process, vt(4) system console,
	in-kernel iSCSI stack, the virtual memory subsystem, and many
	others.</p>
    </body>
  </project>

  <project cat='kern'>
    <title>Adding PCIe Hot-plug Support</title>

    <contact>
      <person>
	<name>
	  <given>John-Mark</given>
	  <common>Gurney</common>
	</name>
	<email>jmg@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://p4db.freebsd.org/depotTreeBrowser.cgi?FSPC=//depot/projects/pciehotplug">PCIe Hot-plug Perforce Branch</url>
    </links>

    <body>
      <p>PCI Express (PCIe) hot-plug is used on both laptops and
	servers to allow peripheral devices to be added or removed
	while the system is running.  Laptops commonly include
	hot-pluggable PCIe as either an ExpressCard slot or
	a Thunderbolt interface.  ExpressCard has built-in USB support
	that is already supported by &os;, but ExpressCard PCIe
	devices like Gigabit Ethernet adapters and eSATA cards are
	only supported when they are present at boot, and removal may
	cause &os; to crash.</p>

      <p>The goal of this project is to allow these devices to
	be inserted and removed while &os; is running.  The work
	will provide the basic infrastructure to support adding and
	removing devices, though it is expected that additional work
	will be needed to update individual drivers to support
	hot-plug.</p>

      <p>Current testing is focused on getting a simple UART
	device functional.  Basic hot swap is functional.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
      <task>
	<p>Get suspend/resume functional by saving/restoring the necessary
	  registers.</p>
      </task>

      <task>
	<p>Make sure that upon suspend, devices are removed so that
	  if they are replaced while the machine is suspended, the
	  new devices will be detected.</p>
      </task>

      <task>
	<p>Improve how state transitions are handled, possibly by
	  using a proper state machine.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>The Graphics stack on FreeBSD</title>

    <contact>
       <person>
	  <name>&os; Graphics team</name>
	  <email>freebsd-x11@FreeBSD.org</email>
       </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">Graphics stack roadmap and supported hardware matrix</url>
      <url href="http://blogs.freebsdish.org/graphics/">Graphics stack team blog</url>
      <url href="https://github.com/freebsd/freebsd-ports-graphics">Ports development tree on GitHub</url>
    </links>

    <body>
      <p>In the official Ports tree, the Mesa ports
	(<tt>libglapi</tt>, <tt>libGL</tt>, <tt>libEGL</tt>,
	<tt>libglesv2</tt>, <tt>gbm</tt>, <tt>dri</tt>) are kept close
	to the latest Mesa 10.4.x release.</p>

      <p>In the development tree (see the GitHub link), the update
	to Mesa 10.5 came along with several improvements and cleanup to
	the ports themselves.  Now, all ports share the same configure
	flags and build dependencies.  As Mesa is built from scratch for
	each port, this ensures that all libraries and drivers are
	consistent with each other.  This fixes at least two
	problems:</p>

      <ul>
	<li>A long standing bug: the <tt>drm</tt> EGL platform is now
	  functional, meaning we will be able to enable Glamor (the 2D
	  acceleration engine based on OpenGL) in the X.Org server.  This is
	  required to provide 2D acceleration for Radeon HD 7000 and later
	  GPUs for instance.</li>
	<li>Clover, the Mesa OpenCL implementation, now works; see the next
	  paragraph.</li>
      </ul>

      <p>The downside of this unification is that all ports will depend on
	LLVM.  This work is happening in the <tt>mesa-10.5</tt> branch.</p>

      <p>Progress has been made on OpenCL, thanks to help from
	Johannes Dieterich.  Clover (Mesa's implementation) and Beignet
	(Intel's implementation) were added as ports to the development
	tree.  They were tested successfully on Radeon and Intel GPUs, but
	see the wiki for an up-to-date status.  Initially developed in
	the <tt>opencl</tt> branch, everything has now been merged into the
	<tt>mesa-10.5</tt> branch.  This cannot go into the official
	Ports tree yet because it requires the unification explained
	above.</p>

      <p>A new port, <tt>drm-kmod</tt> was added to the official
	Ports tree.  It provides updated <tt>drm2</tt>, <tt>i915kms</tt>
	and <tt>radeonkms</tt> kernel modules for FreeBSD 9.3-RELEASE
	and 9.3-STABLE.  The only difference from the vanilla modules is
	the addition of hardware context support to the i915 driver.
	The <tt>xf86-video-radeon</tt> and <tt>xf86-video-intel</tt>
	drivers were patched to use the <tt>drm-kmod</tt> port on these
	versions of FreeBSD.  This will allow us to remove the duality
	of the Mesa ports (<tt>libGL</tt>/<tt>libEGL</tt>/<tt>dri</tt>)
	and only support one version (as is already the case in the
	<tt>mesa-10.5</tt> branch where Mesa 9.1.7 is gone).  There is
	no ETA yet for when this last part will happen.</p>

      <p>In the development Ports tree, the <tt>xserver-next</tt>
	branch was updated from xorg-server 1.16 to be tracking 1.17.
	Again, this depends on the previous step: the removal of Mesa
	9.1.7.</p>

      <p>Work is finishing up on an update of miscellaneous X.Org
	components.  Apart from updates to several X.Org ports, this
	update also removes the use of <tt>.la</tt> files from the X.Org
	libraries that still have them.  Also, the
	<tt>xf86-video-intel</tt> driver will receive patches to allow
	it to compile against a newer xorg-server than 1.14.  Most of
	the X.Org component updates were submitted by Matthew Rezny.</p>

      <p>The location where fonts get installed was overhauled and
	the way to handle fonts from the plist got simplified.  Now all
	fonts are installed in <tt>/usr/local/share/fonts</tt> as
	required by the XDG rules.  Furthermore, making a port for fonts
	should be easier: more aspects, such as calling fc-cache(1), are
	handled by the Ports framework.  Therefore, the font ports'
	consistency was greatly improved.</p>

      <p>In the kernel, the DRM device-independent code was
	updated to match Linux 3.8.  A merge to 10-STABLE is pending.
	The i915kms kernel driver received an update too, which is
	already merged to 10-STABLE.</p>

      <p>Having both updates in place enables work on a
	second update of the i915 driver: this time it will be
	synchronized with Linux 3.8, like the rest of the DRM subsystem,
	and bring Haswell support.  This was started recently.  Our hope
	is that it will be ready in time for FreeBSD 10.2-RELEASE.</p>

      <p>During Q2, we are going to work with the GNOME team on
	porting libinput and testing Wayland.  Currently we know that
	GTK+3 and GNOME 3 have full support for Wayland.  We also need
	to test Xwayland from xorg-server 1.16+ to support X
	applications on Wayland desktops.  If you know of more software
	that uses Wayland, we would like to hear about them.  At this point
	there are no plans to port the Weston reference implementation
	of a Wayland compositor.</p>
    </body>

    <help>
      <task>
	<p>See the "Graphics" wiki page for up-to-date
	  information.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Wine/FreeBSD</title>

    <contact>
      <person>
	<name>
	  <given>Gerald</given>
	  <common>Pfeifer</common>
	</name>
	<email>gerald@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>David</given>
	  <common>Naylor</common>
	</name>
	<email>dbn@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.FreeBSD.org/Wine">Wine wiki</url>
      <url href="http://wiki.FreeBSD.org/i386-Wine">Wine on amd64 wiki</url>
      <url href="http://www.winehq.org">Wine homepage</url>
    </links>

    <body>
      <p>This quarter has seen five updates to the
	<tt>wine-devel</tt> port that closely tracks upstream
	development, as well as updates to helper ports
	(<tt>wine-gecko-devel</tt> and <tt>wine-mono-devel</tt>):</p>

      <ul>
	<li>Stable releases: 1.6.2 (1 port revision)</li>
	<li>Development releases: 1.7.34 through 1.7.39</li>
      </ul>

      <p>A major development has been the introduction of Wine64
	(i.e.,  the ability to run 64-bit Windows applications).  This
	is currently available through the wine-devel port.  At this
	stage it is currently mutually exclusive with the
	i386-wine-devel port, however we have plans to intregate these
	ports to offer a full Wine experience on amd64.  The
	i386-wine-devel port has packages built for amd64 for &os;
	8.4, 9.1+, 10.1+ and CURRENT.</p>

      <p>Accomplishments include:</p>

      <ul>
	<li>Upstreaming 8 patches to fix Wine on &os; &mdash; many
	  thanks to Gerald and David.</li>
	<li>Optional support for V4L has been added to the stable
	  <tt>emulators/wine</tt> port.</li>
	<li>Optionally building wine with the X composite extension
	  (if one selects the X11 option).</li>
	<li>Support for alternative toolchains that require
	  <tt>LD</tt> to be honoured.</li>
	<li>Fixing and tidying up the pkg-plist.</li>
	<li>Wine64 support</li>
	<li>Updating the patch-nvidia.sh script to support
	  arbitary suffixes.</li>
	<li>Removing support for the old pkg_ tools from
	  patch-nvidia.sh.</li>
	<li>Developing a patch to fix usage of getdirentries(2).
	  This fixes Steam, EVE Online and other applications.</li>
      </ul>

      <p>We would like to thank all volunteers who contributed
	feedback and patches.</p>

      <p>Future development on Wine will focus on:</p>

      <ul>
	<li>Rename <tt>wine-compholio</tt> to
	  <tt>wine-staging</tt> (to match upstream development).</li>
	<li>Add the getdirentries(2) patch to the
	  <tt>wine-devel</tt> port.</li>
	<li>Redevelop and upstream the getdirentries(2) patch.</li>
	<li>Redevelop and upstream the kernel32 Makefile patch.</li>
	<li>Add support to the <tt>i386-wine</tt> port for pkg 1.5
	  (conflicts with libraries currently prevent support).</li>
	<li>Add support for WoW64:
	  <ul>
	    <li>Reduce the <tt>i386-wine</tt> port to just the
	      components required for WoW64.</li>
	    <li>Rename the i386-wine port to wow64.</li>
	    <li>Make the wine ports depend on the wow64 ports when
	      built on amd64.</li>
	    <li>Investigate and verify the interactions between Wine64
	      and WoW64.</li>
	    <li>Investigate possible update approaches for the wow64
	      ports (that have to be pre-compiled) and how updating
	      with the wine ports will work.</li>
	  </ul>
	</li>
      </ul>

      <p>Maintaining and improving Wine is a major undertaking
	that directly impacts end-users on &os; (including many
	gamers).  If you are interested in helping, please contact us.
	We will happily accept patches, suggest areas of focus or have
	a chat.</p>
    </body>

    <help>
      <task>
	<p>&os;/amd64 integration (see the <a
	    href="http://wiki.FreeBSD.org/i386-Wine">i386-Wine
	    wiki</a>).</p>
      </task>

      <task>
	<p>Porting WoW64.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on newer ARM boards</title>

    <contact>
     <person>
      <name>
	<given>John</given>
	<common>Wehle</common>
      </name>
      <email>john@feith.com</email>
     </person>

     <person>
      <name>
	<given>Ganbold</given>
	<common>Tsagaankhuu</common>
      </name>
      <email>ganbold@FreeBSD.org</email>
     </person>
    </contact>

    <links>
     <url href="https://wiki.freebsd.org/FreeBSD/arm/Odroid-C1">&os; on Odroid-C1</url>
     <url href="https://svnweb.freebsd.org/changeset/base/280905" />
    </links>

    <body>
     <p>We made the changes necessary to support various Amlogic SoC
      devices, specifically aml8726-m6 and aml8726-m8b SoC-based devices.
      The aml8726-m6 SoC is used in devices such as the Visson
      ATV-102, and the Hardkernel ODROID-C1 board uses the
      aml8726-m8b SoC.  The following support is included:</p>

      <ul>
	<li>Basic machdep code</li>
	<li>SMP</li>
	<li>Interrupt controller</li>
	<li>Clock control driver (aka gate)</li>
	<li>Pinctrl</li>
	<li>Timer</li>
	<li>Real time clock</li>
	<li>UART</li>
	<li>GPIO</li>
	<li>I2C</li>
	<li>SD controller</li>
	<li>SDXC controller</li>
	<li>USB</li>
	<li>Watchdog</li>
	<li>Random number generator</li>
	<li>PLL / Clock frequency measurement</li>
	<li>Frame buffer</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Get the DWC driver working.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>FreeBSD Python Ports</title>

    <contact>
      <person>
	<name>&os; Python Team</name>
	<email>python@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Python">The &os; Python Team Page</url>
      <url href="irc://freebsd-python@irc.freenode.net">IRC channel</url>
    </links>

    <body>

      <p>The &os; Python team continued to improve the overall
	experience with Python-based software on &os;.  A lot of
	previously deprecated code and option knobs were removed to improve
	the maintainability of the Python Ports infrastructure.</p>

      <p>The CPython interpreters were updated to version 2.7.9 and 3.4.3
	and Twisted was updated to version 15.0.0.</p>
   </body>

    <help>
      <task>
	<p>Retire the Python 3-specific port duplicates.</p>
      </task>

      <task>
	<p>More tasks can be found on the team's wiki page (see
	  the links).</p>
      </task>

      <task>
	<p>To get involved, interested people can say hello on IRC
	  in #freebsd-python on freenode and let us know their areas
	  of interest!</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>KDE on &os;</title>

    <contact>
      <person>
	<name>
	  <given>KDE on &os; team</given>
	</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://freebsd.kde.org/" />
      <url href="https://freebsd.kde.org/area51.php" />
      <url href="https://wiki.freebsd.org/KDE" />
      <url href="https://mail.kde.org/mailman/listinfo/kde-freebsd" />
      <url href="https://github.com/tcberner/kde5" />
    </links>

    <body>
      <p> The KDE on &os; team focuses on packaging and making
	sure that the experience of KDE and Qt on &os; is as good as
	possible.</p>

      <p>First of all, we would like to welcome Tobias Berner to
	the ranks of the area51 committers.  He has been regularly mentioned
	in our recent status reports, and has finally received committer
	privileges to our experimental repository.  Becoming an area51
	committer is usually the first step towards becoming a kde@
	ports committer.  We hope that Tobias can fix and update our ports
	more easily, and start committing his KDE Frameworks 5 ports to
	area51.</p>

      <p>Additionally, this quarter Qt 5.4.1 was committed to
	the ports tree.  This marks the first time ever since Qt 5 was
	released that we have the latest upstream stable release in our
	ports tree!  This was made possible by all the work we had to put
	into cleaning up the Qt 5 ports infrastructure for the 5.3 update,
	mentioned in our previous status report.</p>

      <p>Last but not least, Alonso Schaich finally landed an
	update to our KDE4 ports that had been in our experimental
	repository for a while, bringing them to the latest 4.14
	release, 4.14.3.</p>

      <p>Overall, we have updated the following ports in this
	quarter:</p>

      <ul>
	<li>Calligra 2.9.1 (committed to area51)</li>
	<li>CMake 3.1.0, 3.1.1, 3.1.3 (committed to ports)</li>
	<li>DigiKam 4.2.0 (committed to ports), 4.8.0 (committed to
	  area51)</li>
	<li>PyQt 4.11.3 + QScintilla 2.8.4 + sip 4.16.5 (committed to
	  ports), sip 4.16.7 (committed to area51)</li>
	<li>Qt 5.4.1 (committed to ports)</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Put more effort into Qt5-related ports: KDE Frameworks
	  5 (currently worked on by Tobias Berner) and PyQt 5.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>FreeBSD Ada Ports</title>

    <contact>
      <person>
	<name>
	  <given>John</given>
	  <common>Marino</common>
	</name>
	<email>marino@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://home.gna.org/ghdl/" />
      <url href="http://sourceforge.net/projects/ghdl-updates/" />
    </links>

    <body>
      <p>There are 51 Ada-related ports currently, but two of them
	are being retired: the GCC 4.7-based <tt>lang/gcc47-aux</tt> and
	the BSD-&gt;android cross-compiler for ARMv5
	(<tt>lang/gnatdroid-armv5</tt>).  The former has no advantage
	over the newer GCC 4.9-based <tt>lang/gcc-aux</tt>, and the
	latter has not built for over a year.  Android enthusiasts can
	still use the the ARMv7 cross-compiler
	(<tt>lang/gnatdroid-armv7</tt>).</p>

      <p>A new port is <tt>lang/gcc5-aux</tt>, which includes GNAT
	from the upcoming release of gcc5.  This compiler already builds
	all Ada ports except gtkada3 (which blocks the
	<tt>devel/gps</tt> &mdash; the GNAT Programming Studio), and
	<tt>gtkada3</tt> should be fixed soon.  When GCC5 is released,
	the Ada framework will switch to using <tt>gcc5-aux</tt> as the
	default compiler.  For those that cannot wait, it is possible to
	use it now by putting <tt>ADA_DEFAULT=5</tt> in /etc/make.conf,
	but this requires rebuilding all Ada ports from source.</p>
    </body>

    <help>
      <task>
	<p>It is a near-term objective to bring the Ada-based GDHL
	  (VHDL simulator) to ports.  The upcoming release 0.32 will be
	  based on GCC 4.9 and the port will be based on this release.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>GNOME on &os;</title>

    <contact>
      <person>
	<name>&os; GNOME Team</name>
	<email>freebsd-gnome@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.freebsd.org/gnome" />
      <url href="https://github.com/freebsd/freebsd-ports-gnome">GNOME development repo</url>
      <url href="https://wiki.gnome.org/Projects/Jhbuild/FreeBSD" />
    </links>

    <body>
      <p>The &os; GNOME Team maintains the GNOME, MATE, and
	CINNAMON  desktop environments and graphical user interfaces for
	&os;.  GNOME 3 is part of the GNU Project.  MATE is a fork of
	the GNOME 2 desktop.  CINNAMON is a desktop environment using
	GNOME 3 technologies but with a GNOME 2 look and feel.</p>

      <p>At the end of this quarter we updated GNOME and CINNAMON
	to the latest versions on their branches, 3.14 and 2.4,
	respectively.</p>

      <p>GNOME 3.16 was released February 25th; we ported it to
	&os;.  There are still some showstopper problems that showed up.
	During testing of the current versions of the 3.16 ports a bug
	in pkg was uncovered in the multiple repository support, and
	swiftly fixed in pkg 1.4.99.15.</p>

      <p>For the GNOME 3.18 cycle we going to work closely with
	the x11 team on porting libinput and testing Wayland.  When that
	is done we need to see if we want to enable Wayland for our
	stable releases and we probably need XWayland from
	<tt>xorg-server</tt> 1.16+ to support X applications.  The
	estimate is that Wayland arriving in ports will have to wait
	until 8.4-Release is EOL.</p>
    </body>

    <help>
      <task>
	<p>The GNOME website is stale.  Work is underway, although
	  slowly, on the development section.  We could use some
	  help here.</p>
      </task>

      <task>
	<p>MATE 1.10 porting is under way; the latest 1.9 releases
	  are available in the mate-1.10 branch.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Nanosecond file timestamps</title>

    <contact>
      <person>
	<name>
	  <given>Jilles</given>
	  <common>Tjoelker</common>
	</name>
	<email>jilles@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Sergey</given>
	  <common>Kandaurov</common>
	</name>
	<email>pluknet@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Two new system calls, futimens() and utimensat(), were
	added, making it possible to set file timestamps with nanosecond
	accuracy.  Various utilities like cp, mv and touch were changed
	to use the new calls to preserve and set timestamps with
	full precision.</p>

      <p>The stat() and related system calls have returned file
	timestamps with nanosecond accuracy for a long time, but there
	was no way to set a timestamp more accurately than
	microseconds.</p>

      <p>With these changes, it will be possible to use more
	accurate timestamps (sysctl vfs.timestamp_precision=3) without
	anomalies such as a copy of a file (from cp -p) appearing older
	than the original.  This is particularly useful for NFS servers,
	which use file timestamps for cache invalidation.</p>
    </body>

    <help>
      <task>
	<p>Where possible, fix code that still sets inaccurate
	  timestamps on files, typically by calling futimes(),
	  futimesat(), lutimes(), utime() or utimes() with a non-null
	  times pointer.  There may be a reason for this such as a limited
	  network protocol or file format, but there is some code left
	  that can be fixed.</p>
      </task>
    </help>
  </project>
</report>
