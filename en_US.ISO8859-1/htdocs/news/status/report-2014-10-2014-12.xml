<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>October-December</month>

    <year>2014</year>
  </date>

  <section>
    <title>Introduction</title>

<!-- <?ignore -->
    <p><strong>This is a draft of the October&ndash;December 2014 status
	report.	 Please check back after it is finalized, and an
	announcement email is sent to the &os;-Announce mailing
	list.</strong></p>
<!-- ?> -->

    <p>This report covers &os;-related projects between October and
      December 2014.  This is the last of four reports planned for
      2014.</p>

    <p>The fourth quarter of 2014... was a very busy and productive
      time</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from January
      to March 2015 is April 7th, 2015.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='misc'>
    <title>&os; Forum Software Migration</title>

    <contact>
      <person>
	<name>&os; Forums Administration Team</name>
	<email>forum-admins@</email>
      </person>
    </contact>

    <body>
      <p>With funding from the &os; Foundation, the &os; forums
	were migrated to XenForo software.  The new software is far more
	capable and easy to use.  While the entire forum team
	contributed, &a.danger; did a particularly excellent job
	importing existing users and messages and bringing back the
	often-requested "Thanks" feature.  The upgrade was completed in
	time to be ready for the influx of new users from the release of
	&os; 10.1, and we have already seen an increase in usage.</p>

      <p>Developers with an @FreeBSD.org address can contact forum
	administrators to obtain the highly-desired "@"	suffix on their
	forum user name along with a Developer flag.</p>

      <p>We want to thank the Foundation for making this possible, and
	the users for their patience and continued presence on the
	forums!</p>
    </body>

    <sponsor>
      The &os; Foundation
    </sponsor>

    <help>
      <task>
 	<p>Encourage more developers and users to try the new forums.</p>
      </task>

      <task>
	<p>Continue getting feedback from users for tuning and
	  improvements.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Process management</title>

    <contact>
      <person>
	<name>
	  <given>Konstantin</given>
	  <common>Belousov</common>
	</name>
	<email>kib@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Peter</given>
	  <common>Holm</common>
	</name>
	<email>pho@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>There were several improvements made to the FreeBSD process
	management last quarter.</p>

      <p>Reaper. The facility to allow a process to reliably track the
	running and exiting state of the whole subtree of the processes,
	was added.  It is intended to improve tools like timeout(1) or
	poudriere, by making it impossible for the runaway granchild to
	escape the controlling process.  Feature was designed based on
	similar facility in the DragonFlyBSD and Linux, with some
	references to the Solaris contracts.  Committed to HEAD in
	r275800.</p>

      <p>Total stop.  Right now, the FreeBSD suspension code does not
	ensures that the system, both from software and from hardware
	view, is in the steady and consistent state.  One aspect is the
	usermode process activity which is not stopped, continuing to
	making requests to the hardware.  It is not realistic to expect
	drivers to be able to correctly handle the calls after
	SUSPEND_CHILD.</p>

      <p>Together with Peter Holm, we developed a facility to stop
	usermode threads at the safe points, where they are known to not
	own and to not wait for kernel resources, in particular, not
	waiting for device requests finishing.  It is based on the
	existing single-threading code, but extending it to allow external
	thread to put some process into stopped state.  Also, a facility
	to sync filesystems before suspend was added, to ensure that
	consistent metadata and as much as possilbe of the cached user
	data are on stable storage, to minimize damage of failed
	resume.</p>

      <p>The code stressed some parts of the system and lead to
	discovery of the unusual numbers of bugs in the different parts of
	the system, including process management, buffer cache and syscall
	handlers.  The bugs were fixed, fixes and the features commmitted
	by a series culminating in r275745.</p>

      <p>Process spinlock changes. During the work described above, it
	was noted that process spinlock duties are significantly
	overloaded (the same is true for the process lock).  The spinlock
	was split into per-feature lock, see r275121.  Also, as result, it
	was possible to eliminate recursion on it, r275372.</p>
    </body>

    <sponsor>The FreeBSD Foundation</sponsor>

  </project>

  <project cat='proj'>
    <title>FreeBSD on the Acer C720 Chromebook</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Gmelin</common>
	</name>
	<email>freebsd@grem.de</email>
      </person>
    </contact>

    <links>
      <url href="http://blog.grem.de/pages/c720.html" />
    </links>

    <body>
      <p>Most system features work, including keyboard, WiFi, sound,
	VESA graphics, touchpad, USB and decent battery life (5 to 6 hours).</p>
    </body>

    <help>
      <task>
	<p>Streamline patches and merge them into HEAD.</p>
      </task>

      <task>
	<p>Make suspend/resume work (depends on Haswell support).</p>
      </task>
    </help>
  </project>

  <project cat='misc'>
    <title>Creating Vagrant images with Packer</title>

    <contact>
      <person>
	<name>
	  <given>Brad</given>
	  <common>Davis</common>
	</name>
	<email>brd@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://blogs.freebsdish.org/brd/2014/12/22/freebsd-packer-vagrant/">Blog Announcement</url>
      <url href="https://github.com/so14k/packer-freebsd">Git Repo</url>
    </links>

    <body>
      <p>We have developed a recipe to use Packer to create FreeBSD
	Vagrant images to run on VMware and VirtualBox.</p>

      <p><a href="https://www.packer.io/">Packer</a> is a tool for
	creating identical machine images for multiple platforms from a
	single source configuration.</p>

      <p><a href="https://www.vagrantup.com/">Vagrant</a> is a tool to
	create and configure lightweight, reproducible, and portable
	development environments.</p>

      <p>To get started clone the Git repo and follow the directions in
	the README.  More information is available from the Packer and
	Vagrant websites.</p>
    </body>
  </project>

  <project cat="proj">
    <title>pkg(8)</title>

    <contact>
      <person>
	<name>The pkg team</name>

	<email>pkg@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/freebsd/pkg"/>
    </links>

    <body>
      <p>The package development team has released <tt>pkg(8)</tt> 1.4.
	This release fixes lots of bugs and adds some new features:
	<ul>
	  <li>Stricter checking of the path passed via the plist</li>
	  <li>Change in the ABI to be closer to MACHINE_ARCH</li>
	  <li>Add three-way merge functionnality</li>
	  <li>Add conservative upgrade support for multi repository configurations</li>
	  <li>Multirepository priority</li>
	</ul>
      </p>

      <p>An important part of the development direction for the 1.4
	release has been done on stabilizing the existing features, and
	improving the <tt>pkg(8)</tt> experience on small/embedded
	machines (reduce memory usage, speed up operations).</p>

      <p><tt>pkg(8)</tt> is not only the &os; Package Manager, but the
	Package Manager for DragonflyBSD.  Additionally support has been
	added to build <tt>pkg(8)</tt> on OS X and Linux.  This work
	will allow other Operating Systems the option of adopting
	<tt>pkg(8)</tt> to manage their packages and bring new
	developers into the project.</p>
    </body>

    <help>
      <task>
	<p>Add more regression tests.</p>
      </task>
      <task>
	<p>Package FreeBSD base.</p>
      </task>
      <task>
	<p>Allow using mtree as a plist when creating a package.</p>
      </task>
      <task>
	<p>Implement flexible dependencies.</p>
      </task>
      <task>
	<p>Test the developement branch.</p>
      </task>
      <task>
	<p>More developers are needed, check the Issues on Github.</p>
      </task>
    </help>
  </project>

  <project cat="bin">
    <title>mandoc(1) support</title>

    <contact>
      <person>
	<name>
	  <given>Baptiste</given>
	  <common>Daroussin</common>
	</name>
	<email>bapt@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Ulrich</given>
	  <common>Spoerlein</common>
	</name>
	<email>uqs@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>The Documentation Team</given>
	</name>
	<email>docs@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://mdocml.bsd.lv" />
    </links>

    <body>
      <p><tt>mandoc(1)</tt> has been made the default manual page
	formatter on HEAD -- man(1) will use <tt>mandoc(1)</tt> to
	format manual pages by default, then fall back to
	<tt>groff(1)</tt> if it fails.</p>
 
      <p>This change also fixes an issue with FreeBSD <tt>man(1)</tt>
	command not able to properly deal with ".so" in gzipped manual
	pages.</p>
 
      <p>The documentation team has spent a lot of time fixing issues
	reported by <tt>mdoc(7)</tt> in the FreeBSD manual pages.  This
	greatly improves the quality of our manual pages.</p>
 
      <p>Most manual pages with remaining issues are from contrib/ for
	which changes should be reported and fixed upstream.</p>
 
      <p>The "manlint" target has also been switch to use <tt>mandoc
	-Tlint</tt> which results in the target being way more useful
	when working on manual pages.</p>
 
      <p>Some <tt>groff(1)</tt> vs <tt>mandoc(1)</tt> formatting
	differencies have been spotted and reported to mandoc's upstream
	developers.</p>
    </body>

    <help>
      <task>
	<p>Switch <tt>makewhatis(1)</tt> to the version shipped with
	  <tt>mandoc(1)</tt>.</p>
      </task>
      <task>
	<p>Figure out a way to detect non <tt>mandoc(1)</tt> friendly
	  manpages from ports and create catpages with <tt>groff(1)</tt>
	  for them.</p>
      </task>
      <task>
	<p>Remove <tt>groff(1)</tt> from base.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>External toolchain</title>

    <contact>
      <person>
	<name>
	  <given>Baptiste</given>
	  <common>Daroussin</common>
	</name>
	<email>bapt@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Warner</given>
	  <common>Losh</common>
	</name>
	<email>imp@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Brooks</given>
	  <common>Davis</common>
	</name>
	<email>brooks@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/ExternalToolchain" />
    </links>

    <body>
      <p>The main goal of the external toolchain project is to be able
	to build world and kernel with non default toolchain.  It can be
	helpful to:
	<ul>
	  <li>Prepare a migration to a newer version of the components like compilers, binutils, and elftoolchain.</li>
	  <li>Port &os; to newer architecture</li>
	  <li>Upgrade from a &os; that ships with GCC 4.2 to a version that ship with clang 3.5+ (which need a more modern toolchain than GCC 4.2 to bootstrap.</li>
	</ul>
      </p>

      <p>The initial support for external toolchain only supported
	clang.  It has been extended to support recent GCC (4.9.1 has
	been tested) and recent binutils (2.24 and 2.25).</p>

      <p>A large number of fixes have been committed to HEAD to support
	incompatible behaviour changes between <tt>ld(1)</tt> from
	binutils 2.17.50 (the version in base) and binutils 2.24+.</p>

      <p>A large number of warnings have been deactivated when building
	the kernel to make sure it is possible to build the kernel with
	recent GCC (first 4.6 and then 4.9.1)</p>

      <p>The build system has been changed to build libc++ as a C++
	stack when a recent enough GCC (4.6+) is used to build world.
	</p>

      <p>To simplify using an external toolchain, the following
	pre-seeded configurations have been added to the ports tree:
	<ul>
	  <li>amd64-xtoolchain-gcc</li>
	  <li>powerpc64-xtoolchain-gcc</li>
	  <li>sparc64-xtoolchain-gcc</li>
	</ul>
      </p>

      <p>Those packages will depend on special version of GCC
	(minimalistic cross-built ready GCC) and on binutils.  To use
	them run: <tt>make CROSS_TOOLCHAIN=powerpc64-gcc TARGET=powerpc
	TARGET_ARCH=powerpc64</tt></p>

      <p>As a result of this effort, it has been possible to
	successfully build and run a kernel and world built with GCC
	4.9.1 and binutils 2.24 on sparc64, amd64 (with minor tweaks for
	amd64), powerpc and powerpc64.</p>
    </body>

    <help>
      <task>
	<p>Patch and upstream GCC 4.9 to support &os; mips, arm and
	aarch64.</p>
      </task>
      <task>
	<p>Adapt and upstream the aarch64 patches for binutils 2.25.</p>
      </task>
      <task>
	<p>Add more pre seeded configurations.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Timer function support for Linuxulator</title>

    <contact>
      <person>
	<name>
	  <given>Bjoern A.</given>
	  <common>Zeeb</common>
	</name>
	<email>bz@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Since 2006, initial support for Linux timer function
	compatibility support was present but untested.
	This update corrects the initial implementation and makes it
	available to the 32bit linuxolator on amd64, not just on i386.
      </p>

      <p>Starting with &os; 10.1, this enables users to run another
	FPGA high-level synthesis toolchain and emulation platform
	on a FreeBSD system.
      </p>
    </body>

    <sponsor>DARPA</sponsor>
    <sponsor>AFRL</sponsor>

  </project>

  <project cat='ports'>
    <title>GNOME on FreeBSD</title>

    <contact>
      <person>
	<name>FreeBSD GNOME Team</name>
	<email>gnome@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.freebsd.org/gnome">FreeBSD GNOME Team website</url>
      <url href="https://github.com/freebsd/freebsd-ports-gnome">FreeBSD Team development repo</url>.
      <url href="https://wiki.gnome.org/Projects/Jhbuild/FreeBSD">GNOME jhbuild buildbot wiki pages.</url>
    </links>

    <body>
      <p>The FreeBSD GNOME Team maintains the GNOME, MATE and CINNAMON desktop
	environments and graphical user interfaces for FreeBSD. GNOME 3 is part
	of the GNU Project. MATE is a fork of the GNOME 2 desktop. CINNAMON
	is desktop environment using GNOME 3 technologies but with a GNOME 2
	look and feel.</p>

      <p>This quarter was exciting time for the GNOME Team. We imported
	GNOME 3.14.0 and CINNAMON 2.2.16 into the ports tree. At the same
	time we removed the old GNOME 2.32 desktop. And two weeks later
	we updated GNOME to 3.14.2 and CINNAMON to 2.4.2 which was collected
	while the preparation for the initial GNOME 3.14.0 import was
	underway.</p>

      <p>We moved our development repo to GitHub. The link is in the links
	section. The repo is structured as follows: the <tt>master</tt> branch
	is vanilla &os; Ports, and we have <tt>theme branches</tt> for topics,
	like the porting of MATE 1.9 (mate-1.10 branch) and GNOME 3.15
	(gnome-3.16 branch). The GNOME 3.14 branch (gnome-3.14) is not
	used/updated anymore because the content has been committed to
	ports, but is kept around for the history.</p>
    </body>

    <help>
      <task>
	<p>The GNOME website is stale. Work is starting on updating
	  the development section. We could use some help here.</p>
      </task>

      <task>
	<p>MATE 1.10 porting is underway, the latest 1.9 releases are
	  available in the mate-1.10 branch.</p>
      </task>

      <task>
	<p>GNOME 3.16 porting is underway, and is available in the
	  gnome-3.16 branch.</p>
      </task>
    </help>
  </project>

  <project cat='team'>
    <title>The &os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The &os; Core Team constitutes the project's "Board of
	Directors", responsible for deciding the project's overall goals
	and direction as well as managing specific areas of the &os;
	project landscape.</p>

      <p>During the fourth quarter of 2014, the &os; Core team saw the
	culmination of a long-running project to rebuild the &os;
	Forums.  The chosen solution was to license XenForo; core would
	like to thank the FreeBSD Foundation for paying the licensing
	costs of this software.</p>

      <p>Much discussion ensued concerning the "New Support Model"
	following Core's meeting at EuroBSDCon in September.  It was
	recognised that trying to change the model immediately before
	10.1-RELEASE was far too late, and the change will be targeted
	at 11.0-RELEASE.</p>

      <p>In order to ensure that 10.1-RELEASE shipped with support for
	up-to-date X Windows and KDE4, core approved the switch to 'new
	Xorg' as the default in time for building the packages for that
	release.</p>

      <p>Git was officially promoted from beta to an officially
	supported version control system.  Git is available as a
	read-only resource for downstream consumers and contains an
	exported copy from SVN, the primary and only read-write
	repository.  The &os; git repositories (exported from the
	master SVN version control) will shortly be available at
	https://git.freebsd.org/, and core has been active
	in ensuring that there is a sufficient body of Git
	administrators available with access to appropriate
	documentation in order to maintain a good git service.</p>

      <p>Core mediated in disputes between a number of committers over
	some updates to system sources, and fielded complaints about
	code quality of some other work in critical areas.
	While such disagreements will occasionally occur, core is
	promoting the routine use of the phabricator service in order to
	review work before committal.  Catching problems early is in the
	project's best interests, and discussion of changes in an open
	review context should minimize confrontational demands for
	immediate back-out of changes.</p>

      <p>Core is working on a charter for a proposed new QA team, to
	encompass members of the Release Engineering and Security teams,
	as well as committers with interests in standards compliance.
	It is envisioned that the QA team will take responsibility for
	merging code from HEAD into the STABLE branches, run integration
	testing against those updates and handle merging patches and
	bug-fixes submitted to the &os; project from third parties.</p>

      <p>During this quarter, core issued two new commit bits, and also
	took two commit bits into safe-keeping.</p>
	
    </body>
  </project>

  <project cat='ports'>
    <title>KDE on FreeBSD</title>

    <contact>
      <person>
	<name>
	  <given>KDE on &os; team</given>
	</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://freebsd.kde.org/" />
      <url href="https://freebsd.kde.org/area51.php" />
      <url href="https://wiki.freebsd.org/KDE" />
      <url href="https://mail.kde.org/mailman/listinfo/kde-freebsd" />
      <url href="http://portscout.freebsd.org/kde@freebsd.org.html" />
    </links>

    <body>
      <p>The KDE on &os; team focuses on packaging and making sure that the
	experience of KDE and Qt on &os; is as good as possible.</p>

      <p>As mentioned last quarter, Alonso Schaich (alonso@) became a
	committer and since then has made good progress helping his mentors
	Raphael Kubo da Costa (rakuco@) and Max Brazhnikov (makc@) maintain all
	Qt and KDE-related ports.</p>

      <p>This quarter, Qt 5.3 was finally committed to the ports tree
	after extensive work that included cleaning up and/or changing a lot of
	the Qt5 ports infrastructure to make it both easier to maintain the Qt
	ports as well as finally make it possible to build newer versions when
	older ones are already installed on the system.</p>

      <p>We have also updated KDE in our experimental area51 repository
	and committed several updates to other ports such as KDevelop and KDE
	Telepathy. Overall, we have worked on the following releases:
	<ul>
	  <li>CMake 3.1.0 (in area51, exp-run in progress for it to be committed to the ports tree)</li>
	  <li>Calligra 2.8.6 (in area51)</li>
	  <li>KDE 4.14.2 (committed to ports), 4.14.3 (in area51)</li>
	  <li>KDE Telepathy 0.8.0 (committed to ports)</li>
	  <li>KDevelop 4.7.0 (committed to ports)</li>
	  <li>Qt 5.3.2 (committed to ports)</li>
	</ul>
      </p>

      <p>Tobias Berner has contributed patches to update QtCreator to 3.3.0 as
	well as KDE Frameworks 5 ports which are under review for inclusion
	in our experimental area51 repository.</p>
    </body>

    <help>
      <task>
	<p>Update Qt5 to 5.4.0.</p>
      </task>

      <task>
	<p>Try to contribute to the work on getting rid of HAL on &os;,
	  which seems to be gaining more traction recently.</p>
      </task>
      <task>
	<p>Add KDE Frameworks 5 ports to our experimental repository.</p>
      </task>
    </help>
  </project>

  <project cat='doc'>
    <title>More Michael Lucas books</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Lucas</common>
	</name>
	<email>mwlucas@michaelwlucas.com</email>
      </person>
    </contact>

    <links>
      <url href="https://www.michaelwlucas.com/nonfiction/freebsd-mastery-storage-essentials">FreeBSD Mastery: Storage Essentials page</url>
      <url href="http://blather.michaelwlucas.com">blog</url>
    </links>

    <body>
      <p>The first small &os; Book, "FreeBSD Mastery: Storage
	Essentials" is available.</p>

      <p>Lucas is moving on to &os; books on ZFS, Specialty
	Filesystems, and jails. They will hopefully be available by
	BSDCan 2015.</p>

      <p>Get status updates on his blog, or follow @mwlauthor on Twitter.</p>
    </body>

    <help>
      <task>
	<p>Push BSDCan out to June, so he has more time to write the
	  new books.</p>
      </task>
    </help>
  </project>

  <project cat='doc'>
    <title>New Translators Mailing List</title>

    <contact>
      <person>
	<name>&os; Translators Mailing List</name>
	<email>freebsd-translators@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>A new mailing list has been created for people translating
	&os; documents and programs from English into other languages.
	Discussions can include methods, tools, and techniques.
	Existing translators are encouraged to join so there is a
	single point of contact.  New translators and those who wish
	to help with translation are welcome.</p>

      <p>New members are asked to introduce themselves and mention the
	languages they are interested in translating.</p>
    </body>

    <help>
      <task>
	<p>Encourage existing translators to join.</p>
      </task>

      <task>
	<p>Welcome and educate new volunteers.</p>
      </task>

      <task>
	<p>Work on implementing newer and easier translation
	  systems and tools.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Jenkins Continuous Integration for &os;</title>

    <contact>
      <person>
	<name>
	  <given>Craig</given>
	  <common>Rodrigues</common>
	</name>
	<email>rodrigc@FreeBSD.org</email>
      </person>

      <person>
	<name>Jenkins Administrators</name>
	<email>jenkins-admin@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Testing</name>
	<email>freebsd-testing@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://jenkins.freebsd.org">Jenkins CI server in &os; cluster</url>
      <url href="http://jenkins-ci.org/content/freebsd-project-use-jenkins-os-testing">FreeBSD and Jenkins OS Testing</url>
      <url href="https://wiki.freebsd.org/201411DevAndVendorSummit?action=AttachFile&amp;do=view&amp;target=kyua_jenkins.pdf">Kyua and Jenkins Testing Framework for BSD </url>
      <url href="https://issues.jenkins-ci.org/browse/JENKINS-21507">PAM authentication problems in FreeBSD</url>
      <url href="https://issues.jenkins-ci.org/browse/JENKINS-24521">Issue to update Jenkins to JNA 4.1.0 for FreeBSD</url>
      <url href="https://github.com/rodrigc/kyua/wiki/Quickstart-Guide">Kyua Quickstart Guide</url>
      <url href="http://www.freshports.org/textproc/igor/">Igor tool for proofreading documentation</url>
      <url href="https://jenkins.freebsd.org/job/FreeBSD_Doc-igor">FreeBSD_Doc-igor Jenkins build</url>
      <url href="https://jenkins.freebsd.org/job/FreeBSD_HEAD_sparc64/">FreeBSD_HEAD_sparc64 Jenkins build</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-testing/2014-November/000609.html">Susan Stanziano from Xinuous ran kyua tests</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-testing/2014-December/000697.html">Andy Zhang from Microsoft ran kyua tests</url>
      <url href="https://lists.freebsd.org/pipermail/svn-src-all/2014-October/092212.html">&a.ngie; imported NetBSD tests</url>
      <url href="http://lists.freebsd.org/pipermail/freebsd-testing/2015-January/000713.html">Steve Wills ran tests in Google Compute Engine</url>
      <url href="https://github.com/Homebrew/homebrew/pull/32346">Kyua submitted to Homebrew project</url>
      <url href="https://github.com/freebsd/freebsd-ci/pull/3">Brian Gardner submits jtreg tests</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-testing/2015-January/000723.html">Ahmed Kamal offers to help with Saltstack</url>
      <url href="https://lists.freebsd.org/pipermail/freebsd-testing/2015-January/000722.html">MIPS builds</url>
    </links>

    <body>
      <p>Since the last status report, many people have contributed
	help in various areas to help with with Continuous Integration
	and Testing in FreeBSD.  Some of the highlights include:</p>

      <ul>
	<li>The Jenkins project mentioned on their blog how FreeBSD is using
	  Jenkins and kyua to run OS-level tests.</li>

	<li>&a.rodrigc; submitted patches to upgrade Jenkins to use JNA 4.1.0.
	  The Jenkins project accepted these patches [JENKINS-24521] in
	  the Jenkins 1.586 release.  This fixed problems with PAM
	  authentication support in Jenkins on FreeBSD [JENKINS-21507].</li>

	<li>&a.rodrigc; gave a presentation Kyua and Jenkins Testing
	  Framework for BSD at the Developer and Vendor summit on
	  November 3, 2014 in San Jose, California.  In the presentation,
	  &a.rodrigc;'s described how for every commit to the FreeBSD source
	  tree, nearly 3000 tests are run using kyua inside a bhyve virtual
	  machine.  The kyua test results are exported to JUnit XML format,
	  which is then used by Jenkins to generate web-based test reports with
	  graphs.</li>

	<li>&a.lwhsu; set up a Jenkins build named FreeBSD_Doc-igor
	  to run the Igor tool written by &a.wblock;.  Igor proofreads
	  FreeBSD documentation and reports various errors.</li>

	<li>&a.rodrigc; set up a Jenkins build named
	  FreeBSD_HEAD_sparc64 to build the FreeBSD HEAD branch for
	  the sparc64 architecture</li>

	<li>&a.ngie; imported more tests from NetBSD.  After this import,
	  there are now over 3000 tests in the /usr/tests
	  directory.</li>

	<li>Susan Stanziano from Xinuous ran kyua tests and provided
	  feedback about test errors, running the tests in a bhyve
	  VM.</li>

	<li>Andy Zhang from Microsoft ran kyua tests and provided
	  feedback about test errors running in a Hyper-V 2012R2
	  VM.</li>

	<li>&a.swills; ran the &os; tests in Google Compute Engine and provided
	  the test results.</li>

	<li>&a.rodrigc; submitted a formula to create a package for
	  kyua in the Homebrew packaging system on OS X.  The Homebrew project
	  accepted this.  Now, kyua can easily be installed on OS X via a
	  Homebrew package.  Hopefully &os; this will make it easier to share
	  more test infrastructure and scripts with OS X.</li>

	<li>&a.rodrigc; submitted to the Debian project a kyua
	  package.  Approval for this is still pending.  A package
	  will make it much easier to install kyua on Linux distributions which
	  use Debian packages such as Debian, Ubuntu and Linux Mint.  Hopefully
	  &os; this will make it easier to share more test infrastructure and
	  scripts with Linux.</li>

	<li>Brian Gardner submitted scripts to run the Regression Test
	  Harness for OpenJDK (jtreg).  The test results are in JUnit XML
	  format, which can be natively imported into Jenkins.</li>

	<li>Ahmed Kamal, an experienced devops expert, and past
	  contributor to the Ubuntu project, offered to help
	  &a.rodrigc; with improving the automation and deployment of
	  Jenkins nodes in the &os; cluster using the Saltstack automation
	  framework.  Ahmed is interested in helping the &os; project.</li>

	<li>&a.rodrigc; worked with &a.adrian; to set up Jenkins
	  builds of MIPS targets.  The next step will be to get kyua
	  tests running inside a QEMU MIPS VM.</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Set up more builds based on different architectures.</p>
      </task>

      <task>
	<p>Improve the maintenance of nodes in the Jenkins cluster
	 using devops frameworks such as Saltstack.</p>
      </task>

      <task>
	<p>Get feedback for improving the Kyua Quickstart Guide.</p>
      </task>

      <task>
	<p>People interested in helping out should join the
	  freebsd-testing@FreeBSD.org list.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Xfce</title>

    <contact>
      <person>
	<name>FreeBSD Xfce Team</name>
	<email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Xfce" />
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms, such as FreeBSD. It aims to be fast and
	lightweight, while still being visually appealing and easy to use.</p>

      <p>During this quarter, the team has kept up-to-date the following
	applications:</p>

      <ul>
	<li>misc/xfce4-weather-plugin 0.8.5</li>
	<li>science/xfce4-equake-plugin 1.3.6</li>
	<li>sysutils/xfce4-netload-plugin 1.2.4</li>
	<li>sysutils/xfce4-systemload-plugin 1.1.2</li>
	<li>www/midori 0.5.9</li>
	<li>x11/xfce4-taskmanager 1.1.0</li>
	<li>x11/xfce4-whiskermenu-plugin 1.4.2</li>
	<li>x11-wm/xfce4-desktop 4.10.3</li>
      </ul>

      <p>Two new ports have also been added (taken from our repository):</p>

      <ul>
	<li>deskutils/xfce4-volumed-pulse</li>
	<li>x11/xfce4-dashboard</li>
      </ul>

      <p>Moreover, we are working on the next stable release, below list
	of ports updated:</p>

      <ul>
	<li>sysutils/xfce4-power-manager 1.4.2</li>
	<li>x11/xfce4-dashboard 0.3.4</li>
	<li>x11-wm/xfce4-session 4.11.1</li>
      </ul>

      <p>We sent some patches to upstream.</p>

      <ul>
	<li>bug <a href="https://bugzilla.xfce.org/show_bug.cgi?id=11104">#11104</a>, to keep 'wallpaper settings' in Ristretto with xfdesktop >= 4.11</li>
	<li>bug <a href="https://bugzilla.xfce.org/show_bug.cgi?id=11249">#11249</a>, add 'Hidden' option in desktop item editor (refused)</li>
	<li>bug <a href="https://bugzilla.xfce.org/show_bug.cgi?id=11413">#11413</a>, to use sysctl(3) and acpi_video(4) for backlight support</li>
      </ul>

      <p>A FAQ is being written <a href="https://reviews.freebsd.org/D1305">D1305</a>.</p>
    </body>

    <help>
      <task>
	<p>Find workaround when acpi_video(4) is not functional
	  (panel crashes); OpenBSD seems to have same problem.</p>
      </task>
      <task>
	<p>Cleanup patch in order to add new panel plugin in ports
	  tree.</p>
      </task>
      <task>
	<p>Continue to work on documentation, especially the Porter's
	  handbook.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Updating OpenCrypto</title>

    <contact>
      <person>
	<name>
	  <given>John-Mark</given>
	  <common>Gurney</common>
	</name>
	<email>jmg@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://svnweb.freebsd.org/changeset/base/r275732">r275732 changeset</url>
      <url href="http://freebsdfoundation.blogspot.com/2014/08/freebsd-foundation-announces-ipsec.html">FreeBSD Foundation announces IPsec Enhancement Project</url>
    </links>

    <body>
      <p>The project adds support for AES-GCM and AES-CTR mode to the
	OpenCrypto framework.  Both software and AES-NI accelerated versions
	are functional, working and committed.  Ermal Luçi (eri@) is working
	on adding support for the additional modes to IPsec.</p>
    </body>

    <sponsor>
      The &os; Foundation
    </sponsor>
    <sponsor>
      Netgate
    </sponsor>

    <help>
      <task>
	<p>Commit the port that provides the NIST KAT vectors so that
	  the tests committed can run.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>The Graphics stack on FreeBSD</title>

    <contact>
      <person>
	<name>FreeBSD Graphics team</name>
	<email>freebsd-x11@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">Graphics stack roadmap and supported hardware matrix</url>
      <url href="http://blogs.freebsdish.org/graphics/">Graphics stack team blog</url>
      <url href="https://github.com/freebsd/freebsd-ports-graphics">Ports development tree on GitHub</url>
    </links>

    <body>
      <p>Mesa was upgraded to 10.3, then 10.4 for FreeBSD 10.1-RELEASE and
	11-CURRENT.  We test release candidates and therefore this port is
	now usually updated shortly after a new release.  Mesa 10.x brings
	huge improvements in terms of OpenGL standards support, performance
	and stability, especially for Radeon owners.  Mesa 9.1 is kept for
	FreeBSD 9.x, but we have plans to fix this; see below.</p>

      <p><tt>graphics/gbm</tt> and <tt>devel/libclc</tt> are new ports used
	by Mesa to implement OpenCL.  The next step is to finish the port for
	Mesa's libOpenCL.so, named Clover.  This will permit users to run
	OpenCL programs on Radeon GPUs for now.</p>

      <p>xserver was upgraded from 1.12 to 1.14.  This is the last version
	of xserver supporting Mesa 9.1.  Changes are described in an article
	on the blog.  The most noticeable one is probably the switch from
	the input device detection back-end based on HAL to the one based on
	devd. hald(8) is still required by many desktop environments, but
	the X.Org server itself is free from it.</p>

      <p>xserver was the last port supporting the <tt>WITH_NEW_XORG</tt>
	knob.  The knob is now completely removed. This was the occasion to
	add <tt>WITH_NEW_XORG</tt> and <tt>WITH_KMS</tt> to the list of
	deprecated knobs to help people clean up their <tt>make.conf</tt>.
	At the same time, the new-xorg alternate pkg repository was
	deprecated.</p>

      <p>After discussion, two patent-encumbered options were enabled by
	default:</p>
      <ul>
	<li><tt>TEXTURE_FLOAT</tt> in graphics/dri, which allows Mesa to
	  advertise the support for OpenGL 3.0+;</li>
	<li><tt>LCD_FILTERING</tt> in print/freetype2, which enables the
	  subpixel rendering engine, improving font anti-aliasing.</li>
      </ul>
      <p>These two packages now provide a better user experience
	out-of-the-box.  Users who are uncomfortable with the options may
	unset them and rebuild the ports.  There is no need to rebuild
	anything else.</p>

      <p>On the kernel side, Tijl Coosemans added AGP support back to the
	TTM memory manager and therefore to the Radeon driver.  His work was
	merged back to stable/10 and will be available in FreeBSD
	10.2-RELEASE.</p>

      <p>We migrated our Ports development tree to Git and GitHub.  Tracking
	changes in the official Ports tree and preparing patches is way
	easier.  Furthermore, we can accept pull requests. All reasons behind
	this change are detailed on the blog and the workf-low is described
	on the wiki.</p>

      <p>The XDC 2014 (X Developer's Conference) was a great conference.
	Reviving the relationship with the developers of the graphics
	stack was a success! A report is available on the blog.</p>

      <p>Our next items on the roadmap are:</p>
      <ol>
	<li>Provide FreeBSD 10.1-RELEASE's i915 driver to FreeBSD 9.x users
	  through a new port.  This is a work in progress, but it would allow
	  us to remove Mesa 9.1 and make Mesa 10.4 available everywhere.</li>
	<li>Once Mesa 9.1 is gone, we can update xserver to 1.16.</li>
      </ol>
    </body>

    <help>
      <task>
	<p>See the "Graphics" wiki page for up-to-date information.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>FreeBSD on POWER8</title>

    <contact>
      <person>
	<name>
	  <given>Nathan</given>
	  <common>Whitehorn</common>
	</name>
	<email>nwhitehorn@freebsd.org</email>
      </person>
      <person>
	<name>
	  <given>Justin</given>
	  <common>Hibbits</common>
	</name>
	<email>jhibbits@freebsd.org</email>
      </person>
      <person>
	<name>
	  <given>Adrian</given>
	  <common>Chadd</common>
	</name>
	<email>adrian@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/POWER8" />
      <url href="http://www.tyan.com/campaign/openpower/" />
    </links>

    <body>
      <p>IBM and the OpenPOWER Foundation are pushing for a wider
	software and hardware ecosystem for POWER8-based systems.
	Beginning January 3, we have been doing bringup work on a Tyan
	GN70-BP010 POWER8 server, a quad-core 3 GHz system with 32 hardware
	threads.</p>

      <p>The main target for the port is the PowerKVM hypervisor
	provided on OpenPOWER hardware.  This uses the same software
	interfaces as the PowerVM hypervisor already supported on
	earlier POWER hardware.  The target is to have this operation mode
	fully supported by &os; 10.2.  &os; currently runs under the
	hypervisor when using a mass storage driver other than the built-in
	virtualized SCSI; the issues with the SCSI driver should be solved
	shortly.</p>

      <p>The longer-term goal is to also operate on the bare system.
	This requires interaction with the OPAL system firmware and
	the development of device drivers for the on-board PCI,
	console, and interrupt controller hardware.  As of January 4, the
	&os; kernel had printed initial messages to the console.</p>
    </body>

    <sponsor>
      &os; Foundation
    </sponsor>

    <help>
      <task>
	<p>Fix virtualized SCSI driver in PowerKVM.</p>
      </task>

      <task>
	<p>Write OPAL drivers.</p>
      </task>

      <task>
	<p>Integrate loader(8) with petitboot bootloader.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>FreeBSD Xen</title>

    <contact>
      <person>
	<name>
	  <given>Roger</given>
	  <common>Pau Monné</common>
	</name>
	<email>royger@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Justin T.</given>
	  <common>Gibbs</common>
	</name>
	<email>gibbs@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.xen.org/wiki/FreeBSD_PVH">FreeBSD PVH DomU wiki page</url>
      <url href="http://wiki.xen.org/wiki/FreeBSD_Dom0">FreeBSD PVH Dom0 wiki page</url>
    </links>

    <body>
      <p>During this quarter almost all pending Xen changes have been
	committed, enabling the usage of FreeBSD as Dom0 under the new
	PVH mode. The set of features supported by FreeBSD is still limited,
	but it should allow for basic usage of FreeBSD as Dom0. Support for
	booting Xen from the FreeBSD boot loader will be committed very soon
	to HEAD.</p>

      <p>Apart from testing on a variety of hardware, work has now
	shifted to improve PVH support in Xen itself in order to have feature
	parity with a traditional PV Dom0 and to declare the PVH ABI as
	stable.</p>

      <p>Regarding guest improvements (running FreeBSD as a DomU),
	there's also ongoing work to add unmapped IO support to Xen blkfront,
	which is blocked pending some modifications to the generic bounce
	buffer code.</p>
    </body>

    <sponsor>Citrix Systems R&amp;D</sponsor>
    <sponsor>Spectra Logic Corporation</sponsor>

    <help>
      <task>
	<p>Test on different hardware.</p>
      </task>

      <task>
	<p>Improve backends (netback, blkback) performance.</p>
      </task>

      <task>
	<p>Work with upstream Xen to improve PVH and make it stable.</p>
      </task>

      <task>
	<p>Improve generic bounce buffer code for unmapped bios in order
	  to support blkfront alignment requirements.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Clang, llvm and lldb updated to 3.5.0</title>

    <contact>
      <person>
	<name>
	  <given>Dimitry</given>
	  <common>Andric</common>
	</name>
	<email>dim@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
      <person>
	<name>
	  <given>Roman</given>
	  <common>Divacky</common>
	</name>
	<email>rdivacky@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://llvm.org/releases/3.5.0/docs/ReleaseNotes.html">LLVM 3.5.0 Release Notes</url>
      <url href="http://llvm.org/releases/3.5.0/tools/clang/docs/ReleaseNotes.html">Clang 3.5.0 Release Notes</url>
    </links>

    <body>
      <p>Just before the end of the year, we have updated clang,
	llvm and lldb in base to 3.5.0 release.  These all contain
	numerous improvements; please see the linked release notes for
	more detailed information.</p>

      <p>This is the first release that requires C++11 support to build.
	At this point, FreeBSD 10.0 and later provide that support, at least
	on x86.</p>

      <p>In the near future, more components from the llvm.org will
	be updated in base, with libc++ and libcompiler-rt most likely
	being the first.</p>

      <p>Thanks to Ed Maste, Roman Divacky, Andrew Turner, Justin
	Hibbits and Antoine Brodin for their invaluable help with this
	import.</p>
    </body>

    <help>
      <task>
	<p> While most ports that were impacted by this update have
	  already been fixed, there are still a few that do not work with
	  the clang 3.5.0 update.</p>

	<p>In most cases, this is due to relatively simple issues,
	  such as new warnings, or slightly stricter error checking
	  (primarily for C++ programs).  Fixing those issues should not take
	  too much work.</p>
      </task>

      <task>
	<p>There are still some open issues with the ARM, PowerPC
	  and Sparc64 architectures, and any help in this area is very much
	  appreciated.</p>
      </task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os; Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://ftp.freebsd.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os; development snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is responsible for setting
	and publishing release schedules for official project releases
	of &os;, announcing code freezes and maintaining the
	respective branches, among other things.</p>

      <p>The &os;&nbsp;10.1-RELEASE cycle completed November 14th,
	marking the second official release point from the
	<tt>stable/10</tt> branch, just short of three weeks later
	than the original schedule anticipated.</p>

      <p>Work to produce virtual machine images for platforms not
	currently supported has continued, with focus aimed primarily
	at Amazon EC2, Google Compute Engine, and Openstack.</p>

      <p>With huge thanks to &a.ian; and &a.imp;, new ports exist for
	&os;/arm where u-boot is required.  Work has been in progress
	since late December to migrate the existing &os;/arm release
	build tools to utilize the new ports.</p>
    </body>

    <sponsor>
	The &os; Foundation
    </sponsor>
  </project>

  <project cat='proj'>
    <title>Git integration</title>

    <contact>
      <person>
	<name>Git discussion list</name>
	<email>freebsd-git@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://lists.freebsd.org/mailman/listinfo/freebsd-git" />
      <url href="https://www.kernel.org/pub/software/scm/git/docs/git-svn.html" />
      <url href="https://github.com/git/git/commit/83c9433e679635f8fbf8961081ea3581c93ca778" />
      <url href="https://wiki.freebsd.org/GitWorkflow" />
      <url href="https://github.com/freebsd/freebsd" />
      <url href="https://bugs.freebsd.org/bugzilla" />
    </links>

    <body>
      <p>Several &os; developers have expressed interest in improving
         the tools and documentation to facilitate the use of the Git
         source code management (SCM) system when working with &os; code.
         Some highlights of the work in this area include the following:</p>
         
      <ul>
        <li>&a.alfred; requested the creation of a new mailing list
          freebsd-git@FreeBSD.org.  This list is for discussion of
          git use in the FreeBSD project.</li>

	<li>&a.alfred; submitted a patch to git.  This patch allows a
	  developer to work on a source code tree in git and use git-svn to
	  push changes from this tree directly to a Subversion repository
	  and set Subversion properties.  Before this patch, git-svn did not
	  properly set Subversion properties.  This is important for &os;
	  developers because the &os; Subversion repo will block commits
	  which do not properly set certain Subversion properties.  The git
	  project accepted this change in changeset 83c9433.</li> 

	<li>&a.alfred; updated the Git Workflow wiki document to
	  include information for using git-svn to commit to the FreeBSD
	  Subversion repository.</li>

        <li>&a.robak; wrote a script which integrates Github and
	  &os; Bugzilla.  When a user files a Github pull
	  request against the &os; source code tree on Github, this script
	  will open a new PR in &os; Bugzilla.  This will allow users to
	  contribute code and patches via Github pull requests, and have the
	  request tracked by &os; developers in Bugzilla.  Github pull
	  requests cannot currently be directly merged into the &os; source
	  tree on Github, because the main source code repository is
	  currently Subversion.   The &os; source code tree on Github is a
	  read-only mirror of the &os; Subversion repository.  &a.rodrigc;
	  coordinated with &a.robak; and bugmeister@FreeBSD.org to move
	  forward on this, and provide &a.robak; with enough access to
	  Bugzilla to open PR's via a script.</li>
      </ul>
    </body>

    <help>
      <task>
	<p>The Github integration script is not deployed yet and
	  is not active for all pull requests against the &os; source tree
	  on Github.  &a.robak; and bugmeister@FreeBSD.org need to work out
	  the final details for deploying this script into production.  The
	  script must be accessible via HTTP POST requests because it uses
	  the Github REST API.  &a.robak; and bugmeister@FreeBSD.org need to
	  reach agreement on where this script lives, and do a security
	  audit.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Migration to ELF Tool Chain tools</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://elftoolchain.sourceforge.net" />
    </links>

    <body>
      <p>The ELF Tool Chain project provides BSD licensed
	implementations of compilation tools and libraries for building
	and analyzing ELF objects.  It started as part of &os; but has
	moved to a standalone project to encourage wider participation
	from others in the open-source developer community.  &os;'s
	libelf and libdwarf are now imported from upstream source in
	contrib/elftoolchain.</p>

      <p>ELF Tool Chain provides a set of tools equivalent to the
	GNU Binutils suite.  This project's goal is to import these tools
	into the &os; base system so that we have a set of up-to-date
	and maintained tools that also provide support for new CPU
	architectures of interest, such as arm64.</p>

      <p>The following tools have now been imported and are available by
	setting the src.conf knob WITH_ELFTOOLCHAIN_TOOLS=yes:</p>

      <ul>
	<li>addr2line</li>
	<li>nm</li>
	<li>size</li>
	<li>strings</li>
	<li>strip (elfcopy)</li>
      </ul>

      <p>A ports exp-run uncovered some bugs in these tools.  The
	bugs are being fixed in the &os; source tree and are in the
	process of being committed to the upstream project.</p>

      <p>ELF Tool Chain's readelf will be enabled as well once some
	missing functionality in ELF note parsing is added.  ELF Tool
	Chain's elfcopy provides equivalent functionality to Binutils
	objcopy, and accepts the same command-line arguments.  For it to be
	a viable replacement for all uses of objcopy in the base system it
	will need to gain support for writing portable exectuable (PE)
	format binaries, which are used in by UEFI boot code.</p>

      <p>The ELF Tool Chain project does not currently provide
	replacements for as, ld, and objdump.  For &os; these tools will
	likely be obtained from the LLVM project.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
      <task>
	<p>Import readelf.</p>
      </task>

      <task>
	<p>Add missing functionality to readelf.</p>
      </task>

      <task>
	<p>Add missing functionality to elfcopy and migrate the base system
	  build.</p>
      </task>

      <task>
	<p>Fix issues found by fuzzing inputs to the tools.</p>
      </task>

      <task>
	<p>Switch the default to WITH_ELFTOOLCHAIN_TOOLS.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>bhyve</title>

    <contact>
      <person>
	<name>
	  <given>Peter</given>
	  <common>Grehan</common>
	</name>
	<email>grehan@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Neel</given>
	  <common>Natu</common>
	</name>
	<email>neel@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Tycho</given>
	  <common>Nightingale</common>
	</name>
	<email>tychon@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>
	<email>freebsd@allanjude.com</email>
      </person>
    </contact>

    <links>
      <url href="http://www.bhyve.org">bhyve FAQ and talks</url>
    </links>

    <body>
      <p>bhyve is a hypervisor that runs on the &os;/amd64
	platform. At present, it runs &os; (8.x or later), Linux
	i386/x64, OpenBSD i386/amd64, and NetBSD/amd64 guests. Current
	development is focused on enabling additional guest operating
	systems and implementing features found in other hypervisors.</p>

      <p>Support for AMD processors was committed to -CURRENT in
	October 2014. This has also been merged to 10-STABLE and will be
	included in the 10.2 release.</p>

      <p>A bhyve status update presentation was done at the FreeBSD
	Vendor Summit in Nov 2014. The slides are available at <url
	href="http://people.freebsd.org/~neel/bhyve/bhyve_update_vendor_summit_2014.pdf">
	http://people.freebsd.org/~neel/bhyve/bhyve_update_vendor_summit_2014.pdf</url>.</p>

      <p>A number of improvements have been made to bhyve this quarter:</p>

      <ul>
	<li>OpenBSD/i386 guests are now able to boot with multiple vcpus.</li>

	<li>NetBSD/amd64 guests are now fully supported.</li>

	<li>Improvements to the AHCI emulation to be more resilient
	  under heavy load.</li>

	<li>Various improvements to PIC emulation to be able to boot
	  legacy guests.</li>

	<li>A fully featured RTC device emulation that allows
	  date/time changes by the guest and supports periodic and alarm
	  interrupts.</li>

	<li>Consolidate all timer emulations in vmm.ko. This enables
	  the use of a single clocksource for all timer emulations.</li>

	<li>Allow tracing of every exception incurred by a guest.
	  This is useful when debugging guest double and triple faults.</li>

	<li>Emulate platform-specific MSRs accessed by recent Linux
	  guests.</li>

	<li>Various bug fixes to grub-bhyve to boot OpenBSD/i386 and
	  Centos 4.x guests.</li>

	<li>grub-bhyve is now able to connect to an nmdm(4) console
	  using the <tt>--cons-dev</tt> option.</li> </ul>

    </body>

    <help>
      <task>
	<p> Improve documentation.</p>
      </task>

      <task>
	<p>bhyveucl is a script for starting bhyve instances based
  on a libUCL config file. More information at <url
  href="https://github.com/allanjude/bhyveucl">https://github.com/allanjude/bhyveucl</url>.</p>
      </task>

      <task>
	<p>CSM BIOS boot support for non UEFI-aware guests.</p>
      </task>

      <task>
	<p>Add support for virtio-scsi.</p>
      </task>

      <task>
	<p>Improve virtio-net, add offload features, support multiple
	  queues.</p>
      </task>

      <task>
	<p>Implement Intel 82580 and e1000 NIC emulation.</p>
      </task>

      <task>
	<p>Netmap support.</p>
      </task>

      <task>
	<p>Flexible networking backend: wanproxy, vhost-net.</p>
      </task>

      <task>
	<p>Move to a single process model, instead of bhyveload + bhyve.</p>
      </task>

      <task>
	<p>Support running bhyve as non-root.</p>
      </task>

      <task>
	<p>Add filters for popular VM file formats (VMDK, VHD, QCOW2).</p>
      </task>

      <task>
	<p>Implement an abstraction layer for video (no X11 or SDL in
	  base system).</p>
      </task>

      <task>
	<p>Support for VNC as a video output.</p>
      </task>

      <task>
	<p>Suspend/resume support.</p>
      </task>

      <task>
	<p>Live Migration.</p>
      </task>

      <task>
	<p>Nested VT-x support (bhyve in bhyve).</p>
      </task>

      <task>
	<p>Support for other architectures (ARM, MIPS, PPC).</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Frederic</given>
	  <common>Culot</common>
	</name>
	<email>portmgr-secretary@FreeBSD.org</email>
      </person>

      <person>
	<name>Port Management Team</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/ports/" />
      <url href="http://www.freebsd.org/doc/en_US.ISO8859-1/articles/contributing-ports/" />
      <url href="http://portsmon.freebsd.org/index.html" />
      <url href="http://portscout.freebsd.org/" />
      <url href="http://www.freebsd.org/portmgr/index.html" />
      <url href="http://blogs.freebsdish.org/portmgr/" />
      <url href="http://www.twitter.com/freebsd_portmgr/" />
      <url href="http://www.facebook.com/portmgr" />
      <url href="http://plus.google.com/communities/108335846196454338383" />
    </links>

    <body>
      <p>As of the end of Q4 the ports tree holds more than 24,000
	ports, and the PR count is just over 1,400.  As during the
	previous quarter the tree saw a sustained activity with
	almost 6,000 commits and more than 1,600 ports PR closed!</p>

      <p>In Q4 five new developers were granted a ports commit bit
	(gordon@, jmg@, jmmv@, bofh@, truckman@) and six were taken
	in for safekeeping (sylvio@, pclin@, flz@, jsa@, anders@,
	motoyuki@).</p>

      <p>On the management side, miwi@ decided to step down from his
	portmgr duties in November.  No other changes were made to the
	team during Q4.</p>

      <p>This quarter also saw the release of the fourth quarterly
	branch, namely 2014Q4.</p>

      <p>On QA side 39 exp-runs were performed to validate sensitive
	updates or cleanups.</p>

    </body>

    <help>
      <task>
	<p>A tremendous work was done on the PR front in Q4 and we
	  would be very pleased to see committers dedicate themselves
	  to closing as many as possible in 2015 as well!</p>
      </task>

      <task>
	<p>2014 is the year that saw the highest number of commits
	  in all of our ports tree's history!  As for the PR front and
	  to keep our beloved tree in such a good shape we would love
	  to see the same commitment from our developers next year!</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Linux emulation layer a.k.a. Linuxulator</title>

    <contact>
      <person>
	<name>
	  <given>Dmitry</given>
	  <common>Chagin</common>
	</name>
	<email>dchagin@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://svnweb.freebsd.org/base/user/dchagin/lemul/" />
      <url href="https://reviews.freebsd.org/differential/query/i9Ua2XMYQtNX/" />
    </links>

    <body>
      <p>The main goal of the lemul project is the execution of
	multithreaded Linux applications, which requires the glibc library
	version 2.20 or later to be available on &os;.  Glibc 2.20
	requires a Linux kernel (or emulation thereof) of version 2.6.32
	or later.  The main obstacle preventing this is that the current
	Linuxulator uses native FreeBSD processes for emulating Linux
	threads.  This leads to several problems, including problems with
	process reparenting and dethreading, <tt>wait()</tt> and signal
	handling.  It would be much better to reuse the FreeBSD kernel
	code for thread management than to create a completely new
	codebase for pseudothread management in the Linuxulator.</p>

      <p>At present, the linux emulation layer project has
	implemented all of the necessary system calls for supporting glibc
	2.20, and more, bringing the emulated Linux kernel version to
	2.6.32:</p>

      <ul>
	<li>Using native threads for emulating Linux threads</li>
	<li>Implemented VDSO support, including DWARF for signal
	  trampolines, which are needed for stack unwinding in
	  <tt>pthread_cancel()</tt></li>
	<li>Implemented the "vsyscall hack", used by some
	  Linux-based distributions, including CentOS 6</li>
	<li>Implemented the <tt>epoll()</tt> system call
	  emulation</li>
	<li>Added support for x86_64</li>
	<li>Many bugs were fixed</li>
      </ul>

      <p>The project's code is located in the FreeBSD Project's
	Subversion repository, at <tt>base/user/dchagin/lemul</tt> (a
	little bit old).  To facilitate merging the improvements back to
	head, several patches have been placed on reviews.FreeBSD.org with
	the tag <tt>#lemul</tt>.  Nearly half of the patches have already
	been approved by &a.emaste; and &a.trasz;.</p>
    </body>

    <help>
      <task>
	<p>Review and merge the lemul branch to head within the next
	  month or two.</p>
      </task>

      <task>
	<p>Implement native and Linuxulator <tt>inotify()</tt>
	  system calls.</p>
      </task>

      <task>
	<p>Implement the <tt>ptrace()</tt> system call for the x86_64
	  Linuxulator.</p>
      </task>

      <task>
	<p>Implement the <tt>signalfd()</tt> and <tt>timerfd()</tt>
	  system calls for the Linuxulator.</p>
      </task>

      <task>
	<p>Implement the <tt>Priority Inheritance Futexes</tt> for
	  the Linuxulator.</p>
      </task>

      <task>
	<p>Extend xucred suppport, which is required for many Linux
	  applications.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Wine/FreeBSD</title>

    <contact>
      <person>
	<name>
	  <given>Gerald</given>
	  <common>Pfeifer</common>
	</name>
	<email>gerald@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>David</given>
	  <common>Naylor</common>
	</name>
	<email>dbn@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Kris</given>
	  <common>Moore</common>
	</name>
	<email>kmoore@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.FreeBSD.org/Wine">Wine wiki page</url>
      <url href="http://wiki.FreeBSD.org/i386-Wine">Wine on amd64 wiki page</url>
      <url href="http://www.winehq.org">Wine homepage</url>
    </links>

    <body>
      <p>The Wine on &os; project has been steadily forging ahead for
	the past three quarters and has updated the ports for the following
	versions:</p>

      <ul>
	<li>Stable releases: 1.6.2 (3 port revisions)</li>
	<li>Development releases: 1.7.16 through 1.7.33</li>
      </ul>

      <p>The ports have packages built for amd64 (available through the
	ports emulators/i386-wine and i386-wine-devel) for &os; 8.4, 9.1+,
	10.0+ and CURRENT.</p>

      <p>Accomplishments include:</p>

      <ul>
	<li>Upstreaming 33 patches to fix Wine on &os; &mdash; many
	  thanks to Gerald for this work.</li>
	<li>Migrating to the USES framework.</li>
	<li>Building Wine with the X compositing extension.</li>
	<li>Adding support for MPG123 and V4L.</li>
	<li>Backporting changes made to the -devel ports to the stable
	  ones and fixing minutiae here and there.</li>
	<li>Creating a new Wine port for the Compholio patches.</li>
	<li>Changing i386-wine(-devel) to set the
	  <tt>LD_LIBRARY_PATH_RPATH</tt> variable.</li>
	<li>Improving library bundling for i386-wine(-devel).</li>
	<li>Various improvements to the patch-nvidia.sh script for
	  i386-wine(-devel).</li>
	<li>Various smaller changes.</li>
      </ul>

      <p>We would like to thank all volunteers who contributed feedback
	or even patches.  We would also like to welcome kmoore@ to the Wine
	team.  He has been extensively involved in bring wine-compholio to the
	Ports Collection.</p>

      <p>Future development on Wine will focus on:</p>

      <ul>
	<li>Creating a 64-bit capable port of Wine (aka Wine64).</li>
	<li>Creating a WoW64 capable port of Wine (aka Wine + Wine64).</li>
	<li>Fixing directory listing on &os; 8 and 9.</li>
      </ul>

      <p>Maintaining and improving Wine is a major undertaking that
	directly impacts end-users on &os; (including many gamers).  If you
	are interested in helping please contact us.  We will happily accept
	patches, suggest areas of focus or have a chat.</p>
    </body>

    <help>
      <task>
	<p>Open Tasks and Known Problems (see the <a
	    href="http://wiki.FreeBSD.org/Wine">Wine wiki page</a>).</p>
      </task>

      <task>
	<p>FreeBSD/amd64 integration (see the <a
	    href="http://wiki.FreeBSD.org/i386-Wine">i386-Wine wiki page</a>).</p>
      </task>

      <task>
	<p>Porting WoW64 and Wine64.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Linux emulation ports</title>

    <contact>
      <person>
	<name>
	  <given>Johannes</given>
	  <common>Meixner</common>
	</name>
	<email>xmj@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>
	<email>allanjude@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Vassilis</given>
	  <common>Laganakos</common>
	</name>
	<email>vassilis@einval.com </email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/allanjude/linux-ports">contains
	additions for CentOS 6.5 64bit ports</url>
      <url href="https://github.com/vassilisl/freebsd-linux_base-f20">contains
	a work in progress of the Fedora 20 ports</url>
      <url href="https://svnweb.freebsd.org/base/user/dchagin/lemul/">contains
	base Linux emulation enhancements required for 64 bit
	support</url>
    </links>

    <body>
      <p>The ports framework's Linux emulation stack was upgraded to
	include CentOS&nbsp;6.6 on November&nbsp;11.  After smoothing out
	several bugs that had been introduced, we have been able to bump
	the default version of the Linux userland from Fedora 10 to
	CentOS&nbsp;6.6 on December&nbsp;9.  Providing a more
	modern Linux userland and supporting libraries allows a great
	number of Linux applications to be run on &os;.  The goal
	behind providing an updated Fedora-based userland is to support
	more desktop-oriented applications, which require newer libraries
	than are provided by CentOS&nbsp;6.  Providing 64-bit versions of
	the CentOS userland will allow applications that are only
	available in 64-bit form, such as a number of scientific and math
	related applications, to be run on &os;.  Support for 64-bit
	binaries also requires the 64-bit Linux kernel emulation layer
	from the lemul branch, which requires more testing and review
	before being merged into HEAD.</p>
    </body>

    <sponsor>Perceivon Hosting Inc.</sponsor>
    <sponsor>ScaleEngine Inc.</sponsor>

    <help>
      <task>
	<p>Update Allan Jude's 64-bit Linux ports to CentOS&nbsp;6.6.</p>
      </task>

      <task>
	<p>Add Fedora&nbsp;20 base/userland ports to ports/head.</p>
      </task>

      <task>
	<p>Refactor <tt>Mk/bsd.linux-*.mk</tt> to facilitate above additions.</p>
      </task>

      <task>
	<p>Promote testing and merging of Dmitry Chagin's lemul branch.
	  (Updated Linux kernel emulation, and 64-bit support)</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>PCI SR-IOV Infrastructure</title>

    <contact>
      <person>
	<name>
	  <given>Ryan</given>
	  <common>Stone</common>
	</name>
	<email>rstone@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/rysto32/freebsd/commits/iov_ixl" />
    </links>

    <body>
      <p>PCI Single Root I/O Virtualization (SR-IOV) is an optional part
	of the PCIe standard that provides hardware acceleration for the
	virtualization of PCIe devices. When SR-IOV is in use, a function in a
	PCI device (known as a Physical Function, or PF) will present multiple
	Virtual PCI Functions (VF) on the PCI bus. These VFs are fully
	independent PCI devices that have access to the resources of the PF.
	For example, on a network interface card, VFs could transmit and
	receive packets independent of the PF.</p>

      <p>The most obvious use case for SR-IOV is virtualization. A
	hypervisor like bhyve could instantiate a VF for every VM and use PCI
	passthrough to assign the VFs to the VMs. This would allow multiple
	VMs to share access to the PCI device without having to do any
	expensive communication with the hypervisor, greatly increasing
	performance of performing I/O from a VM.</p>

      <p>Work on the core PCI infrastructure is complete and undergoing
	review.  Currently it is planned to commit the PCI infrastructure to
	head by the end of January.</p>

      <p>In additional to the PCI infrastructure, individual PCI drivers
	must be extended to implement SR-IOV.  An SR-IOV implementation is in
	progress for the ixl(4) driver, which supports the Intel XL710 family
	of 40G and 10G NICs.  Currently it is planned to have this in review
	by the end of January.  An implementation for ixgbe(4) is also in
	progress, but there is no timeline for completion.</p>
    </body>

    <sponsor>Sandvine Inc.</sponsor>
  </project>

  <project cat='kern'>
    <title>Secure Boot</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napierała</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/SecureBoot" />
    </links>

    <body>
      <p>UEFI Secure Boot is a mechanism that requires boot drivers
	and operating system loaders to be cryptographically signed by an
	authorized key.  It will refuse to execute any software that is not
	correctly signed, and is intended to secure boot drivers and
	operating system loaders from malicious tampering or
	replacement.</p>

      <p>This project will deliver the initial phase of secure boot
	support for &os; and consists of:</p>

      <ul>
	<li>creating ports/packages of the gnu-efi toolchain,
	  Matthew Garrett’s shim loader, and sbsigntools</li>
	<li>extending the shim to provide an API for boot1.efi to
	  load and verify binaries signed by keys known to the shim</li>
	<li>writing uefisign(8), a BSD-licensed utility to sign EFI
	  binaries using Authenticode, as mandated by UEFI
	  specification.</li>
      </ul>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
      <task>
	<p>Ensure the signature format properly matches UEFI spec
	  requirements.</p>
      </task>

      <task>
	<p>Verify correctly signed, incorrectly signed, and
	  unsigned loader components are handled properly.</p>
      </task>

      <task>
	<p>Investigate signed kernel ELF objects (including
	  modules).</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>FreeBSD/arm64</title>

    <contact>
      <person>
	<name>
	  <given>Andrew</given>
	  <common>Turner</common>
	</name>
	<email>andrew@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Zbigniew</given>
	  <common>Bodek</common>
	</name>
	<email>zbb@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/arm64" />
      <url href="https://github.com/FreeBSDFoundation/freebsd/tree/arm64-dev" />
    </links>

    <body>
      <p>There is growing interest in ARM's 64-bit architecture.
	Officially named as AArch64, it is also known as ARMv8 and arm64.
	Andrew Turner started initial work on the FreeBSD/arm64 port at
	the end of 2012.</p>

      <p>The &os; Foundation is now collaborating with ARM,
	Cavium, the Semihalf team, and Andrew Turner to port &os; to
	arm64, and significant progress was made on the port over the last
	quarter of 2014.</p>

      <p>As of the end of the year &os; boots to single-user mode
	on arm64, executing both static and dynamic applications. Patches
	in review allow &os; to boot to multi-user mode and these are
	expected to be merged soon. This includes implementing many stub
	functions in userland and the kernel. With this, &os; has booted to
	multi-user mode on both the ARM Foundation Model and the QEMU full
	system emulation.</p>

      <p>Cavium has supplied a software simulator of their Thunder X
	hardware. Bringup of &os; has started on this including writing
	new drivers for the ARM Generic Interrupt Controller v3 (GICv3)
	and a preliminary driver for the PCIe root complex. With these,
	&os; is able to boot on this simulator in preparation for
	testing on hardware. Further work is progressing to add full PCIe
	bringup and to add support for the GICv3 Interrupt Translation
	Services (ITS) for MSI-X.</p>

      <p>Further improvements have been made to the loader to allow
	it to take the Flattened Device Tree data from UEFI and pass it to
	the kernel. In the kernel busdma, CPU identification, and
	improvements to interrupt handling have been made, along with
	preliminary KDB support.</p>

      <p>Hardware for testing the port will be installed in the
	&os; Test Cluster hosted by Sentex Communications. The first
	reference platform, Cavium's ThunderX, is expected to arrive
	in the cluster in mid-January.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
    <sponsor>ARM</sponsor>
    <sponsor>Cavium</sponsor>


    <help>
      <task>
	<p>Bring up and test kernel support on real hardware.</p>
      </task>

      <task>
	<p>Implement remaining userland libraries and binaries.</p>
      </task>

      <task>
	<p>Produce installable images.</p>
      </task>
    </help>
  </project>

</report>
