<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for Status Report//EN" "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >
<!-- $FreeBSD$ -->
<report>
  <date>
    <month>October-December</month>

    <year>2013</year>
  </date>

  <section>
    <title>Introduction</title>

    <p>This report covers &os;-related projects between October and
      December 2013.  This is the fourth of four reports planned for
      2013.</p>

    <!-- XXX: Add introduction -->

    <!-- XXX: Keep updating the number of entries -->
    <p>Thanks to all the reporters for the excellent work!  This report
      contains 4 entries and we hope you enjoy reading it.</p>

    <p>The deadline for submissions covering between January and
      March 2014 is April 7th, 2014.</p>
  </section>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <project cat='proj'>
    <title>CBSD</title>

    <contact>
      <person>
	<name>
	  <given>Oleg</given>
	  <common>Ginzburg</common>
	</name>
	<email>olevole@olevole.ru</email>
      </person>
    </contact>

    <links>
      <url href="http://www.bsdstore.ru"/>
      <url href="https://github.com/olevole/cbsd"/>
    </links>

    <body>
      <p>CBSD is another &os; jail management solution, aimed at
	combining various features, such as <tt>racct(8)</tt>,
	<tt>vnet</tt>, <tt>zfs(8)</tt>, <tt>carp(4)</tt>,
	<tt>hastd(8)</tt>, into a single tool.  This provides a more
	comprehensive way for building application servers using
	pre-installed jails with a typical set of software, and requires
	a minimal effort to configure.</p>
    </body>

    <help>
      <task>Proper English translation of the website and the
	documentation.</task>
    </help>
  </project>

  <project cat='bin'>
    <title>&os; Test Suite</title>

    <contact>
      <person>
	<name>
	  <given>Julio</given>
	  <common>Merino</common>
	</name>
	<email>jmmv@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.FreeBSD.org/TestSuite">Project page</url>
      <url href="http://kyua1.nyi.FreeBSD.org/">Continuous testing infrastructure</url>
      <url href="http://lists.freebsd.org/pipermail/freebsd-testing/2013-December/000109.html">Mailing list announcement</url>
      <url href="http://julipedia.meroh.net/2013/12/introducing-freebsd-test-suite.html">Blog post</url>
    </links>

    <body>
      <p>The &os; Test Suite project aims to equip &os; with a
	comprehensive test suite that is easy to run out of the box and
	during the development of the system.  The test suite is
	installed into <tt>/usr/tests/</tt> and the <tt>kyua(1)</tt>
	command-line tool (<tt>devel/kyua</tt> in the Ports Collection)
	is used to run them.</p>

      <p>The benefits of having a test suite that is easy to use and
	continuously run are obvious: regressions can be caught sooner
	rather than later and the Release Engineering Team can better
	assess the quality of the tree before deciding to cut a release.
	Additionally, and because we choose to install the tests, we
	also allow any end user to perform sanity checks on new
	installations of the system on his or her particular hardware
	configuration &mdash; a very attractive thing to do when
	deploying production servers.</p>

      <p>During the last few months, we have added the necessary pieces to
	the build system to support building and installing test programs of
	various kinds. To demonstrate the functionality of these, some test
	programs were added and others were migrated from the old testing tree
	in <tt>tools/regression/</tt> to the new layout for tests.</p>

      <p>The current test suite should be seen as a proof of concept at this
	point: it is only composed of a small set of test programs and the goal
	is to get the infrastructure in place before mass-migrating existing
	test code and/or importing external tests.</p>

      <p>As part of this work, two new releases of Kyua were published.
	Of special interest is the addition of a TAP-compliant backend so
	that existing tests from <tt>tools/regression/</tt> can be
	plugged into the test suite with minimum effort.</p>

      <p>As of December 31st, the basic continuous testing
	infrastructure is up and running, see the links section for the
	home page.  For further information, please see the related
	announcement and blog post on the subject (also in the links
	section).</p>
    </body>

    <help>
      <task>We have got three machines for the test cluster.  At the
	moment, only one of them is in use to continuously test amd64 on
	both <tt>head</tt> and <tt>stable/10</tt>.  We need to figure
	out the right level of parallelization to put other machines to
	use &mdash; but a first easy cut may be to just test different
	architectures (with the help of QEMU).</task>

      <task>Related to the above, the Kyua reporting engine needs
	significant tuning to make the reports nice and clean.  Ideally,
	Kyua should be able to coalesce results from different runs into
	a single location and generate cohesive reports out of them.
	Fixing this is a high priority.</task>

      <task>A tutorial on writing tests for &os; has been proposed for
	AsiaBSDCon&nbsp;2014.  The outcome of the proposal is still
	unknown, but stay tuned!</task>

      <task>Port, port, and port more tests to the new test suite.  A
	test suite is worthless if it does not validate stuff.  Stay tuned
	for a request for help when we have put all basic pieces in
	place and have streamlined the migration process.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Cubieboard{1,2}</title>

    <contact>
      <person>
	<name>
	  <given>Ganbold</given>
	  <common>Tsagaankhuu</common>
	</name>
	<email>ganbold@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/tsgan/allwinner_a10/blob/master/if_emac.c">EMAC driver code</url>
    </links>

    <body>
      <p>Cubieboard is a single-board computer, based on the AllWinner
	A10 SoC, popular on cheap tablets, phones and media PCs.  The
	second version enhances the board mainly by replacing the
	AllWinner A10 SoC with an AllWinner A20 which contains 2 ARM
	Cortex-A7 MPCore CPUs and 2 Mali-400 GPUs (Mali-400MP2).  In the
	last few months, the work has continued on their &os; port, and
	some work was done on the EMAC 10/100 Ethernet driver (see
	link).  The driver now is in a good shape, however the RX side
	is very slow and there is need to have external DMA driver that
	can be used in this case.</p>
    </body>
  </project>

  <project cat='arch'>
    <title>&os; on Newer ARM Boards</title>

    <contact>
      <person>
	<name>
	  <given>Ganbold</given>
	  <common>Tsagaankhuu</common>
	</name>
	<email>ganbold@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/FreeBSD/arm/Radxa%20Rock">&os; on Radxa Rock</url>
      <url href="http://svnweb.freebsd.org/changeset/base/256949"/>
      <url href="https://github.com/tsgan/qualcomm">Some preliminary sources for Snapdragon board IFC6410</url>
    </links>

    <body>
      <p>Rockchip is a series of SoC (System on Chip) integrated
	circuits that are mainly for embedded systems applications in
	mobile entertainment devices such smartphones, tablets, e-books,
	set-top boxes, media players, personal video, and MP3 players.
	Due to their evolution from the MP3/MP4 player market most
	Rockchip ICs feature advanced media decoding logic but lack
	integrated cellular radio basebands.  Initial support of
	Rockchip RK3188 (Quad core Cortex A9) SoC is committed to
	<tt>head</tt>.  Now &os; runs on Radxa Rock and it supports
	following peripherals:</p>

      <ul>
	<li>Existing DWC OTG driver in host mode</li>
	<li>GPIO</li>
      </ul>

      <p>Some work was also done the on initial support of Qualcomm
	Snapdragon S4 SoC, featuring the Krait CPU, which is considered
	a "platform" for use in smartphones, tablets, and smartbook
	devices.  Krait has many similarities with the ARM Cortex-A15
	CPU and is also based on the ARMv7 instruction set.  A minimal
	console driver was written and &os;'s early boot messages can be
	now seen on the serial console.  The timer driver works too, and
	the boot now stops at the mountroot prompt.</p>
    </body>
  </project>
</report>
