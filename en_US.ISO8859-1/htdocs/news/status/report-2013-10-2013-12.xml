<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for Status Report//EN" "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >
<!-- $FreeBSD$ -->
<report>
  <date>
    <month>October-December</month>

    <year>2013</year>
  </date>

  <section>
    <title>Introduction</title>

    <p>This report covers &os;-related projects between October and
      December 2013.  This is the fourth of four reports planned for
      2013.</p>

    <!-- XXX: Add introduction -->

    <!-- XXX: Keep updating the number of entries -->
    <p>Thanks to all the reporters for the excellent work!  This report
      contains 10 entries and we hope you enjoy reading it.</p>

    <p>The deadline for submissions covering between January and
      March 2014 is April 7th, 2014.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <project cat='proj'>
    <title>CBSD</title>

    <contact>
      <person>
	<name>
	  <given>Oleg</given>
	  <common>Ginzburg</common>
	</name>
	<email>olevole@olevole.ru</email>
      </person>
    </contact>

    <links>
      <url href="http://www.bsdstore.ru"/>
      <url href="https://github.com/olevole/cbsd"/>
    </links>

    <body>
      <p>CBSD is another &os; jail management solution, aimed at
	combining various features, such as <tt>racct(8)</tt>,
	<tt>vnet</tt>, <tt>zfs(8)</tt>, <tt>carp(4)</tt>,
	<tt>hastd(8)</tt>, into a single tool.  This provides a more
	comprehensive way for building application servers using
	pre-installed jails with a typical set of software, and requires
	a minimal effort to configure.</p>
    </body>

    <help>
      <task>Proper English translation of the website and the
	documentation.</task>
    </help>
  </project>

  <project cat='bin'>
    <title>&os; Test Suite</title>

    <contact>
      <person>
	<name>
	  <given>Julio</given>
	  <common>Merino</common>
	</name>
	<email>jmmv@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.FreeBSD.org/TestSuite">Project page</url>
      <url href="http://kyua1.nyi.FreeBSD.org/">Continuous testing infrastructure</url>
      <url href="http://lists.freebsd.org/pipermail/freebsd-testing/2013-December/000109.html">Mailing list announcement</url>
      <url href="http://julipedia.meroh.net/2013/12/introducing-freebsd-test-suite.html">Blog post</url>
    </links>

    <body>
      <p>The &os; Test Suite project aims to equip &os; with a
	comprehensive test suite that is easy to run out of the box and
	during the development of the system.  The test suite is
	installed into <tt>/usr/tests/</tt> and the <tt>kyua(1)</tt>
	command-line tool (<tt>devel/kyua</tt> in the Ports Collection)
	is used to run them.</p>

      <p>The benefits of having a test suite that is easy to use and
	continuously run are obvious: regressions can be caught sooner
	rather than later and the Release Engineering Team can better
	assess the quality of the tree before deciding to cut a release.
	Additionally, and because we choose to install the tests, we
	also allow any end user to perform sanity checks on new
	installations of the system on his or her particular hardware
	configuration &mdash; a very attractive thing to do when
	deploying production servers.</p>

      <p>During the last few months, we have added the necessary pieces to
	the build system to support building and installing test programs of
	various kinds. To demonstrate the functionality of these, some test
	programs were added and others were migrated from the old testing tree
	in <tt>tools/regression/</tt> to the new layout for tests.</p>

      <p>The current test suite should be seen as a proof of concept at this
	point: it is only composed of a small set of test programs and the goal
	is to get the infrastructure in place before mass-migrating existing
	test code and/or importing external tests.</p>

      <p>As part of this work, two new releases of Kyua were published.
	Of special interest is the addition of a TAP-compliant backend so
	that existing tests from <tt>tools/regression/</tt> can be
	plugged into the test suite with minimum effort.</p>

      <p>As of December 31st, the basic continuous testing
	infrastructure is up and running, see the links section for the
	home page.  For further information, please see the related
	announcement and blog post on the subject (also in the links
	section).</p>
    </body>

    <help>
      <task>We have got three machines for the test cluster.  At the
	moment, only one of them is in use to continuously test amd64 on
	both <tt>head</tt> and <tt>stable/10</tt>.  We need to figure
	out the right level of parallelization to put other machines to
	use &mdash; but a first easy cut may be to just test different
	architectures (with the help of QEMU).</task>

      <task>Related to the above, the Kyua reporting engine needs
	significant tuning to make the reports nice and clean.  Ideally,
	Kyua should be able to coalesce results from different runs into
	a single location and generate cohesive reports out of them.
	Fixing this is a high priority.</task>

      <task>A tutorial on writing tests for &os; has been proposed for
	AsiaBSDCon&nbsp;2014.  The outcome of the proposal is still
	unknown, but stay tuned!</task>

      <task>Port, port, and port more tests to the new test suite.  A
	test suite is worthless if it does not validate stuff.  Stay tuned
	for a request for help when we have put all basic pieces in
	place and have streamlined the migration process.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Cubieboard{1,2}</title>

    <contact>
      <person>
	<name>
	  <given>Ganbold</given>
	  <common>Tsagaankhuu</common>
	</name>
	<email>ganbold@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/tsgan/allwinner_a10/blob/master/if_emac.c">EMAC driver code</url>
    </links>

    <body>
      <p>Cubieboard is a single-board computer, based on the AllWinner
	A10 SoC, popular on cheap tablets, phones and media PCs.  The
	second version enhances the board mainly by replacing the
	AllWinner A10 SoC with an AllWinner A20 which contains 2 ARM
	Cortex-A7 MPCore CPUs and 2 Mali-400 GPUs (Mali-400MP2).  In the
	last few months, the work has continued on their &os; port, and
	some work was done on the EMAC 10/100 Ethernet driver (see
	link).  The driver now is in a good shape, however the RX side
	is very slow and there is need to have external DMA driver that
	can be used in this case.</p>
    </body>
  </project>

  <project cat='arch'>
    <title>&os; on Newer ARM Boards</title>

    <contact>
      <person>
	<name>
	  <given>Ganbold</given>
	  <common>Tsagaankhuu</common>
	</name>
	<email>ganbold@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/FreeBSD/arm/Radxa%20Rock">&os; on Radxa Rock</url>
      <url href="http://svnweb.freebsd.org/changeset/base/256949"/>
      <url href="https://github.com/tsgan/qualcomm">Some preliminary sources for Snapdragon board IFC6410</url>
    </links>

    <body>
      <p>Rockchip is a series of SoC (System on Chip) integrated
	circuits that are mainly for embedded systems applications in
	mobile entertainment devices such as smartphones, tablets, e-books,
	set-top boxes, media players, personal video, and MP3 players.
	Due to their evolution from the MP3/MP4 player market, most
	Rockchip ICs feature advanced media decoding logic but lack
	integrated cellular radio basebands.  Initial support of
	Rockchip RK3188 (Quad core Cortex A9) SoC is committed to
	<tt>head</tt>.  Now &os; runs on Radxa Rock and it supports
	the following peripherals:</p>

      <ul>
	<li>Existing DWC OTG driver in host mode</li>
	<li>GPIO</li>
      </ul>

      <p>Some work was also done on the initial support of Qualcomm
	Snapdragon S4 SoC, featuring the Krait CPU, which is considered
	a "platform" for use in smartphones, tablets, and smartbook
	devices.  Krait has many similarities with the ARM Cortex-A15
	CPU and is also based on the ARMv7 instruction set.  A minimal
	console driver was written, and &os;'s early boot messages can
	be now seen on the serial console.  The timer driver works too,
	and the boot now stops at the mountroot prompt.</p>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Postmaster Team</title>

    <contact>
      <person>
	<name>&os; Postmaster Team</name>
	<email>postmaster@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://lists.freebsd.org/mailman/listinfo/svn-src-stable-10"/>
      <url href="http://lists.freebsd.org/mailman/listinfo/ctm-src-10"/>
      <url href="http://lists.freebsd.org/mailman/listinfo/ctm-src-10-fast"/>
      <url href="http://www.freebsd.org/doc/en/articles/committers-guide/pgpkeys.html">OpenPGP Keys section in the Committer's Guide</url>
    </links>

    <body>
      <p>In the fourth quarter of 2013, the &os; Postmaster Team has
	implemented the following items that may be interest of the
	general public:</p>

      <ul>
	<li>Retired the <tt>freebsd-aic7xxx</tt> mailing list.</li>

	<li>Created a <tt>graphics-team</tt> alias, requested by Niclas
	  Zeising.</li>

	<li>Worked with the &os; Port Management Team to set up
	  <tt>portmgr-lurkers</tt> so port managers can move addresses
	  between those two aliases at their discretion.</li>

	<li>Created the lists associated with the new <tt>stable/10</tt>
	  branch: <tt>svn-src-stable-10</tt>, <tt>ctm-src-10</tt>, and
	  <tt>ctm-src-10-fast</tt>.</li>

	<li>Redirected the <tt>vbox</tt> alias to the <tt>emulation</tt>
	  list, requested by Bernhard Fröhlich.</li>

	<li>Continued a discussion on current and possible future mail
	  and spam filtering.</li>

	<li>Disbanded <tt>lua</tt> and transferred it to Baptiste
	  Daroussin, requested by Matthias Andree and Baptiste
	  Daroussin.</li>

	<li>Modified the list moderators/administrators for
	  <tt>ports-secteam</tt>, requested by Dag-Erling Smørgrav.</li>

	<li>Assisted Warren Block with an update to the "OpenPGP Keys
	  for &os;" section of the Committer's Guide.</li>
      </ul>
    </body>
  </project>

  <project cat='ports'>
    <title>Xfce/&os;</title>

    <contact>
      <person>
        <name>&os; Xfce Team</name>
        <email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Xfce">The &os; Xfce Team's wiki page</url>
      <url href="https://people.freebsd.org/~olivierd/xfce-core-unstable.html">Core</url>
      <url href="https://people.freebsd.org/~olivierd/parole-unstable.html">Parole</url>
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms, such as &os;.  It aims to be fast and
	lightweight, while still being visually appealing and easy to
	use.  The &os; Xfce Team has kept most of Xfce ports up-to-date,
	while fixed many issues along the way in this quarter.</p>

      <p>Currently, the following components with the following versions
	are available:</p>

      <ul>
	<li>Applications:</li>

	<ul>
	  <li>Orage (4.10.0)</li>
	  <li>Midori (0.5.6)</li>
	  <li>xfce4-terminal (0.6.3)</li>
	  <li>xfce4-parole (0.5.3, 0.5.4)</li>
	</ul>

	<li>Panel plugins:</li>

	<ul>
	  <li>xfce4-whiskermenu-plugin (1.2.0, 1.2.1, 1.2.2, 1.3.0)</li>
	  <li>xfce4-mailwatch-plugin (1.2.0)</li>
	  <li>xfce4-wmdock-plugin (0.6.0)</li>
	</ul>
      </ul>

      <p>We helped Midori's upstream to switch from Waf (Python script)
	to CMake.  Xfce now also supports Gtk2, Gtk3, and the new
	WebKitGtk API, available from the 2.x branch, not present in our
	ports tree at the moment, though.  Most of the ports now use
	stage directories, only some plugins left to convert.</p>

      <p>We also removed obsolete ports:</p>

      <ul>
	<li><tt>x11-themes/lila-xfwm4</tt> (Xfwm4 theme)</li>
	<li><tt>multimedia/xfce4-media</tt> (multimedia player)</li>
	<li><tt>net-im/xfce4-messenger-plugin</tt></li>
      </ul>

      <p>Besides, we followed the development of the Xfce core
	components and Parole closely.  See the links for documentation
	on how to upgrade those libraries.</p>
    </body>

    <help>
      <task>Fix Midori's build on DragonFly, through DPorts.</task>

      <task>Fix build of the Granite framework (it is an extension to
	Gtk and Midori uses it) on &os;&nbsp;10 and <tt>head</tt>.
	Those are mostly LLVM failures.</task>

      <task>Add support for Berkeley DB 5 and higher to Orage.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Freescale i.MX6 processors</title>

    <contact>
      <person>
	<name>
	  <given>Ian</given>
	  <common>Lepore</common>
	</name>
	<email>ian@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://lists.freebsd.org/pipermail/freebsd-arm/2013-November/006877.html">Announcement of Wanboard support</url>
    </links>

    <body>
      <p>The i.MX range is a family of Freescale Semiconductor
	proprietary microprocessors for multimedia applications based on
	the ARM architecture and focused on low-power consumption.  The
	i.MX6x series is based on the ARM Cortex A9 solo, dual or quad
	cores.  Initial support for them has been committed to
	<tt>head</tt>, and merged to <tt>stable/10</tt>.  All members of
	the i.MX6 family (Solo, Dual, and Quad core) are supported, but
	SMP support on the multi-core SoCs has not yet been enabled.</p>

      <p>Initial driver support includes:</p>

      <ul>
	<li>USB (EHCI)</li>
	<li>Ethernet (Gigabit)</li>
	<li>SD Card</li>
	<li>UART</li>
      </ul>

      <p>The initial hardware bringup was done on Wandboard hardware,
	see the announcement on <tt>freebsd-arm</tt> in the links section
	for more information.</p>
    </body>

    <help>
      <task>Write drivers for additional on-chip hardware, including
	I2C, SPI, AHCI, audio, and video.</task>

      <task>Add support to &os;-crochet script to generate Wandboard
	images</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os; Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/releases/10.0R/schedule.html">&os;&nbsp;10.0-RELEASE schedule</url>
      <url href="http://ftp.FreeBSD.org/pub/FreeBSD/snapshots/VM-IMAGES/">&os;&nbsp;Virtual Machine Images</url>
      <url href="http://ftp.FreeBSD.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os;&nbsp;Development Snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is finishing the
	10.0-RELEASE cycle.  The release cycle changed with two
	last-minute release candidate builds, each addressing
	fixes critical to include in the final release.</p>

      <p>The &os; 10.0-RELEASE cycle is expected to be completed by
	mid-January, approximately eight weeks behind the original
	schedule.</p>
    </body>
  </project>

  <project cat='bin'>
    <title>Centralized Panic Reporting</title>

    <contact>
      <person>
	<name>
	  <given>Colin</given>
	  <common>Percival</common>
	</name>
	<email>cperciva@freebsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.daemonology.net/blog/2013-11-06-automated-freebsd-panic-reporting.html">Usage instructions</url>
    </links>

    <body>
      <p> A mechanism is now in place, via the
	<tt>sysutils/panicmail</tt> port, for automated submission of
	kernel panic reports to a central location.  It is hoped that
	this will prove useful, as similar systems have for other
	operating systems, in identifying common panics so that
	developers can be alerted and they can be fixed faster.</p>

      <p>In the first two months that this mechanism has been in place,
	28 kernel panics have been reported.  This is nowhere near enough
	to be useful, so readers are strongly encouraged to install the
	<tt>sysutils/panicmail</tt> port and follow the instructions to
	enable it.</p>
    </body>

    <help>
      <task>Get more systems set up to automatically submit panic
	reports!</task>
    </help>
  </project>

  <project cat='kern'>
    <title>UMA/ZFS and RPC/NFS Performance Improvements</title>

    <contact>
      <person>
	<name>
	  <given>Alexander</given>
	  <common>Motin</common>
	</name>
	<email>mav@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://docs.freebsd.org/cgi/mid.cgi?52894C92.60905">Discussion of the ZFS/UMA changes</url>
    </links>

    <body>
      <p>The performance of ZFS and NFS was suboptimal in &os;, so we
	have recently investigated some possible improvement paths.  The
	<tt>uma(9)</tt> memory allocator caching code was improved to
	adapt better to system memory constraints.  Combined with other
	virtual memory subsystem improvements done in the previous
	years, it should be safe to actively use <tt>uma(9)</tt> caches
	now.  It may be enabled for ZFS to use them for ZIO/ARC via the
	<tt>vfs.zfs.zio.use_uma</tt> <tt>loader(8)</tt> tunable, which
	is now the default for amd64, where it is recommended.  Use of
	<tt>uma(9)</tt> caches for LZ4 compression buffers is
	unconditionally enabled on all architectures as it is has no
	serious drawbacks.  On systems with many CPUs, these changes
	doubled the performance in the benchmarks.</p>

      <p>Several areas of the NFS server stack (RPC, FHA, DRC) got
	number of fixes and performance optimizations that significantly
	improves the performance and reduces the CPU usage in number of
	tests.  Together with the ZFS memory allocator changes mentioned
	above, it was possible to reach 200K NFS block read IOPS and 55K
	SPEC NFS IOPS.</p>

      <p>The code was committed to <tt>head</tt>.  The <tt>uma(9)</tt>
	ZFS commits have been already merged to <tt>stable/10</tt>, and
	the remainder will be done soon as well.</p>

      <p>The project is sponsored by iXsystems, Inc.</p>
    </body>

    <help>
      <task>The SPEC NFS test hits lock congestion on several global
	locks in the file system layer when a quite intensive
	<tt>READDIRPLUS</tt> NFS request is received.  Fixing this
	problem could improve the performance on large systems even
	further.</task>
    </help>
  </project>
</report>
