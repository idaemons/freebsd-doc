<!--
     The FreeBSD Documentation Project
     $FreeBSD$
-->

<!--
This version of the document assumes that the Audit system needs to be 
installed as part of the trustedbsd/audit project. When/if audit becomes
part of FreeBSD proper, then these sections should be removed, or at least
reworded. The sections in question are marked with 'PROTOTYPE' labels in
commentary.
-->

<!-- Need more documenation on praudit, audtreduce, etc.  Plus more info
on the triggers from the kernel (log rotation, out of space, etc).
And the /dev/audit special file if we choose to support that.  Could use
some coverage of integrating MAC with Event auditing and perhaps discussion
on how some companies or organizations handle auditing and auditing
requirements. -->

<chapter id="audit">
  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Tom</firstname>
	<surname>Rhodes</surname>
	<contrib>Written by </contrib>
      </author>
    </authorgroup>
  </chapterinfo>

  <title>Kernel Event Auditing</title>

  <sect1 id="audit-synopsis">
    <title>Synopsis</title>

    <indexterm><primary>AUDIT</primary></indexterm>
    <indexterm>
      <primary>Kernel Event Auditing</primary>
      <see>MAC</see>
    </indexterm>

    <para>The &os;&nbsp;6.0 operating system release has included
      support for Event Auditing based on the &posix;.1e draft and
      the &sun; <acronym>BSM</acronym> implementation.  Event auditing
      permits the selective logging of security-relevant system events
      for the purposes of system analysis, system monitoring, and
      security evaluation.</para>

    <para>This chapter will focus mainly on the installation and
      configuration of Event Auditing.  Explanation of audit policies,
      and an example configuration will be provided for the
      convenience of the reader.</para>

    <para>After reading this chapter, you will know:</para>

    <itemizedlist>
      <listitem>
        <para>What Event Auditing is and how it works.</para>
      </listitem>

      <listitem>
	<para>How to configure Event Auditing on &os; for users
	  and processes.</para>
      </listitem>
    </itemizedlist>

    <para>Before reading this chapter, you should:</para>

    <itemizedlist>
      <listitem>
	<para>Understand &unix; and &os; basics
	  (<xref linkend="basics">).</para>
      </listitem>

      <listitem>
	<para>Be familiar with the basics of kernel
	  configuration/compilation
	  (<xref linkend="kernelconfig">).</para>
      </listitem>

      <listitem>
	<para>Have some familiarity with security and how it
	  pertains to &os; (<xref linkend="security">).</para>
      </listitem>
    </itemizedlist>

    <warning>
      <para>Event auditing can generate a great deal of log file
	data, exceeding gigabytes a week in some configurations.  An administrator
	should read this chapter in its entirety to avoid possible
	self inflicted <acronym>DoS</acronym> attacks due to improper
	configuration.</para>
    </warning>

    <para>The implementation of Event Auditing in &os; is similar to
      that of the &sun; Basic Security Module, or <acronym>BSM</acronym>
      library.  Thus, the configuration is almost completely
      interchangeable with &solaris; and Darwin operating systems.</para>
  </sect1>

  <sect1 id="audit-inline-glossary">
    <title>Key Terms - Words to Know</title>

    <para>Before reading this chapter, a few key terms must be
      explained.  This is intended to clear up any confusion that
      may occur and to avoid the abrupt introduction of new terms
      and information.</para>

    <itemizedlist>
      <listitem>
        <para><emphasis>class</emphasis>: A class specifies the category
	  different actions the system are placed in.  For example,
	  use of &man.login.1; could be placed in a class.</para>
      </listitem>

      <listitem>
	<para><emphasis>event</emphasis>: An event could be considered
	  an action taken on the system.  Creating a file would be
	  an event.</para>
      </listitem>

      <listitem>
	<para><emphasis>record</emphasis>: A record is a log or a note
	  about a specific action.</para>
      </listitem>

      <listitem>
	<para><emphasis>prefix</emphasis>: A prefix is considered to
	  be the configuration element used to toggle auditing for
	  success and failed events.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="audit-install">
    <title>Installing Audit Support</title>

    <para>Support for Event Auditing should have been installed with
      the normal <maketarget>installworld</maketarget> process.  An
      administrator may confirm this by viewing the contents
      of <filename role="directory">/etc/security.</filename>  Files
      beginning with the word <emphasis>audit</emphasis> should be present.
      For example, <filename>audit_event</filename>.</para>

    <para>In-kernel support for the framework must also exist.  This
      may be done by adding the following lines to the local kernel
      configuration file:</para>

    <programlisting>options	AUDIT</programlisting>

    <para>Rebuild and reinstall
      the kernel via the normal process explained in
      <xref linkend="kernelconfig">.</para>

    <para>Once completed, enable the audit daemon by adding the
      following line to &man.rc.conf.5;:</para>

    <programlisting>auditd_enable="YES"</programlisting>

    <para>Functionality not provided by the default may be added
      here with the <option>auditd_flags</option> option.</para>
  </sect1>

  <sect1 id="audit-config">
    <title>Audit Configuration</title>

    <para>By default, all configuration is done within the realm of
      <filename role="directory">/etc/security</filename> and the
      files contained within.  The following files must be present
      before the audit daemon is started:</para>

    <itemizedlist>
      <listitem>
	<para><filename>audit_class</filename> - Contains the
	  definitions of the audit classes.</para>
      </listitem>

      <listitem>
	<para><filename>audit_control</filename> - Controls aspects
	  of the audit subsystem, such as default audit classes,
	  minimum disk space to leave on the audit log volume,
	  etc.</para>
      </listitem>

      <listitem>
	<para><filename>audit_event</filename> - Defines the kernel
	  audit events.  These map, mostly, to system calls.</para>
      </listitem>

      <listitem>
	<para><filename>audit_user</filename> - The events to audit
	  for individual users.  A user name does not need to appear
	  in here.</para>
      </listitem>

      <listitem>
	<para><filename>audit_warn</filename> - A shell script
	  used by auditd to form warning messages.</para>
      </listitem>
    </itemizedlist>

    <para>If these files do not exist, for whatever reason, they can
      be installed easily by issuing the following commands:</para>

    <screen>&prompt.root; <userinput>cd /usr/src/contrib/bsm/etc &amp;&amp; make install</userinput></screen>

    <sect2>
      <title>Audit File Syntax</title>

      <para>The configuration file syntax is rather arcane, albeit easy
	to work with.  One thing an administrator must be leery about
	is overriding system defaults.  This could create potential
	openings for audit data to not be collected properly.</para>

      <para>The audit subsystem will accept both the short name and
	long name with regards to configuration syntax.  A syntax
	map has been included below.</para>

      <para>The following list contains all supported audit
	classes:</para>

      <itemizedlist>
	<listitem>
	  <para><option>all</option> - <literal>all</literal> - All
	    audit flags set.</para>
	</listitem>

	<listitem>
	  <para><option>ad</option> - <literal>administrative</literal>
	    - Administrative actions performed on the system as a
	    whole.</para>
	</listitem>

	<listitem>
	  <para><option>ap</option> - <literal>application</literal> -
	    Application defined action.</para>
	</listitem>

	<listitem>
	  <para><option>cl</option> - <literal>file_close</literal> -
	    Audit calls to the <function>close</function> system
	    call.</para>
	</listitem>

	<listitem>
	  <para><option>ex</option> - <literal>exec</literal> - Audit
	    program or utility execution.</para>
	</listitem>

	<listitem>
	  <para><option>fa</option> - <literal>file_attr_acc</literal>
	    - Audit the access of object attributes such as
	    &man.stat.1;, &man.pathconf.2; and similar events.</para>
	</listitem>

	<listitem>
	  <para><option>fc</option> - <literal>file_creation</literal>
	    - Audit events where a file is created as a result.</para>
	</listitem>

	<listitem>
	  <para><option>fd</option> - <literal>file_deletion</literal>
	    - Audit events where file deletion occurrs.</para>
	</listitem>

	<listitem>
	  <para><option>fm</option> - <literal>file_attr_mod</literal>
	    - Audit events where file attribute modification occurs,
	    such as &man.chown.8;, &man.chflags.1;, &man.flock.2;,
	    etc.</para>
	</listitem>

	<listitem>
	  <para><option>fr</option> - <literal>file_read</literal>
	    - Audit events in which data is read, files are opened for
	    reading, etc.</para>
	</listitem>

	<listitem>
	  <para><option>fw</option> - <literal>file_write</literal> -
	    Audit events in which data is written, files are written
	    or modified, etc.</para>
	</listitem>

	<listitem>
	  <para><option>io</option> - <literal>ioctl</literal> - Audit
	    use of the &man.ioctl.2; system call.</para>
	</listitem>

	<listitem>
	  <para><option>ip</option> - <literal>ipc</literal> - Audit
	    System V <acronym>IPC</acronym> operations.</para>
	</listitem>

	<listitem>
	  <para><option>lo</option> - <literal>login_logout</literal> -
	    Audit &man.login.1; and &man.logout.1; events occurring
	    on the system.</para>
	</listitem>

	<listitem>
	  <para><option>na</option> - <literal>non_attrib</literal> -
	    Audit non-attributable events.</para>
	</listitem>

	<listitem>
	  <para><option>no</option> - <literal>no_class</literal> -
	    Null class used to disable event auditing.</para>
	</listitem>

	<listitem>
	  <para><option>nt</option> - <literal>network</literal> -
	    Audit events related to network actions, such as
	    &man.connect.2; and &man.accept.2;.</para>
	</listitem>

	<listitem>
	  <para><option>ot</option> - <literal>other</literal> -
	    Audit miscellaneous events.</para>
	</listitem>

	<listitem>
	  <para><option>pc</option> - <literal>process</literal> -
	    Audit process operations, such as &man.exec.3; and
	    &man.exit.3;.</para>
	</listitem>

	<listitem>
	  <para><option>tf</option> - <literal>tfm</literal> -
	    I HAVE NO CLUE!</para>
	</listitem>
      </itemizedlist>

      <para>Following is a list of all supported audit prefixes:</para>

      <itemizedlist>
	<listitem>
	  <para><literal>none</literal> - Audit both the success
	    or failure of an event.  For example, just listing a
	    class will result in the auditing of both success and
	    failure.</para>
	</listitem>

	<listitem>
	  <para><literal>+</literal> - Audit successful events
	    only.</para>
	</listitem>

	<listitem>
	  <para><literal>-</literal> - Audit failed events
	    only.</para>
	</listitem>
      </itemizedlist>

      <warning>
	<para>Using the <option>all</option> class with either the
	  positive or negative prefix can generate a large amount
	  of data at an extremely rapid rate.</para>
      </warning>

      <para>Extra prefixes used to modify the default configuration
	values:</para>
<!-- XXX: Perhaps a variable listing here. -->
      <itemizedlist>
	<listitem>
	  <para>^- - Disable auditing of failed events.</para>
	</listitem>

	<listitem>
	  <para>^+ - Enable auditing of successful events.</para>
	</listitem>

	<listitem>
	  <para>^ - Disable auditing of both successful and failed
	    events.</para>
	</listitem>
      </itemizedlist>
    </sect2>

    <sect2>
      <title>Configuration Files</title>

      <para>Configuration is set in only two files, the first being
        <filename>audit_control</filename> and
	<filename>audit_user</filename> being the second.  The first
	is system-wide, controlling every aspect of event auditing
	in the system.  The latter may be used for fine grained user
	auditing.</para>

      <sect3 id="audit-auditcontrol">
        <title>The <filename>audit_control</filename> File</title>

	<para>The <filename>audit_control</filename> contains some basic
	  defaults that the administrator may wish to modify.  Perhaps
	  even set some new ones.  Viewing the contents of this file,
	  we see the following:</para>

	<programlisting>dir:/var/audit
flags:lo,ad,-all,^-fa,^-fc,^-cl
minfree:20
naflags:lo</programlisting>

	<para>The <option>dir</option> is used to set the default
	  directory where audit logs are stored.</para>

	<para>The <option>flags</option> is used to set the system-wide
	  defaults.  The current setting,
	  <option>lo,ad,-all,^-fa,^-fc,^-cl</option> audits all system
	  &man.login.1; and &man.logout.1; actions, all administrator
	  actions, all failed events in the system, and finally disable
	  auditing of failed attempts for <option>fa</option>,
	  <option>fc</option>, and <option>cl</option>.  Even though
	  the <option>-all</option> turned on the auditing of all
	  failed attempts, the <option>^-</option> prefix will override
	  that for the latter options.</para>

	<para>Notice that the previous paragraph shows the file is
	  read from left to right.  As such, values further on the
	  right side may override a previous value specified to
	  its left.</para>

	<para>The <option>minfree</option> option defines the minimum
	  percentage of free space for audit file systems.  This
	  relates to the file system where audit logs are stored.
	  For example, if the <option>dir</option> specifies
	  <filename role="directory">/var/audit</filename> and
	  <option>minfree</option> is set to twenty (20), warning
	  messages will be generated when the
	  <filename role="directory">/var</filename> file system grows
	  to eighty (80) percent full.</para>

	<para>The <option>naflags</option> option specifies audit
	  flags to be considered non attributable; i.e.: classes of
	  events which cannot be attributed to a specific user
	  on the system.  This can be overridden with the
	  <filename>audit_user</filename> configuration file.</para>
      </sect3>

      <sect3 id="audit-audituser">
	<title>The <filename>audit_user</filename> File</title>

	<para>The <filename>audit_user</filename> permits the
	  administrator to map audit specific events to directly
	  to users.  This adds a finer-grained control mechanism
	  for all system users.</para>

	<para>The following is the defaults currently placed in
	  the <filename>audit_user</filename> file:</para>

	<programlisting>root:lo:no
audit:fc:no</programlisting>

	<para>Notice how the default is to audit all cases of
	  <command>login</command>/<command>logout</command>
	  and disable auditing of all other actions for
	  <username>root</username>.  This configuration
	  also audits all file creation and disables all
	  other auditing for the <username>audit</username>
	  user.  While event auditing does not require a special
	  user exist, some configurations, specifically environments
	  making use of <acronym>MAC</acronym> may require it.</para>
      </sect3>
    </sect2>
  </sect1>

  <sect1 id="audit-administration">
    <title>Event Audit Administration</title>

    <para>Events from the <command>auditd</command> daemon cannot
      be altered or read in plain text.  Data is stored and accessed
      in a method similar to that of &man.ktrace.1; and &man.kdump.1,
      that is, they may only be viewed by dumping them using the
      <command>praudit</command> or <command>auditreduce</command>
      utilities.</para>

    <para>There are two utilities because of different requirements.
      For example, the <command>praudit</command> will dump the entire
      contents of a specified audit log in plain text.  To dump an
      audit log in its entirety, use:</para>

    <screen>&prompt.root; <userinput>praudit /var/audit/AUDITFILE</userinput></screen>

    <para>Where <replaceable>AUDITFILE</replaceable> is the audit log
      of viewing choice.  Since audit logs may contain enormous
      amounts of data, an administrator may prefer to select records
      for specific users.  This is made possible with the following
      command, where <username>trhodes</username> is the user of
      choice:</para>

    <screen>&prompt.root; <userinput>auditreduce -e trhodes /var/audit/AUDITFILE</userinput></screen>

    <para>This will select all audit records produced by the user
      <username>trhodes</username> stored in the
      <replaceable>AUDITFILE</replaceable> file.

    <para>There are several other options available for reading audit
      records, see the aforementioned command's manual pages for
      a more in depth explination.</para>

    <sect2>
      <title>Rotating Audit Log Files</title>

      <para>Manually rotating audit log files will cause great
	havoc within the system.  Therefore, adding a line to
	&man.newsyslog.conf.5; will provide no usefulness.  So how
	are the logs to be rotated?  Sending the appropriate flag
	to the <command>audit</command> utility will shut down
	event auditing and safely rotate.  The following command
	should handle everything for an administrator:</para>

      <screen>&prompt.root; <userinput>audit -n</userinput></screen>

      <warning>
	<para>If the <command>auditd</command> daemon is not currently
	  running, the previous command will fail and an error message
	  will be produced.</para>
      </warning>

      <para>Adding the following line to
	<filename>/etc/crontab</filename> will force the rotation
	every twelve hours from &man.cron.8;:</para>

      <programlisting>*     */12       *       *       *       root    /usr/sbin/audit -n</programlisting>

      <para>Remember to reinstall the <filename>crontab</filename>
        file.  Otherwise the rotation will never occur.</para>
    </sect2>
  </sect1>
</chapter>
