<!--
     The FreeBSD Documentation Project

     $FreeBSD: doc/en_US.ISO_8859-1/books/handbook/l10n/chapter.sgml,v 1.15 1999/11/07 01:54:49 chris Exp $
-->

<chapter id="l10n">
  <title>Localization - I18N/L10N Usage and Setup</title>

  <para><emphasis>Written by &a.keichii; 6 March 2000.</emphasis></para>

  <sect1>
    <title>Synopsis</title>

    <para>This section of the handbook discusses the internationalization
      and localization of FreeBSD to different countries and different
      settings.  If the users wish to use languages other than the system
      default English, he/she will have to setup the system accordingly.
      Please note that language support for each language varies in level.
      Hence, the user should contact the respective FreeBSD local group
      that is responsible for each language.</para>

    <para>The author realizes that he may have been incomplete in the
      description of the i18n process in FreeBSD.  Due to the various
      levels of i18n implementation in both the system and applicational
      levels, we advise you to refer to individual documentation, man
      pages, READMEs, and so forth.</para>

    <para>Should you have any questions or suggestions regarding this
      chapter, please email the author.</para>
  </sect1>

  <sect1>
    <title>The Basics</title>

    <sect2>
      <title>What is i18n/l10n?</title>

      <para>Developers shortened internationalization into the term i18n,
	counting the number of letters between the first and the last
	letters of internationalization.  l10n uses the same naming
	scheme, coming from &ldquo;localization&rdquo;.  Combined
	together, i18n/l10n methods, protocols, and applications allow
	users to use languages of their choice.</para>

      <para>I18n applications are programmed using i18n kits under
	libraries.  It allows for developers to write a simple file and
	translate displayed menus and texts to each language.  We strongly
	encourage programmers to follow this convention.</para>
    </sect2>

    <sect2>
      <title>Why should I use i18n/l10n?</title>

      <para>I18n/l10n is used whenever you wish to either view, input, or
	process data in non-English languages.</para>
    </sect2>

    <sect2>
      <title>What languages are supported in the i18n effort?</title>

      <para>I18n and l10n are not FreeBSD specific.  Currently, one can
	choose from most of the major languages of the World, including
	but not limited to:  Chinese, German, Japanese, French, Russian,
	and others.</para>
    </sect2>
  </sect1>

  <sect1 id="using-localization">
    <title>Using Localization</title>

    <para>In all its splendor, i18n is not FreeBSD-specific and is a
      convention.  We encourage you to help FreeBSD in following this
      convention.</para>

    <sect2>
      <title>Language Codes</title>

      <para>In order to localize a FreeBSD system to a specific language
	(or any other i18n-supporting UNIX's), the user needs to find out
	the language code for the specify country and language. Country
	codes tell applications what language to use.  In addition, web
	browsers, SMTP/POP servers, HTTPd's, etc. make decisions based on
	them.  The following are examples of country codes:</para>

      <informaltable frame="none">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Language code</entry>
	      <entry>Description</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>en</entry>
	      <entry>Generic English</entry>
	    </row>

	    <row>
	      <entry>en.us</entry>
	      <entry>English&mdash;United States</entry>
	    </row>

	    <row>
	      <entry>ru</entry>
	      <entry>Russian</entry>
	    </row>

	    <row>
	      <entry>zh_TW.Big5</entry>
	      <entry>Traditional Chinese for Taiwan</entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>You can read more about character sets and language codes at
	<ulink
	url="ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets">ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets</ulink>.</para>
    </sect2>

    <sect2>
      <title>Encoding</title>

      <para>Some languages (mostly Asian ones) use non-ASCII encodings
        that are 8-bit characters.  Older applications do not recognize
	them and mistake them for control characters.  Newer applications
	do recognize 8-bit characters.  Depending on implementation, users
	may be required to compile the application with 8-bit support
	(such as MySQL and Apache), or configure it correctly (such as
	telnet, ssh, and system shells).  To be able to input and process
	8-bit characters, the <ulink url="../ports/">FreeBSD Ports
	collection</ulink> has provided each language with different
	programs.  Refer to the i18n documentation in the respective
	FreeBSD Port.</para>

      <para>Specifically, the user needs to look at the application
	documentation to decide on how to configure it correctly or to
	pass correct values into the configure/Makefile/compiler.</para>

      <para>Some things to keep in mind are:</para>

      <itemizedlist>
	<listitem>
	  <para>UTF-8 encoding</para>
	</listitem>

	<listitem>
	  <para>Language specific MIME 8-bit support</para>
	</listitem>

	<listitem>
	  <para>Language specific charsets</para>
	</listitem>

	<listitem>
	  <para>UUENCODE/UUDECODE</para>
	</listitem>
      </itemizedlist>
    </sect2>

    <sect2>
      <title>i18n applications</title>

      <para>In the FreeBSD Ports and Package system, i18n applications
	have been named with <literal>i18n</literal> in their names for
	easy identification.  However, they do not always support the
	language needed.</para>

      <para>Non-English users should install i18n libraries and
	applications if they wish to use a different locale.</para>
    </sect2>

    <sect2 id="setting-locale">
      <title>Setting Locale</title>

      <para>Theoretically, one only needs to export the value of his/her
	language code as LANG in the login shell and is usually done
	through the user login shell configuration
	(<filename>.profile</filename>, <filename>.bashrc</filename>, or
	<filename>.cshrc</filename>).  This should set all of the locale
	subsets (such as <envar>LC_CTYPE</envar>,
	<envar>LC_CTIME</envar>, etc.).  However, some applications
	that do not follow the i18n convention correctly will require you
	to set each locale subset specifically.  Please refer to
	language-specific FreeBSD documentation for more
	information.</para>

      <para>You should set the following two values in your configuration
	files:</para>

      <itemizedlist>
        <listitem>
	  <para><envar>LANG</envar> for POSIX &man.setlocale.3; family
	    functions</para>
	</listitem>

	<listitem>
	  <para><envar>MM_CHARSET</envar> for applications' MIME character
	    set</para>
	</listitem>
      </itemizedlist>

      <para>This includes the user shell config, the specific library
        config, and the X11 config.</para>

      <sect3>
	<title>Setting Locale - Shell Startup Files Method</title>

	<para> There are two methods for setting locale, and both are
	  described below.  The first is by adding environment variables
	  to the system's shell startup files, and the second is by <link
	  linkend="login-class">login class</link>.  To use th first
	  method, just set the two environment variables shown below in
	  the <filename>/etc/profile</filename> and/or
	  <filename>/etc/csh.login</filename> shell startup files.  We
	  will use the Russian language as an example below:</para>

	<para>In <filename>/etc/profile</filename>:</para>

	<programlisting>
<envar>LANG=ru_RU.KOI8-R; export LANG</envar>
<envar>MM_CHARSET=KOI8-R; export MM_CHARSET</envar></programlisting>

	<para>Or in <filename>/etc/csh.login</filename>:</para>

	<programlisting>
<envar>setenv LANG ru_RU.KOI8-R</envar>
<envar>setenv MM_CHARSET KOI8-R</envar></programlisting>

	<para>Alternatively, you can add the above instructions to
	  <filename>/usr/share/skel/dot.profile</filename> (similar to
	  what was used in <filename>/etc/profile</filename> above), or
	  <filename>/usr/share/skel/dot.login</filename> (similar to what
	  was used in <filename>/etc/csh.login</filename> above).</para>

	<para>For X11:</para>

	<para>In <filename>$HOME/.xinitrc</filename>:</para>

	<programlisting>
<envar>LANG=ru_RU.KOI8-R; export LANG</envar></programlisting>

	<para>Or:</para>

	<programlisting>
<envar>setenv LANG ru_RU.KOI8-R</envar></programlisting>

	<para>Depending on your shell (see above).</para>

	<para>In <filename>$HOME/.Xresources</filename>, you can set
	  application specific i18n settings (e.g., fonts, display
	  characters, etc.).</para>
      </sect3>

      <sect3 id="login-class">
        <title>Login Classes</title>

	<para>This method of setting locale should only be used when you
	  wish each user to be using the language you choose for your
	  system.  If you are a user or wish to allow users to default to
	  English and change locale themselves, please disregard this
	  section.</para>

	<para>Check that <filename>/etc/login.conf</filename> have the
	  correct language user's class.  Make sure these settings appear
	  in <filename>/etc/login.conf</filename>:</para>

	<programlisting>
<replaceable>language</replaceable>:<replaceable>Title for user accounts</replaceable>:\
	:charset=<replaceable>language charset</replaceable>:\
	:lang=<replaceable>country code.charset</replaceable>:\
	:tc=default:</programlisting>

	<para>So sticking with our previous example using Russian, it
	  would look like this:</para>
	
	<programlisting>
russian:Russian Users Accounts:\
	:charset=KOI8-R:\
	:lang=ru_RU.KOI8-R:\
	:tc=default:</programlisting>

	<sect4>
	  <title>Changing Login Classes with &man.vipw.8;</title>

	  <para>Use <command>vipw</command> to add new users, and make the
	    entry look like this:</para>

	  <programlisting>
user:password:1111:11:<replaceable>language</replaceable>:0:0:User Name:/home/user:/bin/sh</programlisting>
	</sect4>

	<sect4>
	  <title>Changing Login Classes with &man.adduser.8;</title>

	  <para>Use <command>adduser</command> to add new users, and do
	    the following:</para>

	  <itemizedlist>
	    <listitem>
	      <para>Set <programlisting>defaultclass = <replaceable>language</replaceable></programlisting>
		in <filename>/etc/adduser.conf</filename>.  Keep in mind
		you must enter <literal>default</literal> class for all
		users of other languages in this case.</para>
	    </listitem>

	    <listitem>
	      <para>An alternative variant is answering the specified
		language each time that <screen><prompt>Enter login
		class:</prompt> default []:</screen> appears from
		&man.adduser.8;</para>
	    </listitem>

	    <listitem>
	      <para>Another alternative is to use the following for each
		user of a different language that you wish to add:</para>

	      <screen>&prompt.root; <userinput>adduser -class <replaceable>language</replaceable></userinput></screen>
	    </listitem>
	  </itemizedlist>
	</sect4>

	<sect4>
	  <title>Changing Login Classes with &man.pw.8;</title>

	  <para>If you use &man.pw.8; for adding new users, call it in
	    this form:</para>

	  <screen>&prompt.root; <userinput>pw useradd user_name -L <replaceable>language</replaceable></userinput></screen>
	</sect4>
      </sect3>

      <sect3 id="setting-console">
        <title>Console</title>

	<para>For all 7-bit Roman languages, set the correct console fonts
	  in <filename>/etc/rc.conf</filename> for the language in
	  question with:</para>

	<programlisting>
font8x16=<replaceable>font name</replaceable>
font8x14=<replaceable>font name</replaceable>
font8x8=<replaceable>font name</replaceable></programlisting>

	<para>Also be sure to set the correct keymap and screenmap for
	  your 7-bit language through
	  <filename>/stand/sysinstall</filename>.  Once inside sysinstall,
	  choose <literal>Configure</literal>, then
	  <literal>Console</literal>.  Alternatively, you can add the
	  following to <filename>/etc/rc.conf</filename>:</para>

	<programlisting>
scrnmap=<replaceable>screenmap name</replaceable>
keychange=<replaceable>special key names</replaceable>
keymap=<replaceable>keymap name</replaceable></programlisting>

	<para>For 8-bit languages, use the correct FreeBSD Port in your
	  <filename>/usr/ports/<replaceable>language</replaceable></filename>
	  directory.  Some ports appear as console while the systems sees
	  it as serial vtty's, hence you must reserve enough vtty's for
	  both X11 and the pseudo-serial console.  Here is a partial list of
	  applications for using other languages in console:</para>

	<informaltable frame="none">
	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry>Language</entry>
		<entry>Location</entry>
	      </row>
	    </thead>

	    <tbody>
	      <row>
		<entry>Traditional Chinese (BIG-5)</entry>
		<entry><filename>/usr/ports/chinese/big5con</filename></entry>
	      </row>

	      <row>
		<entry>Japanese</entry>
		<entry><filename>/usr/ports/japanese/ja-kon2-*</filename>
		or <filename>/usr/ports/japanese/Mule_Wnn</filename></entry>
	      </row>

	      <row>
		<entry>Korean</entry>
		<entry><filename>/usr/ports/korean/ko-han</filename></entry>
	      </row>

	      <row>
		<entry>Russian or other KOI8 charsets</entry>
		<entry><filename>cons25r</filename> (screenmap and keymap)</entry>
	      </row>

	      <row>
		<entry>Most ISO-8859 charsets</entry>
		<entry><filename>cons2551</filename></entry>
	      </row>
	    </tbody>
	  </tgroup>
	</informaltable>
      </sect3>

      <sect3>
	<title>X11</title>

	<para>Although X11 is not part of the FreeBSD Project, we have
	  included some information here for FreeBSD users.  For more
	  details, refer to the <ulink
	  url="http://www.xfree86.org/">XFree86 website</ulink> or
	  whichever X11 Server you use.</para>

	<sect4>
	  <title>Displaying Language Fonts</title>

	  <para>Install the X11 True Type-Common server (XTT-common) and
	    install the language truetype fonts.  Setting the correct
	    locale should allow you to view your selected language in
	    menus and such.</para>
	</sect4>

	<sect4>
	  <title>Inputting Non-English Characters</title>

	  <para>The X11 Input Method (XIM) Protocol is a new standard for
	    all X11 clients.  All X11 applications should be written as XIM
	    clients that take input from XIM Input servers.  There are
	    several XIM servers available for different languages.</para>
	</sect4>
      </sect3>

      <sect3>
	<title>Printer Setup</title>

	<para>7-bit characters are usually hardware coded into printers.
	  8-bit characters require special setup and we recommend using
	  apsfilter.  You may also convert the document to postscript or
	  pdf formats using language specific converters.</para>
      </sect3>

      <sect3>
	<title>Kernel and File Systems</title>

	<para>To use non-English characters (including 7- and 8-bit
	  charsets) in the FreeBSD FFS filesystem, kernel patches are
	  necessary.  Otherwise, you may not be able to access the files.
	  This is language specific, and we ask you again to view related
	  documentation.</para>

	<para>Some languages are supported in &man.fstab.5;.</para>
      </sect3>
    </sect2>
  </sect1>

  <sect1>
    <title>Advanced Topics</title>

    <para>If you wish to compile i18n applications or program i18n
      compliant applications, please read this section.</para>

    <sect2>
      <title>Compiling i18n Programs</title>

      <para>Many FreeBSD Ports have been ported with i18n support.  Some
	of them are marked with -i18n in the port name.  These and many
	other programs have built in support for i18n and need no special
	consideration.</para>

      <para>However, some applications such as MySQL need to be have the
	<filename>Makefile</filename> configured with the specific
	charset.  This is usually done in the
	<filename>Makefile</filename> or done by passing a value to
	configure in the source.</para>
    </sect2>

    <sect2>
      <title>Programming i18n Compliant Applications</title>

      <para>To make your application more useful for speakers of other
	languages, we hope that you will program i18n compliant.  The GNU
	gcc compiler, GUI Libraries like QT and GTK support i18n through
	special handling of strings.  Making a program i18n compliant is
	very easy.  It allows contributors to port your application to
	other languages quickly.  Refer to library specific i18n
	documentation for more details.</para>

      <para>To the contrary of common perception, i18n compliant code is
	easy to write.  Usually, it only involves wrapping your strings
	with library specific functions.  In addition, please be sure to
	allow for 8-bit character support.</para>

      <sect3>
	<title>A Call to Unify the i18n effort</title>

	<para>It has come to our attention that the individual i18n/l10n
	  efforts for each country has been repeating each others'
	  efforts.  Many of us have been reinventing the wheel repeatedly
	  and inefficiently.  We hope that the various major groups in
	  i18n could congregate into a group effort similiar to the Core
	  Team's responsibility.</para>

	<para>Currently, we hope that, when you write or port i18n
	  programs, you would send it out to each country's related
	  FreeBSD mailing lists for testing.  In the future, we hope to
	  create applications that work in all the languages
	  out-of-the-box without dirty hacks.</para>
      </sect3>

      <sect3>
	<title>Perl and Python</title>

	<para>Perl and Python have i18n and 8-bit character handling
	  libraries.  Please use them for i18n compliance.</para>

	<para>Occasionally, Perl gives warning about not having a locale
	  that is already installed in your system.  You can set the
	  environmental variable <envar>LD_PRELOAD</envar> to
	  <filename>/usr/lib/libxpg4.so</filename> in your shell.</para>

	<para>In <literal>sh</literal>-based shells:</para>

	<programlisting>
<envar>LD_PRELOAD=/usr/lib/libxpg4.so</envar></programlisting>

	<para>In <literal>C</literal>-based shells:</para>

	<programlisting>
<envar>setenv LD_PRELOAD /usr/lib/libxpg4.so</envar></programlisting>
      </sect3>
    </sect2>
  </sect1>

  <sect1>
    <title>Examples for Localizing FreeBSD</title>

    <sect2>
      <title>Russian Language (KOI8-R encoding)</title>

      <para><emphasis>Originally contributed by
	&a.ache;.</emphasis></para>

      <para>See more info about KOI8-R encoding at <ulink
	url="http://www.nagual.pp.ru/~ache/koi8.html">KOI8-R References
	(Russian Net Character Set)</ulink>.</para>

      <para>See earlier in this chapter for examples of setting up the
	<link linkend="setting-console">console</link> and <link
	linkend="setting-locale">locale</link>.</para>

      <sect3>
	<title>Printer Setup</title>

	<para>Since most printers with Russian characters come with
	  hardware code page CP866, a special output filter is needed for
	  KOI8-R -&gt; CP866 conversion.  Such a filter is installed by
	  default as <filename>/usr/libexec/lpr/ru/koi2alt</filename>.
	  A Russian printer <filename>/etc/printcap</filename> entry
	  should look like:</para>

	<programlisting>
lp|Russian local line printer:\
	:sh:of=/usr/libexec/lpr/ru/koi2alt:\
	:lp=/dev/lpt0:sd=/var/spool/output/lpd:lf=/var/log/lpd-errs:</programlisting>

	<para>See &man.printcap.5; for a detailed description.</para>
      </sect3>

      <sect3>
	<title>MSDOS FS and Russian Filenames</title>

	<para>The following example &man.fstab.5; entry enables support
	  for Russian filenames in mounted MSDOS filesystems:</para>

	<programlisting>
/dev/sd0s1	/dos/c	msdos	rw,-W=koi2dos,-L=ru_RU.KOI8-R 0 0</programlisting>

	<para>See &man.mount.msdos.8; for a detailed description of the
	  <option>-W</option> and <option>-L</option> options.</para>
      </sect3>

      <sect3>
	<title>X11 Setup</title>

	<orderedlist>
	  <listitem>
	    <para>Do <link linkend="setting-locale">non-X locale
	      setup</link> first as described.</para>

	    <note>
	      <para><anchor id="russian-note">The Russian KOI8-R locale
		may not work with old XFree86 releases (lower than 3.3).
		The XFree86 port from
		<filename>/usr/ports/x11/XFree86</filename> already is the
		most recent XFree86 version, so it will work if you
		install XFree86 from the port.  This should not be an
		issue unless you are using an old version of
		FreeBSD.</para>
	    </note>
	  </listitem>

	  <listitem>
	    <para>Go to the
	      <filename>/usr/ports/russian/X.language</filename> directory
	      and issue the following command:</para>

	    <screen>&prompt.root; <userinput>make install</userinput></screen>
      
	    <para>The above port installs the latest version of the KOI8-R
	      fonts.  XFree86 3.3 already has some KOI8-R fonts, but these
	      are scaled better.</para>

	    <para>Check the <literal>&ldquo;Files&rdquo;</literal> section
	      in your <filename>XF86Config</filename> file.  The following
	      lines must be added <emphasis>before</emphasis> any other
	      <literal>FontPath</literal> entries:</para>

	    <programlisting>
FontPath   &ldquo;/usr/X11R6/lib/X11/fonts/cyrillic/misc&rdquo;
FontPath   &ldquo;/usr/X11R6/lib/X11/fonts/cyrillic/75dpi&rdquo;
FontPath   &ldquo;/usr/X11R6/lib/X11/fonts/cyrillic/100dpi&rdquo;</programlisting>

	    <para>If you use a high resolution video mode, swap the 75 dpi
	      and 100 dpi lines.</para>
	  </listitem>

	  <listitem>
	    <para>To activate a Russian keyboard add a
	      <programlisting>XkbKeymap &ldquo;xfree86(ru)&rdquo;</programlisting>
	      line into the <literal>&ldquo;Keyboard&rdquo;</literal>
	      section in your <filename>XF86Config</filename> file.  Also
	      make sure that <literal>XkbDisable</literal> is turned off
	      (commented out) there.</para>
   
	    <para>The RUS/LAT switch will be <literal>CapsLock</literal>.
	      The old <literal>CapsLock</literal> function is still
	      available via <literal>Shift+CapsLock</literal> (in LAT mode
	      only).</para>

	    <note>
	      <para>The Russian XKB keyboard may not work with old XFree86
		versions, see the <link linkend="russian-note">above
		note</link> for more information.  The Russian XKB
		keyboard may also not work with non-localized
		applications as well.  Minimally localized applications
		should call a <literal>XtSetLanguageProc (NULL, NULL,
		NULL);</literal> function early in the program.</para>
	    </note>
	  </listitem>
	</orderedlist>
      </sect3>
    </sect2>

    <sect2>
      <title>Traditional Chinese Localization for Taiwan</title>

      <para>The FreeBSD-Taiwan Project has an i18n/l10n tutorial for
	FreeBSD at <ulink url="http://freebsd.sinica.edu.tw/~ncvs/zh-l10n-tut/index.html">http://freebsd.sinica.edu.tw/~ncvs/zh-l10n-tut/index.html</ulink>
	using many <filename>/usr/ports/chinese/*</filename> applications.
	The editor for the <literal>zh-l10n-tut</literal> is Clive Lin
	<email>Clive@CirX.org</email>.  You can also cvsup the following
	collections at <hostid
	role="fqdn">freebsd.sinica.edu.tw</hostid>:</para>

      <informaltable frame="none">
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Collection</entry>
	      <entry>Description</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>outta-port tag=.</entry>
	      <entry>Beta-quality Ports Collection for Chinese</entry>
	    </row>

	    <row>
	      <entry>zh-l10n-tut tag=.</entry>
	      <entry>Localizing FreeBSD Tutorial in BIG-5 Traditional
		Chinese</entry>
	    </row>

	    <row>
	      <entry>zh-doc tag=.</entry>
	      <entry>FreeBSD Documenation Translation to BIG-5 Traditional
		Chinese</entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Chuan-Hsing Shen <email>s874070@mail.yzu.edu.tw</email> has
	created the <ulink url="http://cpna.yzu.edu.tw/~cfe">Chinese
	FreeBSD Extension (CFE)</ulink> using FreeBSD-Taiwan's
	<literal>zh-l10n-tut</literal>.  The packages and the script files
	are available at <ulink url="ftp://ftp-cnpa.yzu.edu.tw/FreeBSD/collect/cfe/cfe.txt">ftp://ftp-cnpa.yzu.edu.tw/FreeBSD/collect/cfe/cfe.txt</ulink>
	  and <ulink
	  url="ftp://ftp-cnpa.yzu.edu.tw/FreeBSD/collect/cfe/">ftp://ftp-cnpa.yzu.edu.tw/FreeBSD/collect/cfe/</ulink>.</para>
    </sect2>

    <sect2>
      <title>German Language Localization (For All ISO 8859-1
	Languages)</title>

      <para>Slaven Rezic <email>eserte@cs.tu-berlin.de</email> wrote a
	tutorial how to use umlauts on a FreeBSD machine.  The tutorial
	is written in German and available at <ulink
	url="http://www.de.FreeBSD.org/de/umlaute/">http://www.de.FreeBSD.org/de/umlaute/</ulink>.</para>
    </sect2>

    <sect2>
      <title>Japanese and Korean Language Localization</title>

      <para>For Japanese, refer to <ulink
	url="http://www.jp.FreeBSD.org/">http://www.jp.FreeBSD.org/</ulink>,
	and for Korean, refer to <ulink
	url="http://www.kr.FreeBSD.org/">http://www.kr.FreeBSD.org/</ulink>.</para>
    </sect2>

    <sect2>
      <title>Non-English FreeBSD Documentation</title>

      <para>Some FreeBSD contributors have translated parts of FreeBSD to
	other languages.  They are available through links on the <ulink
	url="../index.html">main site</ulink> or in
	<filename>/usr/share/doc</filename>.</para>
    </sect2>
  </sect1>
</chapter>
