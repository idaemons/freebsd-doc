<?xml version="1.0" encoding="iso-8859-1"?>
<!--
     The FreeBSD Documentation Project

     $FreeBSD$
-->
<appendix xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="mirrors">
  <title>Obtaining &os;</title>

  <sect1 xml:id="mirrors-cdrom">
    <title>CDROM and DVD Publishers</title>

    <sect2>
      <title>CD and DVD Sets</title>

      <para>&os; CD and DVD sets are available from many online
	retailers:</para>

      <itemizedlist>
	<listitem>
	  <address>
	    &os; Mall, Inc.
	    <street>2420 Sand Creek Rd C-1 #347</street>
	    <city>Brentwood</city>,
	    <state>CA</state>
	    <postcode>94513</postcode>
	    <country>USA</country>
	    Phone: <phone>+1 925 240-6652</phone>
	    Fax: <fax>+1 925 674-0821</fax>
	    Email: <email>info@freebsdmall.com</email>
	    WWW: <otheraddr
	      xlink:href="http://www.freebsdmall.com/">http://www.freebsdmall.com/</otheraddr>
	  </address>
	</listitem>

	<listitem>
	  <address>
	    Dr. Hinner EDV
	    <street>Kochelseestr. 11</street>
	    <postcode>D-81371</postcode> <city>M&uuml;nchen</city>
	    <country>Germany</country>
	    Phone: <phone>(0177) 428 419 0</phone>
	    WWW: <otheraddr
	      xlink:href="http://www.hinner.de/linux/freebsd.html">http://www.hinner.de/linux/freebsd.html</otheraddr>
	  </address>
	</listitem>

	<listitem>
	  <address>
	    Linux Distro UK
	    <street>42 Wharfedale Road</street>
	    <city>Margate</city>
	    <postcode>CT9 2TB</postcode>
	    <country>United Kingdom</country>
	    WWW: <otheraddr
	      xlink:href="https://linux-distro.co.uk/">https://linux-distro.co.uk/</otheraddr>
	  </address>
	</listitem>

	<listitem>
	  <address>
	    The Linux Emporium
	    <street>The Techno Centre, Puma Way</street>
	    <city>Parkside</city>
	    <postcode>CV1 2TT</postcode>
	    <country>United Kingdom</country>
	    Phone: <phone>+44 (0)247 615 8121</phone>
	    Fax: <fax>+44 1491 837016</fax>
	    WWW: <otheraddr
	      xlink:href="http://www.linuxemporium.co.uk/products/bsd/">http://www.linuxemporium.co.uk/products/bsd/</otheraddr>
	  </address>
	</listitem>

	<listitem>
	  <address>
	    LinuxCenter.Ru
	    <street>Galernaya Street, 55</street>
	    <city>Saint-Petersburg</city>
	    <postcode>190000</postcode>
	    <country>Russia</country>
	    Phone: <phone>+7-812-3125208</phone>
	    Email: <email>info@linuxcenter.ru</email>
	    WWW: <otheraddr
	      xlink:href="http://linuxcenter.ru/shop/freebsd">http://linuxcenter.ru/shop/freebsd</otheraddr>
	  </address>
	</listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 xml:id="mirrors-ftp">
    <title><acronym>FTP</acronym> Sites</title>

    <para>The official sources for &os; are available via anonymous
      <acronym>FTP</acronym> from a worldwide set of mirror sites.
      The site <uri
	xlink:href="ftp://ftp.FreeBSD.org/pub/FreeBSD/">ftp://ftp.FreeBSD.org/pub/FreeBSD/</uri>
      is well connected and allows a large number of connections to
      it, but you are probably better off finding a
      <quote>closer</quote> mirror site (especially if you decide to
      set up some sort of mirror site).</para>

    <para>Additionally, &os; is available via anonymous
      <acronym>FTP</acronym> from the following mirror sites.  If you
      choose to obtain &os; via anonymous <acronym>FTP</acronym>,
      please try to use a site near you.  The mirror sites listed as
      <quote>Primary Mirror Sites</quote> typically have the entire
      &os; archive (all the currently available versions for each of
      the architectures) but you will probably have faster download
      times from a site that is in your country or region.  The
      regional sites carry the most recent versions for the most
      popular architecture(s) but might not carry the entire &os;
      archive.  All sites provide access via anonymous
      <acronym>FTP</acronym> but some sites also provide access via
      other methods.  The access methods available for each site are
      provided in parentheses after the hostname.</para>

    &chap.mirrors.ftp.index.inc;

    &chap.mirrors.lastmod.inc;

    &chap.mirrors.ftp.inc;
  </sect1>

  <sect1 xml:id="ctm">
    <title>Using CTM</title>

    <indexterm>
      <primary>CTM</primary>
    </indexterm>

    <para><application>CTM</application> is a method for keeping a
      remote directory tree in sync with a central one.  It is built
      into &os; and can be used to synchronize a system with &os;'s
      source repositories.  It supports synchronization of an entire
      repository or just a specified set of branches.</para>

    <para><application>CTM</application> is specifically designed for
      use on lousy or non-existent TCP/IP connections and provides
      the ability for changes to be automatically sent by email.  It
      requires the user to obtain up to three deltas per day for the
      most active branches.  Update sizes are always kept as small as
      possible and are typically less than 5K.  About one in very ten
      updates is 10-50K in size, and there will occasionally be an
      update larger than 100K+.</para>

    <para>When using <application>CTM</application> to track &os;
      development, refer to the caveats related to working directly
      from the development sources rather than a pre-packaged release.
      These are discussed in <link linkend="current-stable">Tracking
	a Development Branch</link>.</para>

    <para>Little documentation exists on the process of creating
      deltas or using <application>CTM</application> for other
      purposes.  Contact the &a.ctm-users.name; mailing list for
      answers to questions on using <application>CTM</application>.</para>

    <sect2 xml:id="mirrors-ctm">
      <title>Getting Deltas</title>

      <para>The <quote>deltas</quote> used by
	<application>CTM</application> can be obtained either through
	anonymous <acronym>FTP</acronym> or email.</para>

      <para><acronym>FTP</acronym> deltas can be obtained from the
	following mirror sites.  When using anonymous
	<acronym>FTP</acronym> to obtain
	<application>CTM</application> deltas, select a mirror that is
	geographically nearby.  In case of problems, contact the
	&a.ctm-users.name; mailing list.</para>

      <variablelist>
	<varlistentry>
	  <term>California, Bay Area, official source</term>

	  <listitem>
	    <itemizedlist>
	      <listitem>
		<para><uri
		  xlink:href="ftp://ftp.FreeBSD.org/pub/FreeBSD/development/CTM/">ftp://ftp.FreeBSD.org/pub/FreeBSD/development/CTM/</uri></para>
	      </listitem>
	      <listitem>
		<para><uri
		  xlink:href="ftp://ftp.FreeBSD.org/pub/FreeBSD/CTM/">ftp://ftp.FreeBSD.org/pub/FreeBSD/CTM/</uri></para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>South Africa, backup server for old deltas</term>

	  <listitem>
	    <itemizedlist>
	      <listitem>
		<para><uri
		  xlink:href="ftp://ftp.za.FreeBSD.org/pub/FreeBSD/CTM/">ftp://ftp.za.FreeBSD.org/pub/FreeBSD/CTM/</uri></para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>Taiwan/R.O.C.</term>

	  <listitem>
	    <itemizedlist>
	      <listitem>
		<para><uri
		  xlink:href="ftp://ctm.tw.FreeBSD.org/pub/FreeBSD/development/CTM/">ftp://ctm.tw.FreeBSD.org/pub/FreeBSD/development/CTM/</uri></para>
	      </listitem>

	      <listitem>
		<para><uri
		  xlink:href="ftp://ctm2.tw.FreeBSD.org/pub/FreeBSD/development/CTM/">ftp://ctm2.tw.FreeBSD.org/pub/FreeBSD/development/CTM/</uri></para>
	      </listitem>

	      <listitem>
		<para><uri
		  xlink:href="ftp://ctm3.tw.FreeBSD.org/pub/FreeBSD/development/CTM/">ftp://ctm3.tw.FreeBSD.org/pub/FreeBSD/development/CTM/</uri></para>
	      </listitem>
	    </itemizedlist>
	  </listitem>
	</varlistentry>
      </variablelist>

      <para>To instead receive deltas through email, subscribe to one
	of the <literal>ctm-src</literal> distribution lists available
	from <uri
	  xlink:href="http://lists.freebsd.org/mailman/listinfo">http://lists.freebsd.org/mailman/listinfo</uri>.
	For example, &a.ctm-src-cur.name; supports the head
	development branch and  &a.ctm-src-9.name; supports the 9.X
	release branch.</para>

      <para>As <application>CTM</application> updates arrive through
	email, use <command>ctm_rmail</command> to unpack and apply
	them.  This command can be run directly from an entry in
	<filename>/etc/aliases</filename> in order to automate this
	process.  Refer to &man.ctm.rmail.1; for more details.</para>

      <note>
	<para>Regardless of the method which is used to get deltas,
	  <application>CTM</application> users should subscribe
	  to the &a.ctm-announce.name; mailing list as this is the
	  only mechanism by which <application>CTM</application>
	  announcements are posted.</para>
      </note>
    </sect2>

    <sect2>
      <title><application>CTM</application> Usage</title>

      <para>Before <application>CTM</application> deltas can be used
	for the first time, a starting point must be produced.</para>

      <para>One method is to apply a <quote>starter</quote> delta to
	an empty directory.  A  starter delta can be recognized by the
	<filename>XEmpty</filename> in its name, such as
	<filename>src-cur.3210XEmpty.gz</filename>.  The designation
	following the <literal>X</literal> corresponds to the origin
	of the initial <quote>seed</quote>, where
	<filename>Empty</filename> is an empty directory.  As a rule,
	a base transition from <literal>Empty</literal> is produced
	every 100 deltas.  Be aware that starter deltas are large and
	70 to 80 Megabytes of <command>gzip</command>'d data is common
	for the <filename>XEmpty</filename> deltas.</para>

      <para>Another method is to copy or extract an initial source
	from  a RELEASE media as this can  save a significant transfer
	of data from the Internet.</para>

      <para>Once a base delta has been created, apply all deltas with
	higher numbers.  To apply the deltas:</para>

      <screen>&prompt.root; <userinput>cd /directory/to/store/the/stuff</userinput>
&prompt.root; <userinput>ctm -v -v /directory/which/stores/the/deltas/src-xxx.*</userinput></screen>

      <para>Multiple deltas can be applied with a single command as they will
	be processed one at a time and any deltas that are already
	applied will be ignored.  <application>CTM</application>
	understands
	<command>gzip</command> compressed deltas, which saves disk space.</para>

      <para>To verify a delta without applying it, include
	<option>-c</option> in the command line.  <application>CTM</application> will not
	actually modify the local tree but will instead verify the
	integrity of the delta to see if it would apply cleanly.
	Refer to &man.ctm.1; for more information about available
	options and an overview of the process
	<application>CTM</application> uses when applying
	deltas.</para>

      <para>To keep the local source tree up-to-date, every time a
	new delta becomes available, apply it through
	<application>CTM</application>.</para>

      <para>Once applied, it is recommended to not delete the deltas
	if it is a burden to download them again.  This way, a local
	copy is available in case it is needed for future disaster
	recovery.</para>
    </sect2>

    <sect2>
      <title>Keeping Local Changes</title>

      <para>Developers often experiment with and
	change files in their local source tree.
	<application>CTM</application> supports local modifications in
	a limited way: before checking for the presence of a file,
	it first looks for a file with the same name and a
	<filename>.ctm</filename> extension.  If this file exists,
	<application>CTM</application> will operate on it instead of
	the original filename.</para>

      <para>This behavior provides a simple way to maintain local
	changes.  Before modifying a file, make a copy with a
	<filename>.ctm</filename> suffix.  Make any changes to the
	original filename, knowing that
	<application>CTM</application> will only apply updates to the
	file with the <filename>.ctm</filename> suffix.</para>
    </sect2>

    <sect2>
      <title>Other <application>CTM</application> Options</title>

      <variablelist>
	<varlistentry>
	  <term>Finding Out Exactly What Would Be Touched by an
	    Update</term>

	  <listitem>
	    <para>To determine the list of changes that
	      <application>CTM</application> will make to the local
	      source repository, use <option>-l</option>.  This option
	      is useful for creating logs of the changes or when
	      performing pre- or post-processing on any of the
	      modified files.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>Making Backups Before Updating</term>

	  <listitem>
	    <para>To backup all of the files that would be changed by
	      a <application>CTM</application> update, specify
	      <option>-B <replaceable>backup-file</replaceable></option>.  This option tells
	      <application>CTM</application> to backup all files
	      touched by the applied <application>CTM</application>
	      delta to <filename>backup-file</filename>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>Restricting the Files Touched by an Update</term>

	  <listitem>
	    <para>To restrict the scope of a given
	      <application>CTM</application> update, or to extract
	      just a few files from a sequence of deltas, filtering
	      regular expressions can be specified using
	      <option>-e</option>, which specifies which files to
	      process, or <option>-x</option>, which specifies which
	      files to ignore.</para>

	    <para>For example, to extract an up-to-date copy of
	      <filename>lib/libc/Makefile</filename> from a collection
	      of saved <application>CTM</application> deltas:</para>

	    <screen>&prompt.root; <userinput>cd /directory/to/extract/to/</userinput>
&prompt.root; <userinput>ctm -e '^lib/libc/Makefile' /directory/which/stores/the/deltas/src-xxx.*</userinput></screen>

	    <para>For every file specified in a
	      <application>CTM</application> delta,
	      <option>-e</option> and <option>-x</option> are
	      applied in the order given on the command line.  A file
	      is processed by <application>CTM</application> only if
	      it is marked as eligible after all <option>-e</option>
	      and <option>-x</option> options are applied.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>
<!--
Comment out for now until these can be verified.
    <sect2>
      <title>Future Plans for <application>CTM</application></title>

      <para>Tons of them:</para>

      <itemizedlist>
	<listitem>
	  <para>Use some kind of authentication into the
	    <application>CTM</application> system, so as to allow
	    detection of spoofed <application>CTM</application>
	    updates.</para>
	</listitem>

	<listitem>
	  <para>Clean up the options to
	    <application>CTM</application>, they became confusing and
	    counter intuitive.</para>
	</listitem>
      </itemizedlist>

      <para>There is a sequence of deltas for the
	<literal>ports</literal> collection too, but interest has not
	been all that high yet.</para>
    </sect2>
    -->
  </sect1>

  <sect1 xml:id="svn">
    <title>Using <application>Subversion</application></title>

    <indexterm>
      <primary>Subversion</primary>
    </indexterm>

    <sect2 xml:id="svn-intro">
      <title>Introduction</title>

      <para>As of July 2012, &os; uses <link
	  xlink:href="http://subversion.apache.org/">Subversion</link>
	(<emphasis>svn</emphasis>) as the primary version control
	system for storing all of &os;'s source code, documentation,
	and the Ports Collection.</para>

      <note>
	<para>Subversion is generally a developer tool.  Most users
	  should use <link
	    linkend="updating-upgrading-freebsdupdate">FreeBSD
	    Update</link> to update the &os; base system, and <link
	    linkend="ports-using">Portsnap</link> to
	  update the &os; Ports Collection.</para>
      </note>

      <para>In <application>Subversion</application>, URLs are used to
	designate a repository, taking the form of
	<replaceable>protocol://hostname/path</replaceable>.  Mirrors
	may support different protocols as specified below.  The first
	component of the path is the &os; repository to access.  There
	are three different repositories, <literal>base</literal> for
	the &os; base system source code, <literal>ports</literal> for
	the Ports Collection, and <literal>doc</literal> for
	documentation.  For example, the URL
	<literal>svn://svn0.us-east.FreeBSD.org/ports/head/</literal>
	specifies the main branch of the ports repository on the
	<systemitem
	  class="fqdomainname">svn0.us-east.FreeBSD.org</systemitem>
	mirror, using the <literal>svn</literal> protocol.</para>
    </sect2>

    <sect2 xml:id="svn-install">
      <title>Installation</title>

      <para><application>Subversion</application> must be installed
	before it can be used to check out the contents of any of the
	repositories.  If a copy of the ports tree is already present,
	one can install <application>Subversion</application> like
	this:</para>

      <screen>&prompt.root; <userinput>cd /usr/ports/devel/subversion</userinput>
&prompt.root; <userinput>make install clean</userinput></screen>

      <para>If the ports tree is not available,
	<application>Subversion</application> can be installed as a
	package:</para>

      <screen>&prompt.root; <userinput>pkg_add -r subversion</userinput></screen>

      <para>If <application>pkgng</application> is being used to
	manage packages, <application>Subversion</application> can be
	installed with it instead:</para>

      <screen>&prompt.root; <userinput>pkg install devel/subversion</userinput></screen>
    </sect2>

    <sect2 xml:id="svn-usage">
      <title>Running <application>Subversion</application></title>

      <para>The <command>svn</command> command is used to fetch a
	clean copy of the sources into a local directory.  The files
	in this directory are called a <emphasis>local working
	  copy</emphasis>.</para>

      <warning>
	<para>If the local directory already exists but was not
	  created by <command>svn</command>, rename or delete it
	  before the checkout.  Checkout over an existing
	  non-<command>svn</command> directory can cause conflicts
	  between the existing files and those brought in from the
	  repository.</para>
      </warning>

      <para>A checkout from a given repository is performed with a
	command like this:</para>

      <screen>&prompt.root; <userinput>svn checkout svn-mirror/repository/branch lwcdir</userinput></screen>

      <para>where:</para>

      <itemizedlist>
	<listitem>
	  <para><replaceable>svn-mirror</replaceable> is a URL for one
	    of the <link linkend="svn-mirrors">Subversion mirror
	      sites</link>.</para>
	</listitem>

	<listitem>
	  <para><replaceable>repository</replaceable> is one of the
	    Project repositories, i.e., <literal>base</literal>,
	    <literal>ports</literal>, or
	    <literal>doc</literal>.</para>
	</listitem>

	<listitem>
	  <para><replaceable>branch</replaceable> depends on the
	    repository used.  <literal>ports</literal> and
	    <literal>doc</literal> are mostly updated in the
	    <literal>head</literal> branch, while
	    <literal>base</literal> maintains the latest version of
	    -CURRENT under <literal>head</literal> and the respective
	    latest versions of the -STABLE branches under
	    <literal>stable/8</literal> (for
	    8.<replaceable>x</replaceable>),
	    <literal>stable/9</literal>
	    (9.<replaceable>x</replaceable>) and
	    <literal>stable/10</literal>
	    (10.<replaceable>x</replaceable>).</para>
	</listitem>

	<listitem>
	  <para><replaceable>lwcdir</replaceable> is the target
	    directory where the contents of the specified branch
	    should be placed.  This is usually
	    <filename>/usr/ports</filename> for
	    <literal>ports</literal>,
	    <filename>/usr/src</filename> for
	    <literal>base</literal>, and
	    <filename>/usr/doc</filename> for
	    <literal>doc</literal>.</para>
	</listitem>
      </itemizedlist>

      <para>This example checks out the Ports Collection from the
	western US repository using the <acronym>HTTPS</acronym>
	protocol, placing the local working copy in
	<filename>/usr/ports</filename>.  If
	<filename>/usr/ports</filename> is already
	present but was not created by <command>svn</command>,
	remember to rename or delete it before the checkout.</para>

      <screen>&prompt.root; <userinput>svn checkout https://svn0.us-west.FreeBSD.org/ports/head /usr/ports</userinput></screen>

      <para>Because the initial checkout has to download the full
	branch of the remote repository, it can take a while.  Please
	be patient.</para>

      <para>After the initial checkout, the local working copy can be
	updated by running:</para>

      <screen>&prompt.root; <userinput>svn update lwcdir</userinput></screen>

      <para>To update
	<filename>/usr/ports</filename> created in
	the example above, use:</para>

      <screen>&prompt.root; <userinput>svn update /usr/ports</userinput></screen>

      <para>The update is much quicker than a checkout, only
	transferring files that have changed.</para>

      <para>An alternate way of updating the local working copy after
	checkout is provided by the <filename>Makefile</filename> in
	the <filename>/usr/ports</filename>,
	<filename>/usr/src</filename>, and
	<filename>/usr/doc</filename> directories.
	Set <varname>SVN_UPDATE</varname> and use the
	<buildtarget>update</buildtarget> target.  For example, to
	update <filename>/usr/src</filename>:</para>

      <screen>&prompt.root; <userinput>cd /usr/src</userinput>
&prompt.root; <userinput>make update SVN_UPDATE=yes</userinput></screen>
    </sect2>

    <sect2>
      <title>For More Information</title>

      <para>For other information about using
	<application>Subversion</application>, please see the
	<quote>Subversion Book</quote>, titled
	<link xlink:href="http://svnbook.red-bean.com/">Version
	  Control with Subversion</link>, or the <link
	  xlink:href="http://subversion.apache.org/docs/">Subversion
	  Documentation</link>.</para>
    </sect2>
  </sect1>

  <sect1 xml:id="svn-mirrors">
    <title><application>Subversion</application> Mirror Sites</title>

    <indexterm>
      <primary>Subversion Repository</primary>
      <secondary>Mirror Sites</secondary>
    </indexterm>

    <para>All mirrors carry all repositories.</para>

    <para>The master &os; <application>Subversion</application>
      server, <systemitem
	class="fqdomainname">svn.FreeBSD.org</systemitem>, is
      publicly accessible, read-only.  That may change in the future,
      so users are encouraged to use one of the official mirrors.  To
      view the &os; <application>Subversion</application> repositories
      through a browser, use <link
	xlink:href="http://svnweb.FreeBSD.org/">http://svnweb.FreeBSD.org/</link>.</para>

    <note>
      <para>The &os; svn mirror network is still in its early days,
	and will likely change.  Do not count on this list of mirrors
	being static.  In particular, the SSL certificates of the
	servers will likely change at some point.</para>
    </note>

    <informaltable>
      <tgroup cols="4">
	<colspec colwidth="3*"/>
	<colspec colwidth="1*"/>
	<colspec colwidth="2*"/>
	<colspec colwidth="10*"/>
	<thead>
	  <row>
	    <entry>Name</entry>

	    <entry>Protocols</entry>

	    <entry>Location</entry>

	    <entry>SSL fingerprint</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry><systemitem
	      class="fqdomainname">svn0.us-west.FreeBSD.org</systemitem></entry>

	    <entry>svn, <link
		xlink:href="http://svn0.us-west.FreeBSD.org/">http</link>,
	      <link
		xlink:href="https://svn0.us-west.FreeBSD.org/">https</link></entry>

	    <entry>USA, California</entry>

	    <entry>SHA1
	      <literal>1C:BD:85:95:11:9F:EB:75:A5:4B:C8:A3:FE:08:E4:02:73:06:1E:61</literal></entry>
	  </row>

	  <row>
	    <entry><systemitem
	      class="fqdomainname">svn0.us-east.FreeBSD.org</systemitem></entry>

	    <entry>svn, <link
		xlink:href="http://svn0.us-east.FreeBSD.org/">http</link>,
	      <link
		xlink:href="https://svn0.us-east.FreeBSD.org/">https</link>,
	      rsync</entry>

	    <entry>USA, New Jersey</entry>

	    <entry>SHA1
	      <literal>1C:BD:85:95:11:9F:EB:75:A5:4B:C8:A3:FE:08:E4:02:73:06:1E:61</literal></entry>
	  </row>

	  <row>
	    <entry><systemitem
		class="fqdomainname">svn0.eu.FreeBSD.org</systemitem></entry>

	    <entry>svn, <link
		xlink:href="http://svn0.eu.FreeBSD.org/">http</link>,
	      <link
		xlink:href="https://svn0.eu.FreeBSD.org/">https</link>,
	      rsync</entry>

	    <entry>Europe, UK</entry>

	    <entry>SHA1
	      <literal>39:B0:53:35:CE:60:C7:BB:00:54:96:96:71:10:94:BB:CE:1C:07:A7</literal></entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <para><acronym>HTTPS</acronym> is the preferred protocol,
      providing protection against another computer pretending to be
      the &os; mirror (commonly known as a <quote>man in the
	middle</quote> attack) or otherwise trying to send bad content
      to the end user.</para>

    <para>On the first connection to an <acronym>HTTPS</acronym>
      mirror, the user will be asked to verify the server
      <emphasis>fingerprint</emphasis>:</para>

    <screen>Error validating server certificate for 'https://svn0.us-west.freebsd.org:443':
 - The certificate is not issued by a trusted authority. Use the
   fingerprint to validate the certificate manually!
 - The certificate hostname does not match.
Certificate information:
 - Hostname: svnmir.ysv.FreeBSD.org
 - Valid: from Jul 29 22:01:21 2013 GMT until Dec 13 22:01:21 2040 GMT
 - Issuer: clusteradm, FreeBSD.org, (null), CA, US (clusteradm@FreeBSD.org)
 - Fingerprint: 1C:BD:85:95:11:9F:EB:75:A5:4B:C8:A3:FE:08:E4:02:73:06:1E:61
(R)eject, accept (t)emporarily or accept (p)ermanently?</screen>

    <para>Compare the fingerprint shown to those listed in the table
      above.  If the fingerprint matches, the server security
      certificate can be accepted temporarily or permanently.  A
      temporary certificate will expire after a single session with
      the server, and the verification step will be repeated on the
      next connection.  Accepting the certificate permanently will
      store the authentication credentials in
      <filename>~/.subversion/auth/</filename> and
      the user will not be asked to verify the fingerprint again until
      the certificate expires.</para>

    <para>If <acronym>HTTPS</acronym> cannot be used due to firewall
      or other problems, <literal>SVN</literal> is the next choice,
      with slightly faster transfers.  When neither can be used, use
      <acronym>HTTP</acronym>.</para>
  </sect1>

  <sect1 xml:id="cvsup">
    <title>Using CVSup (Deprecated)</title>

    <sect2 xml:id="cvsup-intro">
      <title>Introduction</title>

      <warning>
	<para>CVS and <command>cvsup</command> have been deprecated by the
	  &os; Project.
	  <link
	    xlink:href="&url.books.handbook;/svn.html">Subversion</link> should be used
	  instead.</para>
      </warning>

      <para><application>CVSup</application> is a software package for
	distributing and updating source trees from a master CVS
	repository on a remote server host.  The &os; sources are
	maintained in a CVS repository on a central development
	machine in California.  With <application>CVSup</application>,
	&os; users can easily keep their own source trees up to
	date.</para>

      <para><application>CVSup</application> uses the so-called
	<emphasis>pull</emphasis> model of updating.  Under the pull
	model, each client asks the server for updates, if and when
	they are wanted.  The server waits passively for update
	requests from its clients.  Thus all updates are instigated by
	the client.  The server never sends unsolicited updates.
	Users must either run the <application>CVSup</application>
	client manually to get an update, or they must set up a
	<command>cron</command> job to run it automatically on a
	regular basis.</para>

      <para>The term <application>CVSup</application>, capitalized
	just so, refers to the entire software package.  Its main
	components are the client <command>cvsup</command> which runs
	on each user's machine, and the server
	<command>cvsupd</command> which runs at each of the &os;
	mirror sites.</para>

      <note>
	<para>The <application>csup</application> utility is a rewrite
	  of the <application>CVSup</application> software in C.  Its
	  biggest advantage is, that it is faster and does not depend
	  on the Modula-3 language, thus you do not need to install it
	  as a requirement.  Moreover you can use it out-of-the-box,
	  since it is included in the base system.  If you decided to
	  use <application>csup</application>, just skip the steps on
	  the installation of <application>CVSup</application> and
	  substitute the references of
	  <application>CVSup</application> with
	  <application>csup</application> while following the
	  remainder of this article.</para>
      </note>
    </sect2>

    <sect2 xml:id="cvsup-install">
      <title>Installation</title>

      <para>The easiest way to install
	<application>CVSup</application> is to use the precompiled
	<package>net/cvsup</package> package from the &os; <link
	  linkend="ports">packages collection</link>. If you
	prefer to build <application>CVSup</application> from source,
	you can use the <package>net/cvsup</package> port instead.
	But be forewarned: the <package>net/cvsup</package> port
	depends on the Modula-3 system, which takes a substantial
	amount of time and disk space to download and build.</para>

      <note>
	<para>If you are going to be using
	  <application>CVSup</application> on a machine which will not
	  have <application>&xorg;</application> installed, such as a
	  server, be sure to use the port which does not include the
	  <application>CVSup</application> <acronym>GUI</acronym>,
	  <package>net/cvsup-without-gui</package>.</para>
      </note>
    </sect2>

    <sect2 xml:id="cvsup-config">
      <title>CVSup Configuration</title>

      <para><application>CVSup</application>'s operation is controlled
	by a configuration file called the
	<filename>supfile</filename>.  There are some sample
	<filename>supfiles</filename> in the directory <link
	  xlink:href="file://localhost/usr/share/examples/cvsup/"><filename>/usr/share/examples/cvsup/</filename></link>.</para>

      <para>The information in a <filename>supfile</filename> answers
	the following questions for
	<application>CVSup</application>:</para>

      <itemizedlist>
	<listitem>
	  <para><link linkend="cvsup-config-files">Which files do you
	      want to receive?</link></para>
	</listitem>

	<listitem>
	  <para><link linkend="cvsup-config-vers">Which versions of
	      them do you want?</link></para>
	</listitem>

	<listitem>
	  <para><link linkend="cvsup-config-where">Where do you want
	      to get them from?</link></para>
	</listitem>

	<listitem>
	  <para><link linkend="cvsup-config-dest">Where do you want to
	      put them on your own machine?</link></para>
	</listitem>

	<listitem>
	  <para><link linkend="cvsup-config-status">Where do you want
	      to put your status files?</link></para>
	</listitem>
      </itemizedlist>

      <para>In the following sections, we will construct a typical
	<filename>supfile</filename> by answering each of these
	questions in turn.  First, we describe the overall structure
	of a <filename>supfile</filename>.</para>

      <para>A <filename>supfile</filename> is a text file.  Comments
	begin with <literal>#</literal> and extend to the end of the
	line.  Lines that are blank and lines that contain only
	comments are ignored.</para>

      <para>Each remaining line describes a set of files that the user
	wishes to receive.  The line begins with the name of a
	<quote>collection</quote>, a logical grouping of files defined
	by the server.  The name of the collection tells the server
	which files you want.  After the collection name come zero or
	more fields, separated by white space.  These fields answer
	the questions listed above.  There are two types of fields:
	flag fields and value fields.  A flag field consists of a
	keyword standing alone, e.g., <literal>delete</literal> or
	<literal>compress</literal>.  A value field also begins with a
	keyword, but the keyword is followed without intervening white
	space by <literal>=</literal> and a second word.  For example,
	<literal>release=cvs</literal> is a value field.</para>

      <para>A <filename>supfile</filename> typically specifies more
	than one collection to receive.  One way to structure a
	<filename>supfile</filename> is to specify all of the relevant
	fields explicitly for each collection.  However, that tends to
	make the <filename>supfile</filename> lines quite long, and it
	is inconvenient because most fields are the same for all of
	the collections in a <filename>supfile</filename>.
	<application>CVSup</application> provides a defaulting
	mechanism to avoid these problems.  Lines beginning with the
	special pseudo-collection name <literal>*default</literal> can
	be used to set flags and values which will be used as defaults
	for the subsequent collections in the
	<filename>supfile</filename>.  A default value can be
	overridden for an individual collection, by specifying a
	different value with the collection itself.  Defaults can also
	be changed or augmented in mid-supfile by additional
	<literal>*default</literal> lines.</para>

      <para>With this background, we will now proceed to construct a
	<filename>supfile</filename> for receiving and updating the
	main source tree of
	<link linkend="current">&os;-CURRENT</link>.</para>

      <itemizedlist>
	<listitem>
	  <para><anchor xml:id="cvsup-config-files"/>Which files do
	    you want to receive?</para>

	  <para>The files available via
	    <application>CVSup</application> are organized into named
	    groups called <quote>collections</quote>.  The collections
	    that are available are described in the
	    <link linkend="cvsup-collec">following section</link>.  In
	    this example, we wish to receive the entire main source
	    tree for the &os; system.  There is a single large
	    collection <literal>src-all</literal> which will give us
	    all of that.  As a first step toward constructing our
	    <filename>supfile</filename>, we simply list the
	    collections, one per line (in this case, only one
	    line):</para>

	  <programlisting>src-all</programlisting>
	</listitem>

	<listitem>
	  <para><anchor xml:id="cvsup-config-vers"/>Which version(s)
	    of them do you want?</para>

	  <para>With <application>CVSup</application>, you can receive
	    virtually any version of the sources that ever existed.
	    That is possible because the
	    <application>cvsupd</application> server works directly
	    from the CVS repository, which contains all of the
	    versions.  You specify which one of them you want using
	    the <literal>tag=</literal> and <option>date=</option>
	    value fields.</para>

	  <warning>
	    <para>Be very careful to specify any
	      <literal>tag=</literal> fields correctly.  Some tags are
	      valid only for certain collections of files.  If you
	      specify an incorrect or misspelled tag,
	      <application>CVSup</application> will delete files which
	      you probably do not want deleted.  In particular, use
	      <emphasis>only </emphasis> <literal>tag=.</literal> for
	      the <literal>ports-*</literal> collections.</para>
	  </warning>

	  <para>The <literal>tag=</literal> field names a symbolic tag
	    in the repository.  There are two kinds of tags, revision
	    tags and branch tags.  A revision tag refers to a specific
	    revision.  Its meaning stays the same from day to day.  A
	    branch tag, on the other hand, refers to the latest
	    revision on a given line of development, at any given
	    time.  Because a branch tag does not refer to a specific
	    revision, it may mean something different tomorrow than it
	    means today.</para>

	  <para><xref linkend="cvs-tags"/> contains branch tags that
	    users might be interested in.  When specifying a tag in
	    <application>CVSup</application>'s configuration file, it
	    must be preceded with <literal>tag=</literal>
	    (<literal>RELENG_8</literal> will become
	    <literal>tag=RELENG_8</literal>).
	    Keep in mind that only the <literal>tag=.</literal> is
	    relevant for the Ports Collection.</para>

	  <warning>
	    <para>Be very careful to type the tag name exactly as
	      shown.  <application>CVSup</application> cannot
	      distinguish between valid and invalid tags.  If you
	      misspell the tag, <application>CVSup</application> will
	      behave as though you had specified a valid tag which
	      happens to refer to no files at all.  It will delete
	      your existing sources in that case.</para>
	  </warning>

	  <para>When you specify a branch tag, you normally receive
	    the latest versions of the files on that line of
	    development.  If you wish to receive some past version,
	    you can do so by specifying a date with the
	    <option>date=</option> value field.  The &man.cvsup.1;
	    manual page explains how to do that.</para>

	  <para>For our example, we wish to receive &os;-CURRENT.  We
	    add this line at the beginning of our
	    <filename>supfile</filename>:</para>

	  <programlisting>*default tag=.</programlisting>

	  <para>There is an important special case that comes into
	    play if you specify neither a <literal>tag=</literal>
	    field nor a <literal>date=</literal> field.  In that case,
	    you receive the actual RCS files directly from the
	    server's CVS repository, rather than receiving a
	    particular version.  Developers generally prefer this mode
	    of operation.  By maintaining a copy of the repository
	    itself on their systems, they gain the ability to browse
	    the revision histories and examine past versions of files.
	    This gain is achieved at a large cost in terms of disk
	    space, however.</para>
	</listitem>

	<listitem>
	  <para><anchor xml:id="cvsup-config-where"/>Where do you want
	    to get them from?</para>

	  <para>We use the <literal>host=</literal> field to tell
	    <command>cvsup</command> where to obtain its updates.  Any
	    of the <link
	      linkend="cvsup-mirrors">CVSup mirror sites</link> will
	    do, though you should try to select one that is close to
	    you in cyberspace.  In this example we will use a
	    fictional &os; distribution site, <systemitem
	      class="fqdomainname">cvsup99.FreeBSD.org</systemitem>:</para>

	  <programlisting>*default host=cvsup99.FreeBSD.org</programlisting>

	  <para>You will need to change the host to one that actually
	    exists before running <application>CVSup</application>.
	    On any particular run of <command>cvsup</command>, you can
	    override the host setting on the command line, with
	    <option>-h
	      <replaceable>hostname</replaceable></option>.</para>
	</listitem>

	<listitem>
	  <para><anchor xml:id="cvsup-config-dest"/>Where do you want
	    to put them on your own machine?</para>

	  <para>The <literal>prefix=</literal> field tells
	    <command>cvsup</command> where to put the files it
	    receives.  In this example, we will put the source files
	    directly into our main source tree,
	    <filename>/usr/src</filename>.  The
	    <filename>src</filename> directory is already implicit in
	    the collections we have chosen to receive, so this is the
	    correct specification:</para>

	  <programlisting>*default prefix=/usr</programlisting>
	</listitem>

	<listitem>
	  <para><anchor xml:id="cvsup-config-status"/>Where should
	    <command>cvsup</command> maintain its status files?</para>

	  <para>The <application>CVSup</application> client maintains
	    certain status files in what is called the
	    <quote>base</quote> directory.  These files help
	    <application>CVSup</application> to work more efficiently,
	    by keeping track of which updates you have already
	    received.  We will use the standard base directory,
	    <filename>/var/db</filename>:</para>

	  <programlisting>*default base=/var/db</programlisting>

	  <para>If your base directory does not already exist, now
	    would be a good time to create it.  The
	    <command>cvsup</command> client will refuse to run if the
	    base directory does not exist.</para>
	</listitem>

	<listitem>
	  <para>Miscellaneous <filename>supfile</filename>
	    settings:</para>

	  <para>There is one more line of boiler plate that normally
	    needs to be present in the
	    <filename>supfile</filename>:</para>

	  <programlisting>*default release=cvs delete use-rel-suffix compress</programlisting>

	  <para><literal>release=cvs</literal> indicates that the
	    server should get its information out of the main &os; CVS
	    repository.  This is virtually always the case, but there
	    are other possibilities which are beyond the scope of this
	    discussion.</para>

	  <para><literal>delete</literal> gives
	    <application>CVSup</application> permission to delete
	    files.  You should always specify this, so that
	    <application>CVSup</application> can keep your source tree
	    fully up-to-date.  <application>CVSup</application> is
	    careful to delete only those files for which it is
	    responsible.  Any extra files you happen to have will be
	    left strictly alone.</para>

	  <para><literal>use-rel-suffix</literal> is ... arcane.  If
	    you really want to know about it, see the &man.cvsup.1;
	    manual page.  Otherwise, just specify it and do not worry
	    about it.</para>

	  <para><literal>compress</literal> enables the use of
	    gzip-style compression on the communication channel.  If
	    your network link is T1 speed or faster, you probably
	    should not use compression.  Otherwise, it helps
	    substantially.</para>
	</listitem>

	<listitem>
	  <para>Putting it all together:</para>

	  <para>Here is the entire <filename>supfile</filename> for
	    our example:</para>

	  <programlisting>*default tag=.
*default host=cvsup99.FreeBSD.org
*default prefix=/usr
*default base=/var/db
*default release=cvs delete use-rel-suffix compress

src-all</programlisting>
	</listitem>
      </itemizedlist>

      <sect3 xml:id="cvsup-refuse-file">
	<title>The <filename>refuse</filename> File</title>

	<para>As mentioned above, <application>CVSup</application>
	  uses a <emphasis>pull method</emphasis>.  Basically, this
	  means that you connect to the
	  <application>CVSup</application> server, and it says,
	  <quote>Here is what you can download from me...</quote>, and
	  your client responds
	  <quote>OK, I will take this, this, this, and this.</quote>
	  In the default configuration, the
	  <application>CVSup</application> client will take every file
	  associated with the collection and tag you chose in the
	  configuration file.  In order to download a partial tree,
	  use the <filename>refuse</filename> file.</para>

	<para>The <filename>refuse</filename> file tells
	  <application>CVSup</application> that it should not take
	  every single file from a collection; in other words, it
	  tells the client to <emphasis>refuse</emphasis> certain
	  files from the server.  The <filename>refuse</filename> file
	  can be found (or, if you do not yet have one, should be
	  placed) in
	  <filename>base/sup/</filename>.
	  <replaceable>base</replaceable> is defined in your
	  <filename>supfile</filename>; our defined
	  <replaceable>base</replaceable> is
	  <filename>/var/db</filename>, which means that by default
	  the <filename>refuse</filename> file is
	  <filename>/var/db/sup/refuse</filename>.</para>

	<para>The <filename>refuse</filename> file has a very simple
	  format; it simply contains the names of files or directories
	  that you do not wish to download.  For example:</para>

	<programlisting>bin/
usr.bin/</programlisting>

	<para>Users who are on
	  slow links or pay by the minute for their Internet
	  connection will be able to save time as they will
	  no longer need to download files that they will never use.
	  For more information on <filename>refuse</filename> files
	  and other neat features of <application>CVSup</application>,
	  please view its manual page.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Running <application>CVSup</application></title>

      <para>You are now ready to try an update.  The command line for
	doing this is quite simple:</para>

      <screen>&prompt.root; <userinput>cvsup supfile</userinput></screen>

      <para>where
	<filename>supfile</filename> is of
	course the name of the <filename>supfile</filename> you have
	just created.  Assuming you are running under X11,
	<command>cvsup</command> will display a GUI window with some
	buttons to do the usual things.  Press the
	<guibutton>go</guibutton> button, and watch it run.</para>

      <para>Since you are updating your actual
	<filename>/usr/src</filename> tree in this example, you will
	need to run the program as <systemitem
	  class="username">root</systemitem> so that
	<command>cvsup</command> has the permissions it needs to
	update your files.  Having just created your configuration
	file, and having never used this program before, that might
	understandably make you nervous.  There is an easy way to do a
	trial run without touching your precious files.  Just create
	an empty directory somewhere convenient, and name it as an
	extra argument on the command line:</para>

      <screen>&prompt.root; <userinput>mkdir /var/tmp/dest</userinput>
&prompt.root; <userinput>cvsup supfile /var/tmp/dest</userinput></screen>

      <para>The directory you specify will be used as the destination
	directory for all file updates.
	<application>CVSup</application> will examine your usual files
	in <filename>/usr/src</filename>, but it will not modify or
	delete any of them.  Any file updates will instead land in
	<filename>/var/tmp/dest/usr/src</filename>.
	<application>CVSup</application> will also leave its base
	directory status files untouched when run this way.  The new
	versions of those files will be written into the specified
	directory.  As long as you have read access to
	<filename>/usr/src</filename>, you do not even need to be
	<systemitem class="username">root</systemitem> to perform this
	kind of trial run.</para>

      <para>If you are not running X11 or if you just do not like
	GUIs, you should add a couple of options to the command line
	when you run <command>cvsup</command>:</para>

      <screen>&prompt.root; <userinput>cvsup -g -L 2 supfile</userinput></screen>

      <para>The <option>-g</option> tells
	<application>CVSup</application> not to use its GUI.  This is
	automatic if you are not running X11, but otherwise you have
	to specify it.</para>

      <para>The <option>-L 2</option> tells
	<application>CVSup</application> to print out the
	details of all the file updates it is doing.  There are three
	levels of verbosity, from <option>-L 0</option> to
	<option>-L 2</option>.  The default is 0, which means total
	silence except for error messages.</para>

      <para>There are plenty of other options available.  For a brief
	list of them, type <command>cvsup -H</command>.  For more
	detailed descriptions, see the manual page.</para>

      <para>Once you are satisfied with the way updates are working,
	you can arrange for regular runs of
	<application>CVSup</application> using &man.cron.8;.
	Obviously, you should not let <application>CVSup</application>
	use its GUI when running it from &man.cron.8;.</para>
    </sect2>

    <sect2 xml:id="cvsup-collec">
      <title><application>CVSup</application> File Collections</title>

      <para>The file collections available via
	<application>CVSup</application> are organized hierarchically.
	There are a few large collections, and they are divided into
	smaller sub-collections.  Receiving a large collection is
	equivalent to receiving each of its sub-collections.  The
	hierarchical relationships among collections are reflected by
	the use of indentation in the list below.</para>

      <para>The most commonly used collection is
	<literal>src-all</literal>. </para>

      <variablelist>
	<varlistentry>
	  <term><literal>cvs-all release=cvs</literal></term>

	  <listitem>
	    <para>The main &os; CVS repository, including the
	      cryptography code.</para>

	    <variablelist>
	      <varlistentry>
		<term><literal>distrib release=cvs</literal></term>

		<listitem>
		  <para>Files related to the distribution and
		    mirroring of &os;.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>
		  <literal>projects-all release=cvs</literal>
		</term>

		<listitem>
		  <para>Sources for the &os; projects
		    repository.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term><literal>src-all release=cvs</literal></term>

		<listitem>
		  <para>The main &os; sources, including the
		    cryptography code.</para>

		  <variablelist>
		    <varlistentry>
		      <term><literal>src-base
			  release=cvs</literal></term>

		      <listitem>
			<para>Miscellaneous files at the top of
			  <filename>/usr/src</filename>.</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-bin
			  release=cvs</literal></term>

		      <listitem>
			<para>User utilities that may be needed in
			  single-user mode
			  (<filename>/usr/src/bin</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-cddl
			  release=cvs</literal></term>

		      <listitem>
			<para>Utilities and libraries covered by the
			  CDDL license
			  (<filename>/usr/src/cddl</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-contrib
			  release=cvs</literal></term>

		      <listitem>
			<para>Utilities and libraries from outside the
			  &os; project, used relatively unmodified
			  (<filename>/usr/src/contrib</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>
			<literal>src-crypto release=cvs</literal>
		      </term>

		      <listitem>
			<para>Cryptography utilities and libraries
			  from outside the &os; project, used
			  relatively unmodified

			  (<filename>/usr/src/crypto</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>
			<literal>src-eBones release=cvs</literal>
		      </term>

		      <listitem>
			<para>Kerberos and DES
			  (<filename>/usr/src/eBones</filename>).  Not
			  used in current releases of &os;.</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-etc
			  release=cvs</literal></term>

		      <listitem>
			<para>System configuration files
			  (<filename>/usr/src/etc</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-games
			  release=cvs</literal></term>

		      <listitem>
			<para>Games
			  (<filename>/usr/src/games</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-gnu
			  release=cvs</literal></term>

		      <listitem>
			<para>Utilities covered by the GNU Public
			  License
			  (<filename>/usr/src/gnu</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-include
			  release=cvs</literal></term>

		      <listitem>
			<para>Header files
			  (<filename>/usr/src/include</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-kerberos5
			  release=cvs</literal></term>

		      <listitem>
			<para>Kerberos5 security package
			  (<filename>/usr/src/kerberos5</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-kerberosIV
			  release=cvs</literal></term>

		      <listitem>
			<para>KerberosIV security package
			  (<filename>/usr/src/kerberosIV</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-lib
			  release=cvs</literal></term>

		      <listitem>
			<para>Libraries
			  (<filename>/usr/src/lib</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-libexec
			  release=cvs</literal></term>

		      <listitem>
			<para>System programs normally executed by
			  other programs
			  (<filename>/usr/src/libexec</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-release
			  release=cvs</literal></term>

		      <listitem>
			<para>Files required to produce a &os;
			  release
			  (<filename>/usr/src/release</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-rescue
			  release=cvs</literal></term>

		      <listitem>
			<para>Statically linked programs for emergency
			  recovery; see &man.rescue.8;
			  (<filename>/usr/src/rescue</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>
			<literal>src-sbin release=cvs</literal>
		      </term>

		      <listitem>
			<para>System utilities for single-user mode
			  (<filename>/usr/src/sbin</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-secure
			  release=cvs</literal></term>

		      <listitem>
			<para>Cryptographic libraries and commands
			  (<filename>/usr/src/secure</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-share
			  release=cvs</literal></term>

		      <listitem>
			<para>Files that can be shared across multiple
			  systems
			  (<filename>/usr/src/share</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-sys
			  release=cvs</literal></term>

		      <listitem>
			<para>The kernel
			  (<filename>/usr/src/sys</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-sys-crypto
			release=cvs</literal></term>

		      <listitem>
			<para>Kernel cryptography code
			  (<filename>/usr/src/sys/crypto</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-tools
			  release=cvs</literal></term>

		      <listitem>
			<para>Various tools for the maintenance of
			  &os;
			  (<filename>/usr/src/tools</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-usrbin
			  release=cvs</literal></term>

		      <listitem>
			<para>User utilities
			  (<filename>/usr/src/usr.bin</filename>).</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term><literal>src-usrsbin
			  release=cvs</literal></term>

		      <listitem>
			<para>System utilities
			  (<filename>/usr/src/usr.sbin</filename>).</para>
		      </listitem>
		    </varlistentry>
		  </variablelist>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><literal>distrib release=self</literal></term>

	  <listitem>
	    <para>The <application>CVSup</application> server's own
	      configuration files.  Used by
	      <application>CVSup</application> mirror sites.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><literal>gnats release=current</literal></term>

	  <listitem>
	    <para>The GNATS bug-tracking database.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><literal>mail-archive release=current</literal></term>

	  <listitem>
	    <para>&os; mailing list archive.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>

    <sect2>
      <title>For More Information</title>

      <para>For the <application>CVSup</application> FAQ and other
	information about <application>CVSup</application>, see
	<link xlink:href="http://www.cvsup.org">The
	  CVSup Home Page</link>.</para>

      <para>Most &os;-related discussion of
	<application>CVSup</application> takes place on the
	&a.hackers;.  New versions of the software are announced
	there, as well as on the &a.announce;.</para>

      <para>For questions or bug reports about
	<application>CVSup</application> take a look at the
	<link xlink:href="http://www.cvsup.org/faq.html#bugreports">
	  CVSup FAQ</link>.</para>
    </sect2>

    <sect2 xml:id="cvsup-mirrors">
      <title>CVSup Sites</title>

      <para><link linkend="cvsup">CVSup</link> servers for &os; are
	running at the following sites:</para>

      &chap.mirrors.cvsup.index.inc;

      &chap.mirrors.lastmod.inc;

      &chap.mirrors.cvsup.inc;

    </sect2>
  </sect1>

  <sect1 xml:id="cvs-tags">
    <title>CVS Tags</title>

    <warning>
      <para>CVS has been deprecated by the project, and its use is not
	recommended.  <application>Subversion</application> should be
	used instead.</para>
    </warning>

    <para>When obtaining or updating sources using
      <application>cvs</application> or
      <application>CVSup</application>, a revision tag must be
      specified.  A revision tag refers to either a particular line of
      &os; development, or a specific point in time.  The first type
      are called <quote>branch tags</quote>, and the second type are
      called <quote>release tags</quote>.</para>

    <sect2>
      <title>Branch Tags</title>

      <para>All of these, with the exception of
	<literal>HEAD</literal> (which is always a valid tag), only
	apply to the <filename>src/</filename> tree.  The
	<filename>ports/</filename>, <filename>doc/</filename>, and
	<filename>www/</filename> trees are not branched.</para>

      <variablelist>
	<varlistentry>
	  <term>HEAD</term>

	  <listitem>
	    <para>Symbolic name for the main line, or &os;-CURRENT.
	      Also the default when no revision is specified.</para>

	    <para>In <application>CVSup</application>, this tag is
	      represented by a <literal>.</literal> (not punctuation,
	      but a literal <literal>.</literal> character).</para>

	    <note>
	      <para>In CVS, this is the default when no revision tag
		is specified.  It is usually <emphasis>not</emphasis>
		a good idea to checkout or update to CURRENT sources
		on a STABLE machine, unless that is your
		intent.</para>
	    </note>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_9</term>

	  <listitem>
	    <para>The line of development for &os;-9.X, also known
	      as &os; 9-STABLE</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_9_1</term>

	  <listitem>
	    <para>The release branch for &os;-9.1, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_9_0</term>

	  <listitem>
	    <para>The release branch for &os;-9.0, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8</term>

	  <listitem>
	    <para>The line of development for &os;-8.X, also known
	      as &os; 8-STABLE</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_3</term>

	  <listitem>
	    <para>The release branch for &os;-8.3, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_2</term>

	  <listitem>
	    <para>The release branch for &os;-8.2, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_1</term>

	  <listitem>
	    <para>The release branch for &os;-8.1, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_0</term>

	  <listitem>
	    <para>The release branch for &os;-8.0, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7</term>

	  <listitem>
	    <para>The line of development for &os;-7.X, also known
	      as &os; 7-STABLE</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_4</term>

	  <listitem>
	    <para>The release branch for &os;-7.4, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_3</term>

	  <listitem>
	    <para>The release branch for &os;-7.3, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_2</term>

	  <listitem>
	    <para>The release branch for &os;-7.2, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_1</term>

	  <listitem>
	    <para>The release branch for &os;-7.1, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_0</term>

	  <listitem>
	    <para>The release branch for &os;-7.0, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6</term>

	  <listitem>
	    <para>The line of development for &os;-6.X, also known
	      as &os; 6-STABLE</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_4</term>

	  <listitem>
	    <para>The release branch for &os;-6.4, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_3</term>

	  <listitem>
	    <para>The release branch for &os;-6.3, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_2</term>

	  <listitem>
	    <para>The release branch for &os;-6.2, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_1</term>

	  <listitem>
	    <para>The release branch for &os;-6.1, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_0</term>

	  <listitem>
	    <para>The release branch for &os;-6.0, used only for
	      security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5</term>

	  <listitem>
	    <para>The line of development for &os;-5.X, also known
	      as &os; 5-STABLE.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_5</term>

	  <listitem>
	    <para>The release branch for &os;-5.5, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_4</term>

	  <listitem>
	    <para>The release branch for &os;-5.4, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_3</term>

	  <listitem>
	    <para>The release branch for &os;-5.3, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_2</term>

	  <listitem>
	    <para>The release branch for &os;-5.2 and
	      &os;-5.2.1, used only for security advisories and other
	      critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_1</term>

	  <listitem>
	    <para>The release branch for &os;-5.1, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_0</term>

	  <listitem>
	    <para>The release branch for &os;-5.0, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4</term>

	  <listitem>
	    <para>The line of development for &os;-4.X, also known
	      as &os; 4-STABLE.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_11</term>

	  <listitem>
	    <para>The release branch for &os;-4.11, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_10</term>

	  <listitem>
	    <para>The release branch for &os;-4.10, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_9</term>

	  <listitem>
	    <para>The release branch for &os;-4.9, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_8</term>

	  <listitem>
	    <para>The release branch for &os;-4.8, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_7</term>

	  <listitem>
	    <para>The release branch for &os;-4.7, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_6</term>

	  <listitem>
	    <para>The release branch for &os;-4.6 and &os;-4.6.2,
	      used only for security advisories and other
	      critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_5</term>

	  <listitem>
	    <para>The release branch for &os;-4.5, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_4</term>

	  <listitem>
	    <para>The release branch for &os;-4.4, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_3</term>

	  <listitem>
	    <para>The release branch for &os;-4.3, used only
	      for security advisories and other critical fixes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3</term>

	  <listitem>
	    <para>The line of development for &os;-3.X, also known
	      as 3.X-STABLE.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2</term>

	  <listitem>
	    <para>The line of development for &os;-2.2.X, also known
	      as 2.2-STABLE.  This branch is mostly obsolete.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>

    <sect2>
      <title>Release Tags</title>

      <para>These tags refer to a specific point in time when a
	particular version of &os; was released.  The release
	engineering process is documented in more detail by the
	<link xlink:href="&url.base;/releng/">Release Engineering
	  Information</link> and <link
	  xlink:href="&url.articles.releng;/release-proc.html">Release
	  Process</link> documents.  The
	<filename>src</filename> tree uses tag names
	that start with <literal>RELENG_</literal> tags.  The
	<filename>ports</filename> and <filename>doc</filename> trees
	use tags whose names begin with <literal>RELEASE</literal>
	tags.  Finally, the <filename>www</filename> tree is not
	tagged with any special name for releases.</para>

      <variablelist>
	<varlistentry>
	  <term>RELENG_9_2_0_RELEASE</term>

	  <listitem>
	    <para>&os; 9.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_9_1_0_RELEASE</term>

	  <listitem>
	    <para>&os; 9.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_9_0_0_RELEASE</term>

	  <listitem>
	    <para>&os; 9.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_3_0_RELEASE</term>

	  <listitem>
	    <para>&os; 8.3</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_2_0_RELEASE</term>

	  <listitem>
	    <para>&os; 8.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_1_0_RELEASE</term>

	  <listitem>
	    <para>&os; 8.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_8_0_0_RELEASE</term>

	  <listitem>
	    <para>&os; 8.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_4_0_RELEASE</term>

	  <listitem>
	    <para>&os; 7.4</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_3_0_RELEASE</term>

	  <listitem>
	    <para>&os; 7.3</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_2_0_RELEASE</term>

	  <listitem>
	    <para>&os; 7.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_1_0_RELEASE</term>

	  <listitem>
	    <para>&os; 7.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_7_0_0_RELEASE</term>

	  <listitem>
	    <para>&os; 7.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_4_0_RELEASE</term>

	  <listitem>
	    <para>&os; 6.4</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_3_0_RELEASE</term>

	  <listitem>
	    <para>&os; 6.3</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_2_0_RELEASE</term>

	  <listitem>
	    <para>&os; 6.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_1_0_RELEASE</term>

	  <listitem>
	    <para>&os; 6.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_6_0_0_RELEASE</term>

	  <listitem>
	    <para>&os; 6.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_5_0_RELEASE</term>

	  <listitem>
	    <para>&os; 5.5</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_4_0_RELEASE</term>

	  <listitem>
	    <para>&os; 5.4</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_11_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.11</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_3_0_RELEASE</term>

	  <listitem>
	    <para>&os; 5.3</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_10_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.10</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_2_1_RELEASE</term>

	  <listitem>
	    <para>&os; 5.2.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_2_0_RELEASE</term>

	  <listitem>
	    <para>&os; 5.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_9_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.9</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_1_0_RELEASE</term>

	  <listitem>
	    <para>&os; 5.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_8_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.8</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_5_0_0_RELEASE</term>

	  <listitem>
	    <para>&os; 5.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_7_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.7</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_6_2_RELEASE</term>

	  <listitem>
	    <para>&os; 4.6.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_6_1_RELEASE</term>

	  <listitem>
	    <para>&os; 4.6.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_6_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.6</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_5_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.5</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_4_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.4</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_3_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.3</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_2_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_1_1_RELEASE</term>

	  <listitem>
	    <para>&os; 4.1.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_1_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_4_0_0_RELEASE</term>

	  <listitem>
	    <para>&os; 4.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3_5_0_RELEASE</term>

	  <listitem>
	    <para>&os;-3.5</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3_4_0_RELEASE</term>

	  <listitem>
	    <para>&os;-3.4</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3_3_0_RELEASE</term>

	  <listitem>
	    <para>&os;-3.3</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3_2_0_RELEASE</term>

	  <listitem>
	    <para>&os;-3.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3_1_0_RELEASE</term>

	  <listitem>
	    <para>&os;-3.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_3_0_0_RELEASE</term>

	  <listitem>
	    <para>&os;-3.0</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_8_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.8</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_7_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.7</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_6_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.6</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_5_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.5</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_2_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.2</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_1_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.1</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>RELENG_2_2_0_RELEASE</term>

	  <listitem>
	    <para>&os;-2.2.0</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>
  </sect1>

  <sect1 xml:id="mirrors-rsync">
    <title><application>rsync</application> Sites</title>

    <para>The following sites make &os; available through the rsync
      protocol.  The <application>rsync</application> utility works in
      much the same way as the &man.rcp.1; command,
      but has more options and uses the rsync remote-update protocol
      which transfers only the differences between two sets of files,
      thus greatly speeding up the synchronization over the network.
      This is most useful if you are a mirror site for the
      &os; <acronym>FTP</acronym> server, or the CVS repository.  The
      <application>rsync</application> suite is available for many
      operating systems, on &os;, see the
      <package>net/rsync</package>
      port or use the package.</para>

    <variablelist>
      <varlistentry>
	<term>Czech Republic</term>

	<listitem>
	  <para>rsync://ftp.cz.FreeBSD.org/</para>

	  <para>Available collections:</para>
	  <itemizedlist>
	    <listitem>
	      <para>ftp: A partial mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>

	    <listitem>
	      <para>&os;: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Netherlands</term>

	<listitem>
	  <para>rsync://ftp.nl.FreeBSD.org/</para>

	  <para>Available collections:</para>
	  <itemizedlist>
	    <listitem>
	      <para>&os;: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Russia</term>

	<listitem>
	  <para>rsync://ftp.mtu.ru/</para>

	  <para>Available collections:</para>

	  <itemizedlist>
	    <listitem>
	      <para>&os;: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>

	    <listitem>
	      <para>&os;-gnats: The GNATS bug-tracking
		database.</para>
	    </listitem>

	    <listitem>
	      <para>&os;-Archive: The mirror of &os; Archive
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Sweden</term>

	<listitem>
	  <para>rsync://ftp4.se.freebsd.org/</para>

	  <para>Available collections:</para>
	  <itemizedlist>
	    <listitem>
	      <para>&os;: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Taiwan</term>

	<listitem>
	  <para>rsync://ftp.tw.FreeBSD.org/</para>

	  <para>rsync://ftp2.tw.FreeBSD.org/</para>

	  <para>rsync://ftp6.tw.FreeBSD.org/</para>

	  <para>Available collections:</para>
	  <itemizedlist>
	    <listitem>
	      <para>&os;: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>United Kingdom</term>

	<listitem>
	  <para>rsync://rsync.mirrorservice.org/</para>

	  <para>Available collections:</para>
	  <itemizedlist>
	    <listitem>
	      <para>ftp.freebsd.org: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>United States of America</term>

	<listitem>
	  <para>rsync://ftp-master.FreeBSD.org/</para>

	  <para>This server may only be used by &os; primary mirror
	    sites.</para>
	  <para>Available collections:</para>
	  <itemizedlist>
	    <listitem>
	      <para>&os;: The master archive of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>

	    <listitem>
	      <para>acl: The &os; master ACL list.</para>
	    </listitem>
	  </itemizedlist>

	  <para>rsync://ftp13.FreeBSD.org/</para>

	  <para>Available collections:</para>

	  <itemizedlist>
	    <listitem>
	      <para>&os;: A full mirror of the &os;
		<acronym>FTP</acronym> server.</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>
</appendix>
