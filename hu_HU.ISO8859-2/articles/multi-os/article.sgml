<?xml version="1.0" encoding="ISO8859-2" standalone="no"?>
<!DOCTYPE article PUBLIC "-//FreeBSD//DTD DocBook XML V4.2-Based Extension//EN"
	"../../../share/sgml/freebsd42.dtd" [
<!ENTITY % entities PUBLIC "-//FreeBSD//ENTITIES DocBook FreeBSD Entity Set//HU" "../../share/sgml/entities.ent">
%entities;
]>

<!-- The FreeBSD Hungarian Documentation Project
     Translated by: PALI, Gabor <pgj@FreeBSD.org>
     %SOURCE%	en_US.ISO8859-1/articles/multi-os/article.sgml
     %SRCID%	1.39
-->

<article lang="hu">
  <articleinfo>
    <title>A &os; telepítése és használata
      más operációs rendszerekkel együtt</title>

    <authorgroup>
      <author>
	<firstname>Jay</firstname>
	<surname>Richmond</surname>
	<affiliation>
	  <address>
	    <email>jayrich@sysc.com</email>
	  </address>
	</affiliation>
      </author>
    </authorgroup>

    <pubdate>1996. augusztus 6.</pubdate>

    <legalnotice id="trademarks" role="trademarks">
      &tm-attrib.freebsd;
      &tm-attrib.ibm;
      &tm-attrib.linux;
      &tm-attrib.microsoft;
      &tm-attrib.powerquest;
      &tm-attrib.general;
    </legalnotice>

    <releaseinfo>$FreeBSD$</releaseinfo>

    <abstract>
      <para>Ez a leírás azt tárgyalja, miképpen
	lehet a &os;-t olyan más népszerû
	operációs rendszerek, mint mondjuk a &linux; &ms-dos;,
	&os2; és &windows;&nbsp;95 mellé telepíteni
	és használni.  Külön köszönet:
	Annelise Anderson <email>andrsn@stanford.edu</email>,
	Randall Hopper <email>rhh@ct.picker.com</email> és
	&a.jkh;.</para>

      <para><emphasis>Fordította: Páli Gábor,
	utolsó ellenõrzés:
	2010.11.28.</emphasis></para>
    </abstract>
  </articleinfo>

  <sect1>
    <title>Áttekintés</title>

    <para>A legtöbben nem tudják az említett
      operációs rendszereket kényelmesen egymás
      mellé rakni egy kisebb méretû merevlemezen,
      ezért a nagyobb EIDE-meghajtókkal kapcsolatos
      ismeretekrõl is szó fog esni.  Mivel rengeteg
      kombinációja létezik a különféle
      operációs rendszereknek és merevlemezeknek,
      valószínûleg az <xref linkend="ch5"/> fog a
      leírás leghasznosabb részének bizonyulni.
      Itt találhatóak meg ugyanis azok a speciális
      beállítási sémák, amelyek több
      operációs rendszer használata esetén
      alkalmazhatóak.</para>

    <para>Ez a cikk feltételezi, hogy a merevlemezünkön
      már elõkészítettünk kellõ
      mennyiségû szabad helyet az újabb
      operációs rendszer(ek) számára.  Minden egyes
      alkalommal, amikor újra felosztjuk a merevlemezünket,
      egyúttal kockára tesszük a meglevõ
      partícióinkon levõ adataink
      épségét is. Viszont ha a merevlemezünkön
      teljes egészében csak a DOS található, akkor
      a FIPS nevû segédprogramot hasznosnak fogjuk találni
      (megtalálható a &os; CDROM-on, a
      <filename class="directory">\TOOLS</filename> alkönyvtárban,
      vagy <ulink url="ftp://ftp.FreeBSD.org/pub/FreeBSD/tools/">FTP-n</ulink>.
      Segítségével anélkül tudjuk
      partícionálni a merevlemezünket,
      hogy kockára tennénk a rajta levõ adatainkat
      biztonságát.  Valamint létezik még egy
      <application>&partitionmagic;</application> nevû kereskedelmi
      alkalmazás is, amellyel minden komoly következmény
      nélkül tudunk partíciókat
      átméretezni és törölni.</para>
  </sect1>

  <sect1 id="ch2">
    <title>A boot managerek áttekintése</title>

    <para>Csak röviden bemutatnánk néhány elterjedt
      boot managert.  Közülük, a
      számítógépünk
      kiépítésétõl függõen, egyet
      vagy többet jó eséllyel tudunk majd
      használni.</para>

    <variablelist>
      <varlistentry>
	<term>Boot Easy</term>
	<listitem>
	  <para> Ez a &os; alapértelmezett boot managere.  Szinte
	    bármilyen rendszert képes indítani,
	    többek közt a BSD, &os2; (HPFS), &windows;&nbsp;95 (FAT
	    és FAT32) és &linux; típusú
	    rendszereket.  Az indítandó partíciót a
	    funkcióbillentyûkkel választhatjuk ki.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>&os2; Boot Manager</term>
	<listitem>
	  <para> Elindítja a FAT, FAT32, HPFS, FFS (&os;) és EXT2
	    (&linux;) partíciókat, amelyet a nyilakkal
	    választhatunk ki. Az &os2; Boot Manager az egyetlen az itt
	    felsoroltak közül, amely a saját
	    partícióját használja, miközben az
	    összes többi a Master Boot Record (MBR)-ot.  Ennek
	    következtében az 1024. cilinder elé kell
	    telepítenünk, hogy elkerüljük az ezzel
	    kapcsolatos esetleges indítási
	    problémákat.  LILO-val telepített &linux;-ot
	    csak akkor képes indítani, amikor az a boot
	    szektorban található, nem pedig az MBR-ben.  Az
	    Interneten található <ulink
	      url="http://www.linuxresources.com/LDP/HOWTO/HOWTO-INDEX.html">&linux; hogyanok</ulink>
	    között további információkat
	    találhatunk az &os2; boot manager és a &linux;
	    kapcsolatáról.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>OS-BS</term>
	<listitem>
	  <para>Ez egy másik boot manager a Boot Easy mellett.
	    Valamivel több kontrollt ad a rendszerindítási
	    folyamat felett, például
	    beállítható benne az alapértelmezett
	    indított partíció és egy
	    várakozási idõ.  A program béta
	    változatában már a nyilak
	    segítségével lehet kiválasztani az
	    indítandó operációs rendszert.
	    Szintén megtalálható a &os; CD-jén
	    a <filename class="directory">\TOOLS</filename>
	    könyvtárban vagy <ulink
	      url="ftp://ftp.FreeBSD.org/pub/FreeBSD/tools/">FTP-n</ulink>.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>LILO, avagy LInux LOader</term>
	<listitem>
	  <para>Ez egy korlátozott képességû boot
	    manager.  Képes elindítani a &os;-t, habár
	    ehhez szükség van némi finomhangolásra
	    a hozzátartozó konfigurációs
	    állományban.</para>
	</listitem>
      </varlistentry>
    </variablelist>

    <note id="fat32">
      <title>Röviden FAT32-rõl</title>

      <para>A FAT32 a FAT állományrendszer
	kiváltására szolgál, amelyet a Microsoft
	1996 végén, a &windows;&nbsp;95&nbsp;OSR2 béta
	változatától kezdõdõen indított
	útjának, ezzel lecserélve a &windows;&nbsp;95-tel
	telepített számítógépek
	alapértelmezett FAT típusú
	állományrendszerét.  Úgy alakítja
	át a megszokott FAT-ot, hogy lehetõvé teszi a
	kisebb kiosztási egységek használatát
	nagyobb merevlemezeken is.  Továbbá a FAT32-ben
	megváltoztatták a hagyományos FAT boot
	szektorát és kiosztási
	táblázatát is,
	összeférhetetlenné téve ezáltal
	néhány boot managerrel.</para>
    </note>
  </sect1>

  <sect1 id="ch3">
    <title>Egy átlagos telepítés</title>

    <para>Tegyük fel, hogy van két nagyobb EIDE merevlemezünk
      és szeretnénk rájuk &os;-t, &linux;-ot és
      &windows;&nbsp;95-öt telepíteni.</para>

    <para>Íme, hogyan tennénk mindezt az alábbi
      merevlemezekkel:</para>

    <itemizedlist>
      <listitem>
	<para><filename>/dev/wd0</filename> (az elsõ fizikai lemez)</para>
      </listitem>

      <listitem>
	<para><filename>/dev/wd1</filename> (második fizikai
	  lemez)</para>
      </listitem>
    </itemizedlist>

    <para>Mindkét lemeznek 1416 cilindere van.</para>

    <procedure>
      <step><para>Elsõként indítsunk az &ms-dos; vagy
	&windows;&nbsp;95 rendszerindító lemezével,
	amelyen az <filename>FDISK.EXE</filename> segédprogram
	található.  Ennek segítségével
	készítünk egy kis, nagyjából
	50&nbsp;MB méretû elsõdleges partíciót
	(35-40-et a &windows;&nbsp;95-nek, meg hagyunk egy kis helyet
	levegõzni is) az elsõ lemezen.  Ezen kívül
	még készítsünk egy nagyobb
	partíciót a második merevlemezen, ahol a
	&windows;os alkalmazásaink és az adataink foglalnak
	majd helyet.</para></step>

      <step><para>Indítsuk újra a gépet és
	telepítsük fel a &windows;&nbsp;95-öt a
	<filename>C:</filename> partícióra (amit
	egyébként könnyebb mondani, mint
	megtenni).</para></step>

      <step><para>Következõként a &linux;-ot
	telepítsük fel.  Nem vagyok benne biztos, hogy ez mindegyik
	&linux;-disztribúcióra igaz, de a <ulink
	  url="http://www.slackware.com">Slackware</ulink> tartalmazza a LILO-t
	(ld. <xref linkend="ch2"/>).  A &linux;-os <command>fdisk</command>
	parancsával tovább partíciónálva
	én a &linux;-ot az elsõ lemezre tenném
	(nagyjából 300&nbsp;MB elegendõ egy
	kövérebb rendszerpartíciónak és
	némi lapozóállománynak).</para></step>

      <step><para>Miután feltelepítettük a &linux;-ot
	és éppen a LILO elhelyezése elõtt
	állunk, <emphasis>mindenképpen</emphasis>
	ellenõrizzük, hogy a &linux;-os
	rendszerpartíció boot szektorába
	telepítjük, nem pedig az MBR-be!</para></step>

      <step><para>A fennmaradó hely mehet mind a &os;-nek.
	Vigyázzunk, hogy a &os; rendszerslice-a ne kerüljön az
	1024. cilinderen túlra.  (Az 1024. cilinder az
	528.&nbsp;MB-nál található a most
	feltételezett 720&nbsp;MB-os lemezükön.)  A merevlemez
	többi részét (nagyjából 270&nbsp;MB)
	az <filename class="directory">/usr</filename> és
	<filename class="directory">/</filename> slice-okra is fel lehet
	használni.  A második lemez fennmaradó
	részén (aminek a mérete az 1.
	lépésben kialakított, &windows;-os
	alkalmazásoknak és adatoknak szánt
	partíció méretétõl függ)
	még elfér a
	<filename class="directory">/usr/src</filename> slice és
	a lapozóállomány.</para></step>

      <step><para>Ha most megnézzük a &windows;&nbsp;95
	<command>fdisk</command> programjával, a merevlemezeket
	valahogy így láthatjuk:

	<screen>
---------------------------------------------------------------------

                  Partíció információinak megjelenítése

Aktuális merevlemezes meghajtó: 1

Partíció  Állapot  Típus    Kötetcímke  Megabájt    Rendszer   Felhasznált
 C: 1        A    PRI DOS                   50       FAT**         7%
    2        A    Non-DOS (Linux)          300                    43%



Teljes lemezterület:  696 megabájt (1 megabájt = 1048576 bájt)








A folytatáshoz nyomja meg az Esc billentyût.
---------------------------------------------------------------------

                  Partíció információinak megjelenítése

Aktuális merevlemezes meghajtó: 2

Partíció  Állapot  Típus    Kötetcímke  Megabájt    Rendszer   Felhasznált
 D: 1        A    PRI DOS                  420       FAT**        60%




Teljes lemezterület:  696 megabájt (1 megabájt = 1048576 bájt)









A folytatáshoz nyomja meg az Esc billentyût.
---------------------------------------------------------------------
	</screen>** Ez FAT16 vagy FAT32 lehet attól függõen,
	  hogy OSR2-t használunk-e.  Lásd
	  <xref linkend="ch2"/>.</para></step>

      <step><para> Telepítsük fel a &os;-t. Mindenképpen
	az elsõ merevlemezrõl indítsuk el a
	számítógépet, ezért a BIOS-ban
	állítsuk <quote>NORMAL</quote>-ra.  Ha nem az lenne,
	adjuk meg a lemez valós geometriáját
	indításkor (a lekérdezéséhez
	indítsuk el &windows;&nbsp;95-öt, majd a Microsoft
	Diagnostics-ot (<filename>MSD.EXE</filename>, esetleg
	nézzük meg a BIOS-ban) a <literal>hd0=1416,16,63</literal>
	paraméterrel, ahol a <replaceable>1416</replaceable> megadja a
	merevlemez cilindereinek számát, a
	<replaceable>16</replaceable> a fejek számát
	sávonként, valamint a <replaceable>63</replaceable> a
	szektorok számát sávonként.</para></step>

      <step><para>A merevlemez partícionálása során
	a Boot Easy-t mindenképpen az elsõ lemezre tegyük.
	A második lemez miatt különösebben ne
	aggódjunk, semmi bootolni való nincs rajta.</para></step>

      <step><para>Újraindítás után a Boot Easy
	várhatóan felismeri mind a három
	indítható partíciót: DOS
	(&windows;&nbsp;95), &linux; és BSD (&os;)
	néven.</para></step>
    </procedure>
  </sect1>

  <sect1 id="ch4">
    <title>Különösen megfontolandók</title>

    <para>A legtöbb operációs rendszer meglehetõsen
      kényes abban a tekintetben, hogy hova helyezzük õket a
      merevlemezen.  A &windows;&nbsp;95-öt és DOS-t az elsõ
      merevlemez elsõ elsõdleges partíciójára
      kell telepítenünk.  Az &os2; innen nézve
      kívételnek számít, mivel egyaránt
      telepíthetõ az elsõ vagy a második merevlemezre
      is, tetszõleges elsõdleges vagy kiterjesztett
      partícióra.  Ha nem vagyunk benne biztosak, az
      indítható partíciókat tegyük mindig az
      1024. cilinder elé.</para>

    <para>Ha a &windows;&nbsp;95-öt egy már meglévõ BSD
      rendszer mellé telepítjük, <quote>tönkre fogja
	tenni</quote> az MBR-t, és ezért újra kell
      telepítenünk a korábbi boot managerünket.  A Boot
      Easy-t a &os; telepítõ CDROM-jának
      <filename class="directory">\TOOLS</filename>
      könyvtárában található, vagy az  <ulink
	url="ftp://ftp.FreeBSD.org/pub/FreeBSD/tools/">FTP-n</ulink>
      letölthetõ <filename>BOOTINST.EXE</filename>
      segítségével tudjuk visszarakni.  Másik
      lehetõség gyanánt elindíthatjuk a
      telepítõt is, és megkereshetjük benne a
      partíciószerkesztõt.  Itt jelöljük meg
      &os;-t tartalmazó partíciót
      indíthatónak (<emphasis>bootable</emphasis>), majd
      válasszuk a Boot Managert és nyomjuk le a W-t (mint
      (W)rite out) a boot manager tényleges MBR-be
      írásához.  Most már
      újraindíthatjuk a számítógépet
      és a Boot Easy pedig felismeri a &windows;&nbsp;95-öt mint
      DOS.</para>

    <para>Nem szabad elfelejtenünk, hogy az &os2; ugyan képes FAT
      és HPFS partíciókat olvasni, viszont FFS-t (&os;)
      és EXT2-t (&linux;) nem!  Ehhez hasonlóan a
      &windows;&nbsp;95 csak FAT és FAT32 partícókat (ld.
      <xref linkend="ch2"/>) tud írni és olvasni.  A &os; ismeri a
      legtöbb állományrendszert, de jelenleg nem tud HPFS
      partíciókat olvasni.  A &linux; képes HPFS
      partíciókat olvasni, de nem tudja írni õket.  A
      &linux; kernel legújabb (2.x-es) változatai már
      képesek írni és olvasni a &windows;&nbsp;95 VFAT
      partícióit (a VFAT az, aminek a
      segítségével a &windows;&nbsp;95 képes
      hosszú állományneveket kezelni &mdash;
      egyébként teljesen olyan, mint a FAT). A &linux;
      tehát képes írni és olvasni a legtöbb
      állományrendszert.  Érthetõ?
      Remélem!</para>
  </sect1>

  <sect1 id="ch5">
    <title>Példák</title>

    <para><emphasis>(ennek a szakasznak szüksége van még
      némi átdolgozásra, várjuk
      a hozzászólásokat a témában a
      <email>jayrich@sysc.com</email> címre)</emphasis>.</para>

    <para>&os; + &windows;&nbsp;95: Ha a &os;-t a &windows;&nbsp;95 után
      telepítettük, akkor a &windows;&nbsp;95-öt a Boot Easy
      menüjében <literal>DOS</literal>-ként kell
      látnunk.  Ha viszont a &windows;&nbsp;95-öt a &os;
      után telepítettük, olvassuk el a fenti <xref
	linkend="ch4"/>t.  Amíg nincsenek olyan merevlemezeink, amelyek
      mérete meghaladná az 1024 cilindert, nem kell
      különösebben aggódnunk a bootolás miatt.
      Amikor azonban valamelyik partíciónk az 1024. cilinder
      fölé merészkedik és DOS (vagy
      &windows;&nbsp;95) alatt olyan hibaüzeneteket kapunk, mint mondjuk a
      <errorname>Rossz rendszerlemez</errorname>, valamint a
      &os; sem képes elindulni, keressünk meg a BIOS-unk
      beállításai között <quote>&gt; 1024
      cylinder support</quote>-ot (1024-nél több cilinder
      támogatása) vagy a <quote>NORMAL/LBA</quote> nevezetû
      módot.  A DOS-nak ebben az esetben ugyanis szüksége
      lehet az LBA (Logical Block Addressing) bekapcsolására a
      bootoláshoz.  Ha nem akarjunk minden egyes
      rendszerindításkor eljátszani ezt, a CD-n
      található <filename>FBSDBOOT.EXE</filename>
      segítségével akár a DOS-on keresztül is
      el tudjuk indítani a &os;-t. (Ez ugyanis megkeresi a &os;-s
      partíciót és elindítja azt).</para>

    <para>&os; + &os2; + &windows;&nbsp;95: Nincs új a nap alatt.  Az
      &os2; boot managere képes elindítani mindezen
      operációs rendszereket, ez a kombináció
      tehát nem okozhat problémát.</para>

    <para>&os; + &linux;: A Boot Easy segítségével mind a
      két rendszer elindítható.</para>

    <para>&os; + &linux; + &windows;&nbsp;95: (ld. <xref linkend="ch3"/>)</para>
  </sect1>

  <sect1 id="sources">
    <title>Egyéb hasznos helyek</title>

    <para>Számtalan <ulink
	url="http://www.linuxresources.com/LDP/HOWTO/HOWTO-INDEX.html">&linux;
	hogyan</ulink> foglalkozik az egy merevlemezre telepíthetõ
      operációs rendszerek
      problémájával.</para>

    <para>A <ulink
	url="http://www.linuxresources.com/LDP/HOWTO/mini/Linux+DOS+Win95+OS2.html">&linux;+DOS+Win95+OS2
	mini-hogyan</ulink> az &os2; boot managerével kapcsolatosan
      nyújt némi segítséget, valamint a <ulink
	url="http://www.linuxresources.com/LDP/HOWTO/mini/Linux+FreeBSD.html">&linux;+&os;
	mini-hogyan</ulink> is érdekes olvasmány lehet.  A <ulink
	url="http://www.in.net/~jkatz/win95/Linux-HOWTO.html">&linux;-hogyan</ulink>
       is fontos információkat tartalmazhat.</para>

    <para>A <ulink
	url="http://www.tburke.net/info/ntldr/ntldr_hacking_guide.htm">&windowsnt;
	Loader Hacking Guide</ulink>-ban sok érdekesség
      megtalálható a &windowsnt;, &windows;&nbsp;95 és DOS
      más operációs rendszerekkel együtt
      történõ használatáról.</para>

    <para>Hale Landis <quote>Hogyan is mûködik?</quote> c.
      leírása is rengeteg hasznos apróságot
      árul el a különfél lemez
      geometriákról és a rendszerindítással
      kapcsolatos egyéb tudnivalókról.  Ezt
      <ulink url="ftp://fission.dt.wdc.com/pub/otherdocs/pc_systems/how_it_works/allhiw.zip">itt</ulink>
      találhatjuk meg.</para>

    <para>Végezetül, erõsen javallott tüzetesen
      átnézni a &os; rendszermag
      rendszerindításáról szóló
      dokumentációját is, amely megtalálható
      a rendszermag forrásában (alapértelmezés
      szerint a <ulink
	url="file://localhost/usr/src/sys/i386/boot/biosboot/README.386BSD">/usr/src/sys/i386/boot/biosboot/README.386BSD</ulink>
      helyre kerül).</para>
  </sect1>

  <sect1>
    <title>Technikai részletek</title>

    <para><emphasis>(Köszönet érte Randall Hoppernek
      <email>rhh@ct.picker.com</email>)</emphasis></para>

    <para>Ebben a szakaszban megpróbálunk kellõ
      mennyiségû alapvetõ ismeretet átadni a
      használatban levõ merevlemezekrõl, valamint ezen lemezek
      rendszerindítási folyamatáról, elegendõt
      ahhoz, hogy le tudjuk küzdeni azokat a leggyakoribb
      problémákat, amelyek több operációs
      rendszer indítása során leselkednek ránk.
      Teljesen a kezdetektõl indul, ezért javasolt egészen
      addig a pontig ugrani az olvasásban, ahol már ismeretlen
      dolgok is kezdenek feltûnni.</para>

    <sect2>
      <title>Amit tudni érdemes a lemezekrõl</title>

      <para>Három alapvetõ jellemzõ írja le a
	merevlemezen található adatok pontos helyét:
	cilinder, fej, szektor.  Igazából nem teljesen
	lényeges tudni, hogy ezek milyen viszonyban is állnak
	egymással, kivéve annyit, hogy ezek együttesen
	azonosítják be fizikailag a lemezen
	található adatokat.</para>

      <para>Egy merevlemeznek van adott számú cilindere, feje
	és szektora az egyes cilinder-fej párosok mentén
	(amelyet egyébként sávnak is neveznek).  Ezek az
	információk adják meg együttesen a merevlemez
	<quote>fizikai geometriáját</quote>.
	Általában 512 byte található
	szektoronként valamint 63 szektor fejenként, azonban a
	cilinderek és a fejek száma jelentõsen
	változik lemezenként.  Ezért a merevlemezen
	maximálisan tárolható adatok
	mennyiségét a következõképpen lehet
	kiszámítani ezek ismeretében:</para>

      <informalexample><para>(a cilinderek száma) &times; (a fejek
	száma) &times; (63 szektor/sáv) &times; (512
	byte/szektor)</para></informalexample>

      <para>Például, ez egy 1,6 gigabyte-os Western Digial
	AC31600 EIDA merevlemez esetén:</para>

      <informalexample><para>(3148 cilinder) &times; (16 fej) &times;
	(63 szektor/sáv) &times; (512
	byte/szektor)</para></informalexample>

      <para>amely 1 624 670 208 byte-nak felel meg, ami pedig
	nagyjából 1,6 gigabyte.</para>

      <para>Az egyes merevlemezek fizikai geometriáját (a
	cilinderek, fejek és a sávonkénti szektorok
	számát) az ATAID és az Interneten
	megtalálható egyéb hasonló programokkal
	lehet lekérdezni.  De valószínûleg
	magán a merevlemezen is megtalálható ez az adat.
	Azonban nem árt óvatosnak lennünk: ha a BIOS-ban
	LBA-t állítottunk be (ld. <xref linkend="limits"/>),
	az említett programok egyikét sem tudjuk
	használni.  Ezért sem képes sok más program
	(pl. az <filename>MSD.EXE</filename> vagy a &os; fdisk)
	megállapítani a fizikai lemez geometriát; helyette
	az <firstterm>átértelmezett geometriát</firstterm>
	(a LBA-ból származó virtuális
	azámadatokat) adják vissza.  Errõl még
	beszélni fogunk.</para>

      <para>Még egy apróság ezzel kapcsolatban.  A 3
	szám &mdash; nevezetesen a cilinderek, a fejek és a
	szektorok sávonkénti száma &mdash;
	ismeretében képesek vagyunk betájolni egy
	konkrét abszolút szektort (vagyis egy 512 byte-os
	adatblokkot) a lemezünkön.  A cilindereket és fejeket
	0-tól, míg a szektorokat 1-tõl szokták
	számozni.</para>

      <para>Azok számára, akik még jobban el akarnak
	mélyedni a technikai részletekben, a lemezek
	geometriájában, a boot szektorok és BIOS-ok stb.
	titkaiban, mindent megtalálhatnak róluk az Interneten.
	Keressenek rá bátran a Lycos, Yahoo stb.
	szolgáltatásokban a <literal>boot sector</literal> vagy
	<literal>master boot record</literal> szavakra.  A sok hasznos ismeret
	között esetleg találkozni fogunk Hale Landis
	<citetitle>Hogyan is mûködik?</citetitle> c.
	leírásgyûjteményével is.  Ezzel
	kapcsolatban ld. a <xref linkend="sources"/>t.</para>

      <para>Rendben, ennyi elég is lesz a
	terminológiáról. Beszéljük a
	bootolásról!</para>
    </sect2>

    <sect2 id="booting">
      <title>A rendszerindítás folyamata</title>

      <para>A merevlemez elsõ szektorában (azaz a 0. cilinder, 0.
	fej, 1. szektor) lakozik a Master Boot Record (MBR).  Ez tartalmazza
	lényegében a teljes lemez térképét.
	Legfeljebb 4 <firstterm>partíciót</firstterm>
	képes tárolni, amelyek mindegyike a lemez egy-egy
	folytonos darabkája.  A &os; ezeket a partíciókat
	egyébként <firstterm>slice-oknak</firstterm> hívja
	annak érdekében, hogy elkerülje a saját
	partícióival történõ
	összetévesztésüket, habár mi most nem
	így fogunk tenni.  Minden egyes partícióra
	telepíthetõ egy-egy operációs rendszer
	is.</para>

      <para>Az MBR-ben található összes
	partíciós bejegyzésnek van egy ún.
	<firstterm>partíció
	  azonosítója</firstterm>, egy <firstterm>kezdõ
	  cilinder/fej/szektor értéke</firstterm> és egy
	<firstterm>befejezõ cilinder/fej/szektor
	  értéke</firstterm>.  A partíció
	azonosítója megadja, hogy az adott partíció
	milyen típusú (milyen operációs rendszer
	használja), a kezdõ/befejezõ értéke
	pedig azt, hol található.  A <xref linkend="tbl-pid"/>ban
	a teljesség igénye nélkül felsoroltunk
	néhány ismertebb azonosítót.</para>

      <table id="tbl-pid">
	<title>Partíció azonosítók</title>

	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Az. (hex)</entry>
	      <entry>Leírás</entry>
	    </row>
	  </thead>

	  <tbody>
	    <row>
	      <entry>01</entry>
	      <entry>Elsõdleges DOS12 (12 bites FAT)</entry>
	    </row>

	    <row>
	      <entry>04</entry>
	      <entry>Elsõdleges DOS16 (16 bites FAT)</entry>
	    </row>

	    <row>
	      <entry>05</entry>
	      <entry>Kiterjesztett DOS</entry>
	    </row>

	    <row>
	      <entry>06</entry>
	      <entry>Elsõdleges nagy DOS (&gt; 32MB)</entry>
	    </row>

	    <row>
	      <entry>0A</entry>
	      <entry>&os2;</entry>
	    </row>

	    <row>
	      <entry>83</entry>
	      <entry>&linux; (EXT2FS)</entry>
	    </row>

	    <row>
	      <entry>A5</entry>
	      <entry>&os;, NetBSD, 386BSD (UFS)</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>

      <para>Megjegyezzük, hogy nem mindegyik partíció
	indítható (ilyen pl. a kiterjesztett DOS).  Egyesek igen
	&mdash; mások pedig nem.  Amitõl egy partíció
	bootolhatóvá válik, az a
	<firstterm>partíció boot szektora</firstterm>, amely az
	egyes partíciók elején
	található.</para>

      <para>Amikor beállítjuk a kedvenc boot managerünket,
	az tulajdonképpen átnézi az összes merevlemez
	MBR-jeinek partíciós táblájában
	található bejegyzéseket és
	lehetõvé teszi számunkra, hogy elnevezgessük
	õket.  Majd amikor elindítjuk a
	számítógépet, a boot manager az
	elsõként próbált merevlemez Master Boot
	Recordjában elhelyezett speciális program
	segítségével életre kel.  Felkeresi
	a választásunknak megfelelõ partíciót
	az MBR partíciós táblájában,
	és felhasználva az így megismert kezdõ
	cilinder/fej/szektor adatokat, betölti az adott
	partíció boot szektorát, majd átadja neki a
	vezérlést.  A partíció boot szektora ezek
	után már elegendõ információt
	tartalmaz a rajta levõ operációs rendszer
	indításához.</para>

     <para>Egyetlen fontos tudnivalót nem említettünk meg
	még: minden merevlemezen található MBR.  Azonban
	ezek közül csak az tekinthetõ fontosnak, amely a BIOS
	által elsõként próbált lemezen
	található.  Ha csak IDE csatolós merevlemezeink
	vannak, ez általában az elsõ IDE lemez (pl. az
	elsõdleges lemez az elsõ vezérlõn).  Ugyanez a
	helyzet a csak SCSI-t tartalmazó rendszerekben.  Ha viszont van
	IDE és SCSI merevlemezünk is, a BIOS
	általában az IDE lemezeket próbálja
	elõször elindítani, így az elsõként
	elindított lemez az elsõ IDE lemez.  A boot managert
	tehát az elsõként elinduló merevlemez
	MBR-jébe kell elhelyeznünk a fentiekben leírtak
	szerint.</para>
    </sect2>

    <sect2 id="limits">
      <title>A rendszerindítás korlátai és
	veszélyei</title>

      <para>Most pedig következzen mindaz, amire nagyon oda kell
	figyelnünk.</para>

      <sect3>
	<title>A rettegett 1024 cilinderes korlát és hogyan
	  segít ezen az LBA</title>

	<para>A bootolás folyamatának elsõ
	  része a BIOS-on keresztül megy végbe (ha
	  még nem ismernénk: a BIOS az az alaplapon
	  található chip, amely a
	  számítógép
	  indításához nélkülözhetetlen
	  rutinokat tárolja).  Mint olyan, a folyamat elsõ
	  része tehát a BIOS interfészének
	  korlátozásaitól függ.</para>

	<para>Ezen idõtartam alatt a BIOS által nyújtott
	  interfészt használjuk a merevlemez
	  olvasására (13H megszakítás, 2-es
	  funkció), amely 10 bitet használ a cilinderek, 8 bitet
	  a fejek és 6 bitet a szektorok
	  számozására.  Ezzel lekorlátozza
	  használóját (tehát az MBR-bõl
	  induló boot managereket és a boot szektorokban
	  található betöltõket) az
	  alábbiakra:</para>

	<itemizedlist>
	  <listitem>
	    <para>legfejlebb 1024 cilinderre</para>
	  </listitem>

	  <listitem>
	    <para>legfejlebb 256 fejre</para>
	  </listitem>

	  <listitem>
	    <para>legfejlebb 64 szektorra sávonként (ami
	      ténylegesen 63, mivel a <literal>0.</literal>
	      nem használható)</para>
	  </listitem>
        </itemizedlist>

	<para>Mostanában azonban a nagyobb merevlemezeknek tengernyi
	  cilinderük van, de nem túl sok fejük, ezért
	  ezek a lemezek szinte kivétel nélkül
	  átlépik az 1024 cilinderes határt.  Ha
	  vesszük ezt a tényt és összevetjük a
	  BIOS által kínált interfésszel,
	  rájöhetünk, hogy nem bootolhatunk akárhonnan
	  a lemezrõl.  A rendszerindító kódnak
	  (tehát a boot managernek és az összes
	  indítható partícióban
	  található betöltõnek) az 1024. cilinder alatt
	  kell lennie.  Tényekre fordítva a szót, ha van
	  egy átlagos merevlemezünk, aminek 16 feje van, ez
	  nagyjából:</para>

	<informalexample><para>1024 cilinder/lemez &times; 16 fej/lemez
	  &times; 63 szektor/(cilinder - fej) &times; 512
	  byte/szektor,</para></informalexample>

	<para>ami megfelel a sokszor emlegetett 528 MB-os
	  határnak.</para>

	<para>Itt jön a képbe a BIOS LBA (Logical Block
	  Addressing).  Ennek segítségével ugyanis a
	  BIOS-hívások használója képes
	  hozzáférni az 1024. feletti fizikai cilinderekhez is a
	  BIOS-on keresztül, méghozzá a cilinderek
	  átdefiniálásával.  Vagyis
	  újraértelmezi a cilinderek és a fejek
	  számát, és ezzel olyan képzetet ad,
	  mintha a merevlemeznek kevesebb cilindere de több feje lenne,
	  mint a valóságban.  Másképp fogalmazva,
	  kihasználja azt a helyzetet, hogy a modern merevlemezekben
	  viszonylag kevés fej és sok cilinder
	  található, ezért eltolja a kettõ
	  között nyugvó osztást, aminek
	  köszönhetõen mind a két érték az
	  imént említett határok (1024 cilinder, 256 fej)
	  alatt tud maradni.</para>

	<para>A BIOS LBA használatával a merevlemezek ezen
	  korlátozása virtuálisan el is tûnik (nos,
	  valójában csak 8 gigabyte-nyival arrébb
	  kerül).  Ha LBA-t támogató BIOS-unk van, akkor a
	  &os;-t és minden más operációs
	  rendszert bárhova pakolhatunk, hiszen így nem fogunk az
	  1024 cilinderes korlátba ütközni.</para>

	<para>Az elõbb példaként felhozott 1,6 gigabyte-os
	  Western Digital esetén tehát a fizikai
	  geometria:</para>

	<informalexample><para>(3148 cilinder, 16 fej, 63 szektor/sáv,
	  512 byte/szektor)</para></informalexample>

	<para>Azonban a BIOS LBA ezt így fordítja
	  át:</para>

	<informalexample><para>(787 cilinder, 64 fej, 63 szektor/sáv,
	  512 byte/szektor),</para></informalexample>

	<para>ami ugyanazt a tényleges lemezméretet
	  eredményezi, azonban a cilinder- és fejadatok a
	  BIOS-hívások által kezelhetõ
	  tartományba esnek.  (Mellékesen megjegyzem, hogy nekem
	  pont egy &linux; és egy &os; partícióm van az
	  egyik merevlemezemen, éppen az 1024. cilinder felett,
	  és mind a kettõ remekül bootol, hála az
	  LBA-nak).</para>
      </sect3>

      <sect3>
	<title>Boot managerek és a lemez kiosztása</title>

	<para> Egy másik fontos dolog, amire figyelnünk kell a boot
	  managerek telepítése során, az éppen a
	  boot managernek foglalt hely a lemezen.  A legjobb erre már
	  elõre gondolni, és ezzel elkerüljük egy vagy
	  több operációs rendszerünk
	  újratelepítését.</para>

	<para>Ha nyomonkövettük a Master Boot Recordról (avagy
	  hol is található az MBR), a partíciók
	  boot szektoráról és a
	  rendszerindítási folyamatról szóló
	  <xref linkend="booting"/>t, felmerülhet bennünk a
	  kérdés, hogy a merevlemezükön hova is fog
	  kerülni maga a boot manager.  Nos, egyes boot managerek
	  kellõen kis méretûek ahhoz, hogy teljes
	  egészében elférjenek a Master Boot Recordban
	  (0. cilinder, 0. fej, 1. szektor), a partíciós
	  tábla mellett.  Másoknak ellenben valamivel több
	  helyre van szüksége és tulajdonképpen a 0.
	  cilinder 0. fejének sávjában nyúlnak
	  túl az MBR-en néhány szektornyival, mivel azok
	  általában szabadon maradnak&hellip;
	  általában.</para>

	<para>És itt jön a csel! Egyes operációs
	  rendszerek (köztük a &os; is) megengedik, hogy a
	  partíciójuk akár közvetlenül a Master
	  Boot Record után kezdõdjön a 0. cilinder 0.
	  fejének 2. szektorában. Tulajdonképpen, ha
	  a &os; telepítõjének egy olyan lemezt adunk meg,
	  amelynek az eleje vagy a teljes egésze
	  éppenséggel üres, a &os;
	  partícióját alapértelmezés szerint
	  közvetlenül ide rakja (legalább is így tette,
	  amikor megpróbáltam telepíteni).  Ezután
	  szépen felrakjuk a boot managert, és ha az
	  éppenséggel hajlamos elfoglalni az MBR után
	  következõ néhány szektort, akkor ezzel
	  együtt felül is írja az elsõ
	  partíció adatait.  A &os; esetében így
	  felülírja a lemezcímkét, amitõl a &os;
	  partíció ezáltal bootolhatatlanná
	  válik.</para>

	<para>Ha egyszerûen el akarjuk kerülni ezt a
	  problémát (és megadni az esélyt
	  más, kevésbé rugalmas boot managerek
	  számára), akkor hagyjuk szabadon a lemezen
	  található elsõ sávot.  Vagyis ne
	  tegyünk semmilyen partíciót a 0. cilinder, 0. fej,
	  2. szektorától kezdõdõen egészen a 0.
	  cilinder, 0. fej 63. szektoráig, hanem helyezzük azt a
	  0. cilinder 1. fejének 1. szektorára.  Ugyan nem
	  mernék rá megesküdni, de ha létrehozunk egy
	  DOS partíciót a lemez elején, a DOS
	  alapértelmezés szerint ezt a területet szabadon
	  hagyja (ezért is gondolja úgy néhány boot
	  manager, hogy szabad).  Ezt inkább magam szeretem
	  csinálni, ezért létrehozok egy 1 megás
	  DOS partíciót a lemez elején, mivel ezzel
	  ráadásul meg tudom akadályozni, hogy
	  elsõleges DOS meghajtónevek felcserélõdjenek
	  egy újrapartícionálást
	  követõen.</para>

	<para>Hivatkozásképpen, a következõ boot
	  managerek használják a Master Boot Recordot az adataik
	  és kódjuk tárolására:</para>

	<itemizedlist>
	  <listitem>
	    <para>OS-BS 1.35</para>
	  </listitem>

	  <listitem>
	    <para>Boot Easy</para>
	  </listitem>

	  <listitem>
	    <para>LILO</para>
	  </listitem>
	</itemizedlist>

	<para>Ezek a boot managerek használnak további
	  szektorokat a Master Boot Record után:</para>

	<itemizedlist>
	  <listitem>
	    <para>OS-BS 2.0 Beta 8 (2-5. szektorok)</para>
	  </listitem>

	  <listitem>
	    <para>Az  &os2; boot managere</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>Mit tegyünk, ha nem indul el a rendszer a
	  számítógépünkön?</title>

	<para>Egyes esetekben elõfordulhat, hogy a boot managerek
	  telepítése során az MBR-t olyan állapotba
	  sikerül hozni, ahonnan a
	  számítógépünk nem képes
	  elindulni.  Ugyan nem valószínû, de
	  megtörténhet, amikor ismételten használjuk
	  az FDISK-et egy már meglevõ boot manager alatt.</para>

	<para>Ha van a lemezen egy bootolható DOS
	  partíció, akkor indítsuk el azt egy
	  DOS-os rendszerlemezrõl, és írjuk be:</para>

	<informalexample>
	  <screen>A:\> <userinput>FDISK /MBR</userinput></screen>
	</informalexample>

	<para>Ennek segítségével vissza tudunk rakni egy
	  egyszerû DOS rendszerbetöltõ kódot az MBR-be,
	  ami után be tudjuk tölteni a DOS-t (de csak a DOS-t)
	  a merevlemezrõl.  Másik megoldás lehet, hogy
	  simán újra felrakjuk a boot managerünket egy
	  rendszerindító lemezrõl.</para>
      </sect3>
    </sect2>
  </sect1>
</article>
