<!-- $Id: misc.sgml,v 1.1.1.1 1997-11-17 15:48:59 max Exp $ -->
<!-- The FreeBSD Japanese Documentation Project -->
<!-- Original revision: 1.1 --> 

  <sect>
    <heading>その他の質問<label id="misc"></heading>
    <p><em>訳: &a.yoshiaki;.<newline>10 November 1997.</em>

    <sect1>
      <heading>
        FreeBSD は Linux より多くのスワップ領域を消費するのはなぜですか? 
      </heading>

      <p>そうではありません. 本当は「なぜスワップが全部使われてる
      ように見えるのか」と聞きたいのでしょう. そういうことであれば, 
      その理由は, 実行プログラムのクリーンな (無変更の) ブロックを, 
      終了後すぐに捨ててしまわずにスワップ領域に残しておけば, 
      そのプログラムが再実行される際にファイルシステムから読み直すよりも
      迅速に実行することができるからです.

      <p>メモリ中に同時に保持する事のできるダーティページの実際の量は
      減少しません. クリーンなページが必要に応じて置き換えられます. 

    <sect1>
      <heading>
        FreeBSD の実行フォーマットの a.out はどのようなものですか, a.out を使う理由, ELFを使う理由は何でしょう?
      </heading>

      <p>FreeBSD の <tt>a.out</tt>フォーマットを理解するためには, 
      まず UNIXにおいて現在 「優勢」な 3種類の実行フォーマットについて
      いくらか知っておく必要があります:

      <itemize>
        <item><htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
        name="a.out">

        <p>最も古く 「由緒正しい」 unix オブジェクトフォーマットです. 
        マジックナンバを含む短くてコンパクトなヘッダが先頭にあり, 
        これがフォーマットの特徴とされています (参照
        <htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
        name="a.out(5)"> 
        より詳細な内容があります). ロードされる 3種類のセグメント:
        .text, .data, .bss と加えてシンボルテーブルと文字列テーブルを
        含みます. 

        <item><bf>COFF</bf>
        <p>SVR3 のオブジェクトフォーマットです. ヘッダは単一の
        セクションテーブルから成り,  .text, .data, .bss セクション以外
        の部分を持つことができます. </item>

        <item><bf>ELF</bf>
        <p> <tt/COFF/の後継です. 複数のセクションをサポートし, 32-bit
        と 64-bitのいずれの値も可能です. 大きな欠点の一つは, <tt/ELF/ 
        はそれぞれのシステムアーキテクチャ毎に単一の ABI のみが存在する
        という仮定で設計されていることです. この仮定はまったく
        正しくありません. 商用の SYSV の世界でさえそうです 
        (少なくとも SVR4, Solaris, SCO の 3種類の ABI があります). 

        <p>FreeBSD はこの問題を解決するための試みとして, 既知の <tt/ELF/
        実行ファイルに ABI に応じた情報を <em>書き加える</em>
        ユーティリティを提供しています.
        <htmlurl url="http://www.freebsd.org/cgi/man.cgi?brandelf"
        name="brandelf"> のマニュアルページ
        を参照してください. より多くの情報があります. 
      </itemize>

      <p>FreeBSD は伝統的な立場をとり, 数多くの世代の BSD のリリース
      で試され, 実証されてきた
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
      name="a.out">フォーマットを使用しています. 
      いつかは FreeBSDシステムでネイティブ <tt/ELF/ バイナリを作り, 
      実行することができるようになるかもしれませんが, オフィシャルには 
      ELF をデフォルトのフォーマットに変更するような動きは, 
      現在までありません. なぜでしょうか? ところで Linux においては, 
      <tt/ELF/ への苦痛をともなった変更は, その時に <tt/a.out/ 
      実行フォーマットから逃れたというよりは, ジャンプテーブルベース
      の共有ライブラリのメカニズムの柔軟性の低さからの脱却でした. 
      これはベンダや開発者全体にとって共有ライブラリの作成が非常に
      難しかった原因でした. 
      <tt/ELF/のツールには共有ライブラリの問題を
      解決することができるものが提供されており, またいずれにせよ
      一般的に「進歩」していると考えられます. このため移行のコストは
      必要なものとして容認され, 移行はおこなわれました. 

      <p>FreeBSDの場合は, 共有ライブラリのメカニズムは Sun の
      <tt>SunOS</tt>スタイルの共有ライブラリのメカニズムに極めて近い
      ものになっていて非常に使いやすいためにこれほど話は単純では
      ありません. 実際に <tt/a.out/ に不足しているのは, <tt/ELF/ 
      では C++ のコンストラクタとデストラクタのためのよりすっきりとした
      サポートがあるという点だけです. 同じ程度に複雑なことがらは
      他にもいろいろありますし, これが大きな問題となったことは絶対に
      ありません (FreeBSDのソースツリーにある C++ のコードは本当に
      わずかな量しかありません). 移行をおこなうのであれば, 
      いろいろな面からよりじっくりと考慮すべきです. 

    <sect1>
      <heading>なぜシンボリックリンクのパーミッションは chmod で変えられないのですか?</heading>

      <p>この場合, ``<tt/-H/'' か ``<tt/-L/'' のどちらかのオプションを 
      ``<tt/-R/'' と同時に使う必要があります. 
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?chmod"
      name="chmod"> と
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?symlink" 
      name="symlink"> のマニュアルページにはもっと詳しい情報があります. 

      <p><bf/注意/ ``<tt/-R/'' オプションは <bf/再帰的に/ <tt/chmod/
      を実行します. ディレクトリやディレクトリへのシンボリックリンクを 
      <tt/chmod/ する場合は気をつけてください. シンボリックリンクで
      参照されている単一のディレクトリのパーミッションを変更したい場合は,
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod"> 
      をオプションをつけずにシンボリックリンクの名前の後ろにスラッシュ 
      (``<tt>/</tt>'') をつけて使います. 例えば, ``<tt/foo/'' がディレクトリ 
      ``<tt/bar/'' へのシンボリックリンクである場合, ``<tt/foo/'' (実際には 
      ``<tt/bar/'') のパーミッションを変更したい場合にはこのようにします:

      <verb>
        chmod 555 foo/
      </verb>

      <p>後ろにスラッシュをつけると,
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?chmod"
      name="chmod"> はシンボリックリンク 
      ``<tt/foo/'' を追いかけてディレクトリ ``<tt/bar/'' 
      のパーミッションを変更します. 

    <sect1>
      <heading>
        login 名が<bf/いまだに/ 8文字に制限されているのはなぜですか
      </heading>

      <p> <bf/UT_NAMESIZE/を変更して全体を作り直せば十分で, それだけで
      うまくいくだろうとあなたは考えるかもしれません. 
      残念ながら多くのアプリケーションやユーティリティ
      (システムツールも含めて) は小さな数値を構造体やバッファなどに
      使っています ( 必ずしも "8" や "9" ではなく, "15" や "20" 
      などの変った値を使うものもあります).  また, Sun の NIS の
      クライアントであると不具合いが起きます. 他の UNIX システムとの
      関連においてこれら以外の問題も起きることはまちがいないでしょう. 

    <sect1>
      <heading>FreeBSD 上で DOS のバイナリを動かすことはできますか? </heading>

      <p>今のところはできませんが, BSDI は彼らの <tt/rundos/ DOS 
      エミュレーションサブシステムを寄贈してくれました. これは現在, 
      統合と改良がおこなわれています. この努力に興味を持って参加して
      いただけるなら
      <url url="mailto:emulation@freebsd.org"
      name="The FreeBSD emulation discussion list">
      へメールを送ってください. 

      <p>現在, 
      <htmlurl url="http://www.freebsd.org/cgi/ports.cgi?^pcemu" 
      name="pcemu"> という巧妙なユーティリティが ports 
      コレクションにあり, 8088 のエミュレーションと DOS の
      テキストモードアプリケーションを動かすに十分な BIOS 
      サービスをおこないます. これは X ウィンドウシステムが必要です 
      (XFree86 として提供されています)

    <sect1>
      <heading>
        ``<tt/sup/'' とは何で, どのようにして使うものなのでしょうか?
      </heading>

      <p><htmlurl url="http://www.freebsd.org/cgi/ports.cgi?^sup" 
      name="SUP">
      とはソフトウェアアップデートプロトコル (Software Update
      Protocol) で CMU で開発ツリーの同期のために開発されました. 
      私たちの中心開発ツリーをリモートサイトで同期させるために
      使っていました. 

      <p>SUP はバンド幅を浪費しますので, 今は使っていません. ソースコードの
      アップデートの現在のおすすめの方法は <url
      url="../handbook/cvsup.html" name="ハンドブックの CVSup の項"> 
      にあります. 

    <sect1>
      <heading>FreeBSD をクールに使うには?</heading>

      <p>Q. FreeBSD を動かす時に温度測定をおこなった人はいますか? Linux 
      は dos よりも温度が下がるということは知っていますが, FreeBSD
      についてはこのようなことに触れたものを見たことはありません. 
      実際熱くなっているように見えます. 

      <p>A. いいえ. 私たちは 250 マイクログラムの LSD-25 をあらかじめ
      与えておいたボランティアに対する目隠し味覚テストを大量に
      おこなっています. 
      35% のボランティアは FreeBSD はオレンジのような味
      がすると言っているのに対し Linux は紫煙のような味わいがある
      と言っている人もいます. 私の知る限り両方のグループとも温度の
      不一致については触れていません. この調査で, 非常に多くの
      ボランティアがテストをおこなった部屋から不思議そうに出てきて, 
      このようなおかしな結果を示したことに私たちは当惑させられました. 
      私は, ほとんどのボランティアは Apple にいて彼らの最新の
      「引っかいて匂いをかぐ」 GUI を使っているのではないかと
      考えています. 私たちは奇妙な古い仕事をしているのでしょう!

      <p>真面目に言うと, FreeBSD も Linux も ``<tt/HLT/'' (停止) 
      命令をシステムのアイドル時に使い, エネルギーの消費を押えて
      いますので熱の発生も少なくなります. また, APM (automatic power
      management) を設定してあるなら FreeBSD は CPU をローパワーモード
      にすることができます.

    <sect1>
      <heading>誰かが私のメモリカードをひっかいているのですか??</heading>

      <p>Q. FreeBSDでカーネルのコンパイルをしている時にメモリから
      引っかいているような奇妙な音が聞こえるようなことはあるのでしょうか? 
      コンパイルをしている時 (あるいは起動時にフロッピドライブを
      認識した後の短い間など), 奇妙な引っかくような音がメモリカードの
      あたりから聞こえてきます.

      <p>A. その通りです. BSDのドキュメントでしばしば「デーモン」に
      ついて述べられている理由がわかるでしょう. しかし多くの人は本当の
      事については触れていません. 非物質的な存在があなたのコンピュータ
      にあるのです. メモリからの引っかいたような音は, 実際に色々な
      システム管理タスクの扱いをいかに最善なものにするかという内容を交わす, 
      デーモンたちのかん高いささやきなのです.

      <p>「雑音」があなたに DOS プログラムの ``<tt>fdisk /mbr</tt>'' 
      を使ってうまくささやきを取り除かせようとしているように聞こえても, 
      彼らは逆にそうすることをやめさせようとしているのかもしれません. 
      本当は内蔵スピーカからのビル ゲイツの悪魔的な声が
      あなたに影響を与えているのかもしれません. 
      実行するのは止めましょう, そして振り返ってはいけません!
      BSD の守護神 (daemon) の力により, 
      繰り返しあなたのマシンを支配下に置こうとし, あなたの魂を
      無限地獄に突き落そうとする DOSと Windows の双子の悪鬼 (demon) の
      影響から自由になりましょう. 
      選択の機会は与えられました. 私自身はこの引っかくような音が
      聞こえていたことを嬉しく思っています. 

  </sect>

