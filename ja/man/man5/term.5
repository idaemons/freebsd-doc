.TH TERM 5
.\" jpman %Id: term.5,v 1.3 1998/07/30 15:27:11 horikawa Stab %
.\" WORD: compiled		コンパイル済みの
.\" WORD: linear search		線形探索(パス名から inodeを)
.\" WORD: boolean value		ブール値
.\" WORD: terminate		終端する
.ds n 5
.ds d /usr/lib/terminfo
.SH 名称
term \- コンパイル済みの term ファイルの形式
.SH 書式
.B term
.SH 解説
.PP
コンパイル済みの terminfo 属性記述はディレクトリ \fB\*d\fP の下にあります。
\s-1UNIX\s+1 システムの巨大なディレクトリを線形探索するのを避けるため、
\fB\*b/c/name\fP という形の 2 階層の命名規則が用いられます。
(ここで、
.I name
は端末の名前で、
.I c
は
.I name
の最初の文字です。)
ですから、
.I act4
は、 \fB\*d/a/act4\fP というファイル名で見つけることができます。
同じ端末を示す同義な名前は、同じコンパイル済みファイルへの複数の
リンクとして実装されています。
.PP
この形式は、全てのハードウェアで同じになるように選ばれています。
1 バイトが 8 ビット以上であることは仮定していますが、バイトオーダや
符号拡張の方式については仮定していません。
.PP
コンパイル済みのファイルは
.I tic 
プログラムにより生成され、
.I setupterm
ルーチンにより読み取られます。
これらのソフトウェア部品は
.IR ncurses (3)
の一部です。
このファイルは 6 つの部分に分割されます。すなわち、
ヘッダ、
端末の名称、
ブール値のフラグ、
数値、
文字列、および
文字列テーブルです。
.PP
ヘッダセクションはファイルの冒頭にあります。
このセクションは、以下に示す形式の short 型の整数 6 個からなります。
これらの整数は
(1) マジックナンバ (8 進で 0432)、
(2) 名称セクションのバイト単位での大きさ、
(3) ブール値のセクションに含まれるバイトの個数、
(4) 数値セクションに含まれる short 型整数の個数、
(5) 文字列セクションに含まれるオフセットの個数 (short 型整数)、
(6) 文字列テーブルのバイト単位での大きさ
です。
.PP
short 型の整数は 2 個の 8 ビットバイトに格納されています。
最初のバイトは値の最下位 8 ビットを、2 番目のバイトは最上位 8 ビットを
含みます。(すなわち、値は 256*second+first と表現されます。)
値 \-1 は 0377, 0377 で表現されますが、その他の負の値は構文違反です。
一般に、値 \-1 は、あるケーパビリティがその端末に備わっていないことを
示します。
この形式は \s-1VAX\s+1 と \s-1PDP\s+1-11 のハードウェアに
一致するものであることにご注意下さい。これに一致しないハードウェアの
マシンでは、整数を 2 個のバイトとして読み込み、結果を算出します。
.PP
次に現れるのは端末名セクションです。
これは、端末のさまざまな名前を `|' 文字で区切って列挙した、
terminfo 記述の最初の行を含みます。
このセクションは 1 個の \s-1ASCII NUL\s+1 文字で終端されます。
.PP
ブール型のフラグは、フラグ 1 個につき 1 バイトを占めます。
このバイトは、フラグが存在するかしないかに従って、0 か 1 となる必要があります。
ケーパビリティはファイル <term.h> に含まれるのと同じ順番に並びます。
.PP
数値セクションが偶数バイト目から開始されるように、
ブール値のセクションと数値セクションの間には、
必要なら 1 個のナルバイトを挿入します。
すべての short 型整数は short 型のワード境界に揃えて配置されます。
.PP
数値セクションはフラグセクションと同様です。
各ケーパビリティは 2 バイトを占め、short 型整数として格納されます。
もし表現された値が \-1 なら、そのケーパビリティは存在しないものと
解釈されます。
.PP
文字列セクションもまた同様です。
各ケーパビリティは上記の形式に従い、2 バイトの short 型整数として
格納されます。
値 \-1 は、ケーパビリティが存在しないことを意味します。
それ以外の場合、値は、文字列テーブルの先頭からのオフセットとして
解釈されます。
^X や \ec といった記法で示された特殊文字は、その記法を解釈した結果の形で
格納され、印刷可能表現では格納されません。
パッド情報 $<nn> とパラメータ情報 %x は解釈を行なわずそのままの形で
格納されます。
.PP
最後のセクションは文字列テーブルです。これは文字列セクションで参照されている
すべての文字列ケーパビリティの値を含みます。
各文字列はナルで終端されています。
.PP
.I setupterm
ルーチンでは、ファイルに実際に存在するケーパビリティ
とは異なるものが予想され得ることにご注意下さい。
.I setupterm
が再コンパイルされた後にデータベースが更新される
(ファイルにいくつかの未知のエントリが含まれる結果になります)か、
データベースが最後にコンパイルされた後にプログラムが再コンパイルされる
(存在しないエントリを生む結果になります)両方の可能性があります。
ルーチン
.I setupterm
は両方の可能性に備える必要があります \-
これが、データ内に個数と大きさが含まれている理由です。
また、新しいケーパビリティは常に、ブール値、数値、文字列の
ケーパビリティリストのそれぞれの最後に追加しなければなりません。
.PP
使用例として、 Microterm ACT 4 の記述の 8 進数ダンプをここに収めます。
.nf
.sp
microterm|act4|microterm act iv,
    cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
    ed=^_, el=^^, clear=^L, cup=^T%p1%c%p2%c,
    cols#80, lines#24, cuf1=^X, cuu1=^Z, home=^],
.sp
.ft CW
\s-2000 032 001      \e0 025  \e0  \eb  \e0 212  \e0   "  \e0   m   i   c   r
020   o   t   e   r   m   |   a   c   t   4   |   m   i   c   r   o
040   t   e   r   m       a   c   t       i   v  \e0  \e0 001  \e0  \e0
060  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0  \e0
100  \e0  \e0   P  \e0 377 377 030  \e0 377 377 377 377 377 377 377 377
120 377 377 377 377  \e0  \e0 002  \e0 377 377 377 377 004  \e0 006  \e0
140  \eb  \e0 377 377 377 377  \en  \e0 026  \e0 030  \e0 377 377 032  \e0
160 377 377 377 377 034  \e0 377 377 036  \e0 377 377 377 377 377 377
200 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
*
520 377 377 377 377      \e0 377 377 377 377 377 377 377 377 377 377
540 377 377 377 377 377 377 007  \e0  \er  \e0  \ef  \e0 036  \e0 037  \e0
560 024   %   p   1   %   c   %   p   2   %   c  \e0  \en  \e0 035  \e0
600  \eb  \e0 030  \e0 032  \e0  \en  \e0\s+2
.ft R
.fi
.sp
.PP
いくつかの制限: コンパイル済みのエントリは 4096 バイトを超えることが
できません。名前フィールドは 128 バイトを超えることができません。
.SH 関連ファイル
\*d/*/*	コンパイル済みの端末ケーパビリティデータベース
.SH 関連項目
ncurses(3), terminfo(5).
