.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)jot.1	8.1 (Berkeley) 6/6/93
.\" jpman %Id: jot.1,v 1.3 1997/07/22 17:41:47 horikawa Stab %
.\"
.TH JOT 1 "June 6, 1993"
.UC 4
.SH 名称
jot \- 連なったデータか乱数データを出力する
.SH 書式
.B jot [
options
.B ] [
\fRreps \fB[\fP begin \fB[\fP end \fB[\fP s \fB] ] ] ]\fP
.SH 解説
.I jot
は、普通は数字の増加・減少・乱数・冗長データを一行毎に
出力するために使われます。
オプションは、以下のように理解できます。
.IP \fB\-r\fP
デフォルトの並んだデータの代わりに、乱数データを作成します。
.IP \fB\-b\fP\ word
.I word
を、繰り返し出力するだけです。
.IP \fB\-w\fP\ word
.IR word
のあとに、生成されたデータを付け加え、出力します。
8 進・16 進・指数・ASCII・ゼロで埋めた表示・右詰め表現は、
適切な
.IR printf (3)
記法を
.IR word 
中で指定することで、可能です。この場合、データは追加されるというよりも、
挿入されると考えてください。
.IP \fB\-c\fP
これは、 \fB\-w %c\fP の省略形です。
.IP \fB\-s\fP\ string
.IR string 
で分けられたデータを出力します。
普通は、改行文字がデータを分割します。
.IP \fB\-n\fP
最後の改行 (通常出力に追加される) を出力しません。
.IP \fB\-p\fP\ precision
整数
.IR precision 
で指定されたデータの文字数もしくは桁数だけ表示します。
.BR \-p 
がない場合、精度値は
.I begin
と
.IR end 
の精度の大きい方です。
.B \-p
オプションは、
.BR \-w 
に続く
.IR printf (3)
記法が指定されている時には、上書きされます。
.PP
最後の 4 つの引数はそれぞれデータ数・下界・上界と、
幅の大きさまたは、乱数データのための種です。
少なくともそれらの一つが指定されなければなりませんが、
その他の 3 つは省略できます。
引数として
.BR \- 
を与えると、省略したと考えられます。
これらの中から 3 つの引数をどのように選んでも、4 つ目は決定されます。
4 つが指定され、計算された値
.I reps
が衝突している場合、小さい方の値が使われます。
指定された数が 3 つより少ない場合、
.IR s 
を除いて、
デフォルト値が左から右へ割り当てられます。
.IR s は、
.I begin
と
.I end
が共に指定される場合を除き、デフォルト値が設定されます。
.PP
4 つの引数に対するデフォルトは、乱数データが要求された時を除いて、
それぞれ、100, 1, 100, 1です。
乱数の種
.I s
のデフォルトは、時間 (the time of day) に依存しています。
.I reps
は、符号無し整数であることが期待されています。ゼロが与えられた場合は、
無限回数となります。
.I begin
と
.I end
は、実数、もしくは文字の場合は対応する ASCII 値としてあたえられます。
最後の引数は、実数でなければなりません。
.PP
乱数値は、
.IR random (3)
を使って得られます。
名前
.I jot
は、
APL 中の関数
.IR iota 
の部分から来ています。
.SH 使用例
.de IC
.IP
.ss 36
.ft B
..
.de NC
.br
.ss 12
.PP
..
.PP
コマンド
.IC
jot 21 \-1 1.00
.NC
は、\-1 から 1 へ増加する等間隔の数字を 21 個出力します。
ASCII 文字集合は、以下のように入力することで生成されます。
.IC
jot \-c 128 0
.NC
xaa から xaz までの文字列は以下のようにして表示できます。
.IC
jot \-w xa%c 26 a
.NC
20 個のランダムな 8 文字は以下のようにして作成できます。
.IC
jot \-r \-c 160 a z | rs \-g 0 8
.NC
無限に、
.IR yes 
を出したい場合は、以下のようにします。
.IC
jot \-b yes 0
.NC
30 個の
.IR ed (1)
の置換コマンドを、2, 7, 12 行等のように (5 行毎に ) 適用したい場合は、
以下の結果を使ってください。
.\"(訳中)(5 行毎に )は訳者が挿入しました。
.\" 2.2.1R 対象(1997/05/06) Takeshi MUTOH <mutoh@info.nara-k.ac.jp>
.IC
jot \-w %ds/old/new/ 30 2 \- 5
.NC
だぶりのある 9, 9, 8, 8, 7 の様な列は、
適切に精度とステップの大きさを設定することで、以下のように実現できます。
.IC
jot 0 9 \- \-.5
.NC
ファイルが正確に 1024 バイトであるように作成したければ、
以下を使ってください。
.IC
jot \-b x 512 > block
.NC
最後に、タブを 4 つのスペースに設定し、10 カラム目からはじまって、
132 カラム目で終るようにするためには、以下のようにしてください。
.IC
expand \-\`jot \-s, \- 10 132 4\`
.NC
80 文字以上の全ての行を表示するためには、以下を使ってください。
.IC
grep \`jot \-s "" \-b . 80\`
.NC
.SH 関連項目
ed(1), expand(1), rs(1), yes(1), printf(3), random(3), expand(1)
