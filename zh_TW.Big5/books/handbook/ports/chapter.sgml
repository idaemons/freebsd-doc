<!--
     The FreeBSD Documentation Project

     $FreeBSD$
     Original revision: 1.258
-->

<chapter id="ports">
  <title>軟體套件管理篇：Packages 及 Ports 機制</title>

  <sect1 id="ports-synopsis">
    <title>概述</title>

    <indexterm><primary>ports</primary></indexterm>
    <indexterm><primary>packages</primary></indexterm>
    <para>儘管 FreeBSD 在 base system 已加了很多系統工具。
	然而，在實務運用上，您可能仍需要安裝額外的軟體。
	FreeBSD 提供了 2 種安裝應用程式的套件管理系統︰Ports Collection(以 soucre 來編譯、安裝) 和 
	package(預先編譯好的 binary 檔)。上述的方式，無論要用哪一種，都可以由像是 CDROM 
	等或網路上來安裝想裝的最新版軟體。</para>

    <para>讀完這章，您將了解：</para>

    <itemizedlist>
      <listitem>
	<para>如何以 packages 來安裝軟體。</para>
      </listitem>
      <listitem>
	<para>如何以 ports 來安裝軟體。</para>
      </listitem>
      <listitem>
	<para>已安裝的 packages 或 ports 要如何移除。</para>
      </listitem>
      <listitem>
	<para>如何更改(override) ports collection 所使用的預設值。</para>
      </listitem>
      <listitem>
	<para>如何在套件管理系統中，找出想裝的軟體。</para>
      </listitem>
      <listitem>
	<para>如何升級已安裝的軟體。</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="ports-overview">
    <title>安裝軟體的各種方式介紹</title>

    <para>通常要在 &unix; 系統上安裝軟體時，有幾個步驟要作：</para>

    <procedure>
      <step>
	<para>先下載該軟體壓縮檔(tarball)，有可能是原始碼或是 binary 執行檔。</para>
      </step>

      <step>
	<para>解開該壓縮檔。(通常是以 &man.compress.1; , &man.gzip.1; 或 &man.bzip2.1; 壓縮的)</para>
      </step>

      <step>
	<para>閱讀相關文件檔，以了解如何安裝。(通常檔名是 <filename>INSTALL</filename> 或
	 <filename>README</filename>， 或在 <filename>doc/</filename> 目錄下的一些文件)</para>
      </step>

      <step>
	<para>如果所下載的是原始碼，可能要先修改 <filename>Makefile</filename> 或是執行
	 <command>./configure</command> 之類的 script ，接著再編譯該軟體。</para>
      </step>

      <step>
	<para>最後測試再測試與安裝。</para>
      </step>
    </procedure>

    <para>如果一切順利的話，就這麼簡單。如果在安裝非專門設計(移植)給 FreeBSD 的軟體時出問題，
	那可能需要修改一下它的程式碼，才能正常使用。</para>

    <para>當然，我們可以在 FreeBSD 上使用上述的傳統方式來安裝軟體，但是，我們還有更簡單的選擇。
	FreeBSD 提供了兩種省事的軟體管理機制： packages 和 ports。就在寫這篇文章的時候，
	已經有超過 &os.numports; 個 port 軟體可以使用。</para>

    <para>所謂的 FreeBSD package 就是別人把該應用程式編譯、打包完畢。
      該 package 會包括該應用程式的所有執行檔、設定檔、文件等。
      而下載到硬碟上的 package 都可透過 FreeBSD 套件管理指令來進行管理，比如：
      &man.pkg.add.1;、&man.pkg.delete.1;、&man.pkg.info.1;等指令。
      所以，只需簡單打個指令就可輕鬆安裝新的應用程式了。</para>

    <para>而 FreeBSD port 則是用一些檔案，來自動處理應用程式的安裝流程。</para>

    <para>Remember that there are a number of steps you would normally
      carry out if you compiled a program yourself (downloading,
      unpacking, patching, compiling, installing).  The files that
      make up a port contain all the necessary information to allow
      the system to do this for you.  You run a handful of simple
      commands and the source code for the application is
      automatically downloaded, extracted, patched, compiled, and
      installed for you.</para>

    <para>事實上，ports 機制還可以用來產生 packages，以便他人可以用 
      <command>pkg_add</command> 來安裝，或是稍後會介紹到的其他套件管理指令。</para>

    <para>Both packages and ports understand
      <emphasis>dependencies</emphasis>.  Suppose you want to install
      an application that depends on a specific library being
      installed.  Both the application and the library have been made
      available as FreeBSD ports and packages.  If you use the
      <command>pkg_add</command> command or the ports system to add
      the application, both will notice that the library has not been
      installed, and automatically install the library first.</para>

    <para>Given that the two technologies are quite similar, you might
      be wondering why FreeBSD bothers with both.  Packages and ports
      both have their own strengths, and which one you use will depend
      on your own preference.</para>

    <itemizedlist>
      <title>Package 好處在於：</title>
      
      <listitem>
	<para>A compressed package tarball is typically smaller than
	  the compressed tarball containing the source code for the
	  application.</para>
      </listitem>

      <listitem>
	<para>Packages do not require any additional compilation.  For
	  large applications, such as
	  <application>Mozilla</application>,
	  <application>KDE</application>, or
	  <application>GNOME</application> this can be important,
	  particularly if you are on a slow system.</para>
      </listitem>

      <listitem>
	<para>Packages do not require any understanding of the process
	  involved in compiling software on FreeBSD.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <title>Ports 好處在於：</title>
      
      <listitem>
	<para>Packages are normally compiled with conservative options,
	  because they have to run on the maximum number of systems.  By
	  installing from the port, you can tweak the compilation options to
	  (for example) generate code that is specific to a Pentium
	  IV or Athlon processor.</para>
      </listitem>

      <listitem>
	<para>Some applications have compile time options relating to
	  what they can and cannot do.  For example,
	  <application>Apache</application> can be configured with a
	  wide variety of different built-in options.  By building
	  from the port you do not have to accept the default options,
	  and can set them yourself.</para>

	<para>In some cases, multiple packages will exist for the same
	  application to specify certain settings.  For example,
	  <application>Ghostscript</application> is available as a
	  <filename>ghostscript</filename> package and a
	  <filename>ghostscript-nox11</filename> package, depending on
	  whether or not you have installed an X11 server.  This sort
	  of rough tweaking is possible with packages, but rapidly
	  becomes impossible if an application has more than one or
	  two different compile time options.</para>
      </listitem>

      <listitem>
	<para>The licensing conditions of some software distributions forbid
	  binary distribution.  They must be distributed as source
	  code.</para>
      </listitem>

      <listitem>
	<para>Some people do not trust binary distributions.  At least
	  with source code, you can (in theory) read through it and
	  look for potential problems yourself.</para>
      </listitem>

      <listitem>
	<para>If you have local patches, you will need the source in order to
	  apply them.</para>
      </listitem>

      <listitem>
	<para>Some people like having code around, so they can read it
	  if they get bored, hack it, borrow from it (license
	  permitting, of course), and so on.</para>
      </listitem>
    </itemizedlist>

    <para>To keep track of updated ports, subscribe to the
      &a.ports; and the &a.ports-bugs;.</para>

    <warning>
      <para>在安裝軟體前，最好先看 <ulink
	url="http://vuxml.freebsd.org/"></ulink> 內是否有該軟體的安全漏洞通報。
      </para>

      <para>此外，也可以裝 <filename
	role="package">security/portaudit</filename>，它會自動檢查所有已裝的
	的軟體是否有已知的安全漏洞，另外，它還會在裝軟體的編譯過程前先行檢查。
	也可以在裝了某些軟體之後，用 <command>portaudit -F -a</command> 
	來作全面強制安檢。</para>
    </warning>

    <para>The remainder of this chapter will explain how to use
      packages and ports to install and manage third party software on
      FreeBSD.</para>
  </sect1>

  <sect1 id="ports-finding-applications">
    <title>尋找想裝的軟體</title>

    <para>在安裝任何軟體之前，你必須先了解你想要什麼的軟體，以及該軟體叫做什麼名稱。</para>

    <para>FreeBSD 上可裝的軟體清單不斷在增加中，
      不過，我們很慶幸有幾種方式可以來找你想裝的軟體：</para>

    <itemizedlist>
      <listitem>
	<para>FreeBSD 網站上有更新頻繁的軟體清單，在
	  <ulink
	  url="&url.base;/ports/index.html">http://www.FreeBSD.org/ports/</ulink>。
	  各 ports 皆依其性質而分門別類，and you may either
	  search for an application by name (if you know it), or see
	  all the applications available in a category.</para>
      </listitem>

      <indexterm><primary>FreshPorts</primary></indexterm>

      <listitem>
	<para>Dan Langille 維護 FreshPorts 網站，網址在 <ulink
	  url="http://www.FreshPorts.org/"></ulink>。  FreshPorts
	  tracks changes to the applications in the ports tree as they
	  happen, allows you to <quote>watch</quote> one or more
	  ports, and can send you email when they are updated.</para>
      </listitem>

      <indexterm><primary>FreshMeat</primary></indexterm>

      <listitem>
	<para>If you do not know the name of the application you want,
	  try using a site like FreshMeat (<ulink
	  url="http://www.freshmeat.net/"></ulink>) to find an
	  application, then check back at the FreeBSD site to see if
	  the application has been ported yet.</para>
      </listitem>

      <listitem>
	<para>If you know the exact name of the port, but just need to
        find out which category it is in, you can use the
        &man.whereis.1; command.
	Simply type <command>whereis
        <replaceable>file</replaceable></command>, where
        <replaceable>file</replaceable> is the program you want to
        install.  If it is found on your system, you will be told
        where it is, as follows:</para>

      <screen>&prompt.root; <userinput>whereis lsof</userinput>
lsof: /usr/ports/sysutils/lsof</screen>

      <para>This tells us that <command>lsof</command> (a system
	utility) can be found in the
	<filename>/usr/ports/sysutils/lsof</filename>
	directory.</para></listitem>

      <listitem>
	<para>Yet another way to find a particular port is by using the
        Ports Collection's built-in search mechanism.  To use the
        search feature, you will need to be in the
        <filename>/usr/ports</filename> directory.  Once in that
        directory, run <command>make search
        name=<replaceable>program-name</replaceable></command> where
        <replaceable>program-name</replaceable> is the name of the
        program you want to find.  For example, if you were looking
        for <command>lsof</command>:</para>

      <screen>&prompt.root; <userinput>cd /usr/ports</userinput>
&prompt.root; <userinput>make search name=lsof</userinput>
Port:   lsof-4.56.4
Path:   /usr/ports/sysutils/lsof
Info:   Lists information about open files (similar to fstat(1))
Maint:  obrien@FreeBSD.org
Index:  sysutils
B-deps: 
R-deps: </screen>

      <para>The part of the output you want to pay particular
        attention to is the <quote>Path:</quote> line, since that
        tells you where to find the port.  The other information
        provided is not needed in order to install the port, so it
        will not be covered here.</para>

      <para>For more in-depth searching you can also use <command>make
       search key=<replaceable>string</replaceable></command> where
       <replaceable>string</replaceable> is some text to search for.
       This searches port names, comments, descriptions and
       dependencies and can be used to find ports which relate to a
       particular subject if you do not know the name of the program
       you are looking for.</para>

      <para>In both of these cases, the search string is case-insensitive.
       Searching for <quote>LSOF</quote> will yield the same results as 
       searching for <quote>lsof</quote>.</para>
      </listitem>

    </itemizedlist>
  </sect1>

  <sect1 id="packages-using">
    <sect1info>    
      <authorgroup>
        <author>
          <firstname>Chern</firstname>
	  <surname>Lee</surname>
	  <contrib>Contributed by </contrib>
        </author>
      </authorgroup>
    <!-- 30 Mar 2001 -->
    </sect1info>

    <title>使用 Packages 管理機制</title>

    <sect2>
      <title>Package 的安裝方式</title>
      <indexterm>
        <primary>packages</primary>
        <secondary>installing</secondary>
      </indexterm>
    
      <indexterm>
        <primary><command>pkg_add</command></primary>
      </indexterm>
      <para>可以用 &man.pkg.add.1; 從本機上或者透過網路來安裝任一 FreeBSD package。</para>

      <example>
        <title>手動下載、安裝 Package (譯者chinsan: 這方法比較不便，建議改用 pkg_add -r )</title>

        <screen>&prompt.root; <userinput>ftp -a <replaceable>ftp2.FreeBSD.org</replaceable></userinput>
Connected to ftp2.FreeBSD.org.
220 ftp2.FreeBSD.org FTP server (Version 6.00LS) ready.
331 Guest login ok, send your email address as password.
230-
230-     This machine is in Vienna, VA, USA, hosted by Verio.
230-         Questions? E-mail freebsd@vienna.verio.net.
230-
230-
230 Guest login ok, access restrictions apply.
Remote system type is UNIX.
Using binary mode to transfer files.
<prompt>ftp></prompt> <userinput>cd /pub/FreeBSD/ports/packages/sysutils/</userinput>
250 CWD command successful.
<prompt>ftp></prompt> <userinput>get lsof-4.56.4.tgz</userinput>
local: lsof-4.56.4.tgz remote: lsof-4.56.4.tgz
200 PORT command successful.
150 Opening BINARY mode data connection for 'lsof-4.56.4.tgz' (92375 bytes).
100% |**************************************************| 92375       00:00 ETA
226 Transfer complete.
92375 bytes received in 5.60 seconds (16.11 KB/s)
<prompt>ftp></prompt> <userinput>exit</userinput>
&prompt.root; <userinput>pkg_add <replaceable>lsof-4.56.4.tgz</replaceable></userinput></screen>
      </example>

      <para>If you do not have a source of local packages (such as a
        FreeBSD CD-ROM set) then it will probably be easier to use the
        <option>-r</option> option to &man.pkg.add.1;.  This will
        cause the utility to automatically determine the correct
        object format and release and then fetch and install the
        package from an FTP site.
      </para>

      <indexterm>
        <primary><command>pkg_add</command></primary></indexterm>
      <screen>&prompt.root; <userinput>pkg_add -r <replaceable>lsof</replaceable></userinput></screen>

      <para>The example above would download the correct package and
	add it without any further user intervention.
	If you want to specify an alternative &os; Packages Mirror,
	instead of the main distribution site, you have to set
	<envar>PACKAGESITE</envar> accordingly, to
	override the default settings.  &man.pkg.add.1;
	uses &man.fetch.3; to download the files, which honors various
	environment variables, including
	<envar>FTP_PASSIVE_MODE</envar>, <envar>FTP_PROXY</envar>, and
	<envar>FTP_PASSWORD</envar>.  You may need to set one or more
	of these if you are behind a firewall, or need to use an
	FTP/HTTP proxy.  See &man.fetch.3; for the complete list.
	Note that in the example above
	<literal>lsof</literal> is used instead of
	<literal>lsof-4.56.4</literal>.  When the remote fetching
	feature is used, the version number of the package must be
	removed.  &man.pkg.add.1; will automatically fetch the latest
	version of the application.</para>

      <note>
	<para>&man.pkg.add.1; will download the latest version of
	  your application if you are using &os.current; or
	  &os.stable;.  If you run a -RELEASE version, it will grab
	  the version of the package that was built with your
	  release.  It is possible to change this behavior by
	  overriding the <envar>PACKAGESITE</envar> environment
	  variable.  For example, if you run a &os;&nbsp;5.4-RELEASE
	  system, by default &man.pkg.add.1; will try to fetch
	  packages from
	  <literal>ftp://ftp.freebsd.org/pub/FreeBSD/ports/i386/packages-5.4-release/Latest/</literal>.
	  If you want to force &man.pkg.add.1; to download
	  &os;&nbsp;5-STABLE packages, set <envar>PACKAGESITE</envar>
	  to
	  <literal>ftp://ftp.freebsd.org/pub/FreeBSD/ports/i386/packages-5-stable/Latest/</literal>.
	</para>
      </note>

      <para>Package files are distributed in <filename>.tgz</filename>
          and <filename>.tbz</filename> formats.  You can find them at <ulink
          url="ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/packages/"></ulink>,
          or on the FreeBSD CD-ROM distribution.  Every CD on the
          FreeBSD 4-CD set (and the PowerPak, etc.) contains packages
          in the <filename>/packages</filename> directory.  The layout
          of the packages is similar to that of the
          <filename>/usr/ports</filename> tree.  Each category has its
          own directory, and every package can be found within the
          <filename>All</filename> directory.
      </para>

      <para>The directory structure of the package system matches the
        ports layout; they work with each other to form the entire
        package/port system.
      </para>

    </sect2>

    <sect2>
      <title>管理 Packages</title>

      <indexterm>
        <primary>packages</primary>
        <secondary>managing</secondary>
      </indexterm>
      <para>&man.pkg.info.1; is a utility that lists and describes 
        the various packages installed.
      </para>

      <indexterm>
        <primary><command>pkg_info</command></primary>
      </indexterm>
      <screen>&prompt.root; <userinput>pkg_info</userinput>
cvsup-16.1          A general network file distribution system optimized for CV
docbook-1.2         Meta-port for the different versions of the DocBook DTD
...</screen>
      <para>&man.pkg.version.1; is a utility that summarizes the
        versions of all installed packages.  It compares the package 
        version to the current version found in the ports tree.
      </para> 
      <indexterm>
        <primary><command>pkg_version</command></primary>
      </indexterm>
        <screen>&prompt.root; <userinput>pkg_version</userinput>
cvsup                       =
docbook                     =
...</screen>

      <para>The symbols in the second column indicate the relative age
        of the installed version and the version available in the
        local ports tree.</para>

      <informaltable frame="none" pgwide="1">
        <tgroup cols="2">
	  <thead>
            <row>
              <entry>符號</entry>
              <entry>代表意義</entry>
            </row>
          </thead>

 	  <tbody>
  	    <row>
	    <entry>=</entry> <entry>The version of the
	    installed package matches the one found in the
	    local ports tree.</entry>
  	    </row>
 
        <row><entry>&lt;</entry>
	<entry>The installed version is older than the one available
	in the ports tree.</entry>
	</row>

        <row><entry>&gt;</entry><entry>The installed version is newer
          than the one found in the local ports tree. (The local ports
          tree is probably out of date.)</entry></row>

        <row><entry>?</entry><entry>The installed package cannot be
	  found in the ports index.  (This can happen, for instance, if an
	  installed port is removed from the Ports Collection or
	  renamed.)</entry></row>

        <row><entry>*</entry><entry>There are multiple versions of the
        package.</entry></row>

	</tbody>
	</tgroup>
    </informaltable>
    </sect2>

    <sect2>
      <title>移除已安裝的 Package</title>
      <indexterm>
        <primary><command>pkg_delete</command></primary>
      </indexterm>
      <indexterm>
        <primary>packages</primary>
        <secondary>deleting</secondary>
      </indexterm>
      <para>若要移除已裝的軟體，那麼請多利用 &man.pkg.delete.1; 工具，比如：
      </para>

      <screen>&prompt.root; <userinput>pkg_delete <replaceable>xchat-1.7.1</replaceable></userinput></screen>
    </sect2>

    <sect2>
      <title>其他細節部份</title>
      <para>所有已裝的 package 資訊都會存到 <filename>/var/db/pkg</filename> 目錄內，
        在該目錄下可以找到記載已裝的軟體檔案清單及該軟體簡介的檔案。
      </para>
    </sect2>
  </sect1>
  
  <sect1 id="ports-using">
    <title>使用 Ports 管理機制</title>

    <para>下面我們會介紹如何使用 Ports Collection 來安裝、移除軟體的基本用法。
      至於其他可用的 <command>make</command> 詳細用法與環境設定，可參閱 &man.ports.7;。</para>

    <sect2 id="ports-tree">
      <title>記得安裝 Ports Collection</title>

      <para>在安裝任一 ports  之前，必須先裝上
	Ports Collection —— 它主要是由 <filename>/usr/ports</filename> 內一堆
	<filename>Makefiles</filename>, patches 以及一些軟體簡介檔所組成的。
      </para>

      <para>在裝 FreeBSD 時，若忘了在 <application>sysinstall</application> 內勾選要裝 Ports Collection 的話，
        沒關係，可以照下列方式來安裝 ports collection：</para>

      <procedure>
	<title>CVSup 方式</title>

	<para>使用 <application>CVSup</application> 是安裝、更新 Ports Collection 的快速方法之一。
	  若想更瞭解 <application>CVSup</application> 用法的話，請參閱 <link linkend="cvsup">使用 CVSup</link>。</para>

	<para>第一次跑 <application>CVSup</application> 之前，請先確認 <filename role="directory">/usr/ports</filename>
	  是空的！ 若你已經裝了 Ports Collection ，但又自行加上其他 patch 檔，那麼 <application>CVSup</application>
	  並不會刪除你自行加上的 patch 檔，這樣可能會導致要安裝某些軟體時，發生 patch 失敗或編譯失敗。</para>

	<step>
	  <para>安裝 <filename role="package">net/cvsup-without-gui</filename> package：</para>

	  <screen>&prompt.root; <userinput>pkg_add -r cvsup-without-gui</userinput></screen>

	  <para>細節用法請參閱 <link linkend="cvsup-install">安裝 CVSup</link>(<xref
	      linkend="cvsup-install">)。</para>
	</step>

	<step>
	  <para>執行 <command>cvsup</command>：</para>

	  <screen>&prompt.root; <userinput>cvsup -L 2 -h <replaceable>cvsup.tw.FreeBSD.org</replaceable> /usr/share/examples/cvsup/ports-supfile</userinput></screen>

	  <para>請把
	    <replaceable>cvsup.tw.FreeBSD.org</replaceable> 請改成離你比較近(快)的 
	    <application>CVSup</application> Server。
	    這部分可以參閱完整的 <link linkend="cvsup-mirrors">CVSup mirror</link> 站列表(<xref
	    linkend="cvsup-mirrors">)。</para>

	  <note>
	    <para>One may want to use his own
	      <filename>ports-supfile</filename>, for example to avoid
	      the need of passing the <application>CVSup</application>
	      server on the command line.</para>

	    <procedure>
	      <step>
		<para>In this case, as <username>root</username>, copy
		  <filename>/usr/share/examples/cvsup/ports-supfile</filename>
		  to a new location, such as
		  <filename>/root</filename> or your home
		  directory.</para>
	      </step>

	      <step>
		<para>Edit <filename>ports-supfile</filename>.</para>
	      </step>

	      <step>
		<para>Change
		  <replaceable>CHANGE_THIS.FreeBSD.org</replaceable>
		  to a <application>CVSup</application> server near
		  you.  See <link linkend="cvsup-mirrors">CVSup
		  Mirrors</link> (<xref linkend="cvsup-mirrors">) for
		  a complete listing of mirror sites.</para>
	      </step>

	      <step>
		<para>And now to run <command>cvsup</command>, use the
		  following:</para>

		<screen>&prompt.root; <userinput>cvsup -L 2 <replaceable>/root/ports-supfile</replaceable></userinput></screen>
	      </step>
	    </procedure>
	  </note>
	</step>

	<step>
	  <para>Running the &man.cvsup.1; command later will download and apply all
	    the recent changes to your Ports Collection, except
	    actually rebuilding the ports for your own system.</para>
	</step>
      </procedure>

      <procedure>
	<title>Portsnap 方式</title>

	<para>&man.portsnap.8; is an alternative system for distributing the
	  Ports Collection.  It was first included in &os;&nbsp;6.0.  On older
	  systems, you can install it from <filename
	  role="package">sysutils/portsnap</filename> port:</para>

	<screen>&prompt.root; <userinput>pkg_add -r portsnap</userinput></screen>

	<para>Please refer to <link linkend="portsnap">Using Portsnap</link>
	  for a detailed description of all <application>Portsnap</application>
	  features.</para>

	<step>
	  <para>Create an empty directory <filename
	    role="directory">/usr/ports</filename> if it does not exists.</para>

	  <screen>&prompt.root; <userinput>mkdir /usr/ports</userinput></screen>
	</step>

	<step>
	  <para>Download a compressed snapshot of the Ports Collection into
	    <filename role="directory">/var/db/portsnap</filename>.  You can
	    disconnect from the Internet after this step, if you wish.</para>

	  <screen>&prompt.root; <userinput>portsnap fetch</userinput></screen>
	</step>

	<step>
	  <para>If you are running <application>Portsnap</application> for the
	    first time, extract the snapshot into <filename
	    role="directory">/usr/ports</filename>:
	  </para>

	  <screen>&prompt.root; <userinput>portsnap extract</userinput></screen>

	  <para>If you already have a populated <filename
	    role="directory">/usr/ports</filename> and you are just updating,
	    run the following command instead:</para>

	  <screen>&prompt.root; <userinput>portsnap update</userinput></screen>
	</step>

      </procedure>

      <procedure>
	<title>Sysinstall 方式</title>

	<para>This method involves using <application>sysinstall</application>
	  to install the Ports Collection from the installation media.  Note
	  that the old copy of Ports Collection from the date of the release
	  will be installed.  If you have Internet access, you should always
	  use one of the methods mentioned above.</para>

	<step>
	  <para>As <username>root</username>, run
	    <command>sysinstall</command>
	    (<command>/stand/sysinstall</command> in &os;
	    versions older than 5.2) as shown below:</para>

	  <screen>&prompt.root; <userinput>sysinstall</userinput></screen>
	</step>

	<step>
	  <para>Scroll down and select <guimenuitem>Configure</guimenuitem>,
	    press <keycap>Enter</keycap>.</para>
	</step>

	<step>
	  <para>Scroll down and select
	    <guimenuitem>Distributions</guimenuitem>, press
	    <keycap>Enter</keycap>.</para>
	</step>

	<step>
	  <para>Scroll down to <guimenuitem>ports</guimenuitem>, press
	    <keycap>Space</keycap>.</para>
	</step>

	<step>
	  <para>Scroll up to <guimenuitem>Exit</guimenuitem>, press
	    <keycap>Enter</keycap>.</para>
	</step>

	<step>
	  <para>Select your desired installation media, such as CDROM,
	    FTP, and so on.</para>
	</step>

	<step>
	  <para>Scroll up to <guimenuitem>Exit</guimenuitem> and press
	    <keycap>Enter</keycap>.</para>
	</step>

	<step>
	  <para>Press <keycap>X</keycap> to exit
	    <application>sysinstall</application>.</para>
	</step>
      </procedure>
    </sect2>

    <sect2 id="ports-skeleton">
      <title>Ports 的安裝方式</title>

      <indexterm>
        <primary>ports</primary>
        <secondary>installing</secondary>
      </indexterm>
      <para>The first thing that should be explained when it comes to
        the Ports Collection is what is actually meant by a
        <quote>skeleton</quote>.  In a nutshell, a port skeleton is a
        minimal set of files that tell your FreeBSD system how to
        cleanly compile and install a program.  Each port skeleton
        includes:</para>

      <itemizedlist>
	<listitem>
	  <para>A <filename>Makefile</filename>.  The
	    <filename>Makefile</filename> contains various statements
	    that specify how the application should be compiled and
	    where it should be installed on your system.</para>
	</listitem>

	<listitem>
	  <para>A <filename>distinfo</filename> file.  This file
	    contains information about the files that must be
	    downloaded to build the port and their checksums, to
	    verify that files have not been corrupted during the
	    download using &man.md5.1;.</para>
	</listitem>
	
	<listitem>
	  <para>A <filename>files</filename> directory.  This
	    directory contains patches to make the program compile and
	    install on your FreeBSD system.  Patches are basically
	    small files that specify changes to particular files.
	    They are in plain text format, and basically say
	    <quote>Remove line 10</quote> or <quote>Change line 26 to
	    this ...</quote>.  Patches are also known as
	    <quote>diffs</quote> because they are generated by the
	    &man.diff.1; program.</para>

	  <para>This directory may also contain other files used to build
	    the port.</para>
	</listitem>

	<listitem>
	  <para>A <filename>pkg-descr</filename> file.  This is a more
	    detailed, often multiple-line, description of the program.</para>
	</listitem>
	
	<listitem>
	  <para>A <filename>pkg-plist</filename> file.  This is a list
	    of all the files that will be installed by the port.  It
	    also tells the ports system what files to remove upon
	    deinstallation.</para>
	</listitem>
      </itemizedlist>

      <para>Some ports have other files, such as
        <filename>pkg-message</filename>.  The ports system uses these
        files to handle special situations.  If you want more details
        on these files, and on ports in general, check out the <ulink
        url="&url.books.porters-handbook;/index.html">FreeBSD Porter's
        Handbook</ulink>.</para>

      <para>The port includes instructions on how to build source
        code, but does not include the actual source code.  You can
        get the source code from a CD-ROM or from the Internet.
        Source code is distributed in whatever manner the software
        author desires.  Frequently this is a tarred and gzipped file,
        but it might be compressed with some other tool or even
        uncompressed.  The program source code, whatever form it comes
        in, is called a <quote>distfile</quote>.  The two methods for
        installing a &os; port are described below.</para>

      <note>
        <para>You must be logged in as <username>root</username> to
          install ports.</para>
      </note>

      <warning>
	<para>Before installing any port, you should be sure to have
	  an up-to-date Ports Collection and you should check <ulink
	  url="http://vuxml.freebsd.org/"></ulink> for security issues
	  related to your port.</para>

	<para>A security vulnerabilities check can be automatically
	  done by <application>portaudit</application> before any new
	  application installation.  This tool can be found in the
	  Ports Collection (<filename
	  role="package">security/portaudit</filename>).  Consider
	  running <command>portaudit -F</command> before installing a
	  new port, to fetch the current vulnerabilities database.  A
	  security audit and an update of the database will be
	  performed during the daily security system check.  For more
	  information read the &man.portaudit.1; and &man.periodic.8;
	  manual pages.</para>
      </warning>

      <para>The Ports Collection makes an assumption that you have a working
	Internet connection.  If you do not, you will need to put a copy of the
	distfile into <filename>/usr/ports/distfiles</filename>
	manually.</para>

	<para>To begin, change to the directory for the port you want to
	  install:</para>

        <screen>&prompt.root; <userinput>cd /usr/ports/sysutils/lsof</userinput></screen>

        <para>Once inside the <filename>lsof</filename> directory, you
	  will see the port skeleton.  The next step is to compile, or
	  <quote>build</quote>, the port.  This is done by simply
	  typing <command>make</command> at the prompt.  Once you have
	  done so, you should see something like this:</para>

        <screen>&prompt.root; <userinput>make</userinput>
&gt;&gt; lsof_4.57D.freebsd.tar.gz doesn't seem to exist in /usr/ports/distfiles/.
&gt;&gt; Attempting to fetch from ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/.
===&gt;  Extracting for lsof-4.57
...
[extraction output snipped]
...
&gt;&gt; Checksum OK for lsof_4.57D.freebsd.tar.gz.
===&gt;  Patching for lsof-4.57
===&gt;  Applying FreeBSD patches for lsof-4.57
===&gt;  Configuring for lsof-4.57
...
[configure output snipped]
...
===&gt;  Building for lsof-4.57
...
[compilation output snipped]
...
&prompt.root;</screen>

        <para>Notice that once the compile is complete you are
	  returned to your prompt.  The next step is to install the
	  port.  In order to install it, you simply need to tack one word
	  onto the <command>make</command> command, and that word is
	  <command>install</command>:</para>

        <screen>&prompt.root; <userinput>make install</userinput>
===&gt;  Installing for lsof-4.57
...
[installation output snipped]
...
===&gt;   Generating temporary packing list
===&gt;   Compressing manual pages for lsof-4.57
===&gt;   Registering installation for lsof-4.57
===&gt;  SECURITY NOTE: 
      This port has installed the following binaries which execute with
      increased privileges.
&prompt.root;</screen>

        <para>Once you are returned to your prompt, you should be able to
          run the application you just installed.  Since 
	  <command>lsof</command> is a
	  program that runs with increased privileges, a security
	  warning is shown.  During the building and installation of
	  ports, you should take heed of any other warnings that
	  may appear.</para>

	<para>It is a good idea to delete the working subdirectory,
	  which contains all the temporary files used during compilation.
	  Not only it consumes a valuable disk space, it would also cause
	  problems later when upgrading to the newer version of the port.</para>

	<screen>&prompt.root; <userinput>make clean</userinput>
===&gt;  Cleaning for lsof-4.57
&prompt.root;</screen>

        <note>
          <para>You can save an extra step by just running <command>make
	    install clean</command> instead of <command>make</command>,
	    <command>make install</command> and <command>make clean</command>
	    as three separate steps.</para>
	</note>

	<note>
	  <para>Some shells keep a cache of the commands that are
	    available in the directories listed in the
	    <envar>PATH</envar> environment variable, to speed up
	    lookup operations for the executable file of these
	    commands.  If you are using one of these shells, you might
	    have to use the <command>rehash</command> command after
	    installing a port, before the newly installed commands can
	    be used.  This command will work for shells like
	    <command>tcsh</command>.  Use the <command>hash -r</command>
	    command for shells like <command>sh</command>.  Look at the
	    documentation for your shell for more information.</para>
	</note>

	<para>Some third party DVD-ROM products such as the FreeBSD Toolkit
	  from the <ulink url="http://www.freebsdmall.com/">FreeBSD
	  Mall</ulink> contain distfiles.  They can be used with the Ports
	  Collection.  Mount the DVD-ROM on <filename>/cdrom</filename>.  If
	  you use a different mount point, set <makevar>CD_MOUNTPTS</makevar>
	  make variable.  The needed distfiles will be automatically used
	  if they are present on the disk.</para>

	<note>
	  <para>Please be aware that the licenses of a few ports do
	    not allow for inclusion on the CD-ROM.  This could be
	    because a registration form needs to be filled out before
	    downloading or redistribution is not allowed, or for
	    another reason.  If you wish to install a port not
	    included on the CD-ROM, you will need to be online in
	    order to do so.</para>
	</note>

	<para>The ports system uses &man.fetch.1; to download the
	  files, which honors various environment variables, including
	  <envar>FTP_PASSIVE_MODE</envar>, <envar>FTP_PROXY</envar>,
	  and <envar>FTP_PASSWORD</envar>.  You may need to set one or
	  more of these if you are behind a firewall, or need to use
	  an FTP/HTTP proxy.  See &man.fetch.3; for the complete
	  list.</para>

	<para>For users which cannot be connected all the time, the
	  <command>make <maketarget>fetch</maketarget></command> option is
	  provided.  Just run this command at the top level directory
	  (<filename>/usr/ports</filename>) and the required files
	  will be downloaded for you.  This command will also work in
	  the lower level categories, for example:
	  <filename>/usr/ports/net</filename>.
	  Note that if a port depends on libraries or other ports this will
	  <emphasis>not</emphasis> fetch the distfiles of those ports too.
	  Replace <maketarget>fetch</maketarget> with
	  <maketarget>fetch-recursive</maketarget>
	  if you want to fetch all the dependencies of a port too.</para>

	<note><para>You can build all the ports in a category or as a
	  whole by running <command>make</command> in the top level
	  directory, just like the aforementioned <command>make
	  <makevar>fetch</makevar></command> method.  This is
	  dangerous, however, as some ports cannot co-exist.  In other
	  cases, some ports can install two different files with the
	  same filename.</para></note>

	<para>In some rare cases, users may need to acquire the
	  tarballs from a site other than the
	  <makevar>MASTER_SITES</makevar> (the location where files
	  are downloaded from).  You can override the
	  <makevar>MASTER_SITES</makevar> option with the following
	  command:</para>

	<screen>&prompt.root; <userinput>cd /usr/ports/<replaceable>directory</replaceable></userinput>
&prompt.root; <userinput>make MASTER_SITE_OVERRIDE= \
ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/ fetch</userinput></screen>

	<para>In this example we change the
	  <makevar>MASTER_SITES</makevar> option to <hostid
	  role="fqdn">ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/</hostid>.</para>

	<note><para>Some ports allow (or even require) you to provide
	  build options which can enable/disable parts of the
	  application which are unneeded, certain security options,
	  and other customizations.  A few which come to mind are
	  <filename role="package">www/mozilla</filename>, <filename
	  role="package">security/gpgme</filename>, and <filename
	  role="package">mail/sylpheed-claws</filename>.  A message
	  will be displayed when options such as these are
	  available.</para></note>

      <sect3>
        <title>更改(Override)預設的 Ports 目錄</title>

	<para>Sometimes it is useful (or mandatory) to use a different
	  distfiles and ports directory.  The
	  <makevar>PORTSDIR</makevar> and <makevar>PREFIX</makevar>
	  variables can override the default directories.  For
	  example:</para>

	<screen>&prompt.root; <userinput>make PORTSDIR=/usr/home/example/ports install</userinput></screen>

	<para>will compile the port in
	    <filename>/usr/home/example/ports</filename> and install
	    everything under <filename>/usr/local</filename>.</para>

	<screen>&prompt.root; <userinput>make PREFIX=/usr/home/example/local install</userinput></screen>

	<para>will compile it in <filename>/usr/ports</filename> and
	  install it in
	  <filename>/usr/home/example/local</filename>.</para>

	<para>And of course,</para>

	<screen>&prompt.root; <userinput>make PORTSDIR=../ports PREFIX=../local install</userinput></screen>

	<para>will combine the two (it is too long to completely write
	  on this page, but it should give you the general
	  idea).</para>

	<para>Alternatively, these variables can also be set as part
	  of your environment.  Read the manual page for your shell
	  for instructions on doing so.</para>
      </sect3>

      <sect3>
	<title>Dealing with <command>imake</command></title>

	<para>Some ports that use <command>imake</command> (a part of
	  the X Window System) do not work well with
	  <makevar>PREFIX</makevar>, and will insist on installing
	  under <filename>/usr/X11R6</filename>.  Similarly, some Perl
	  ports ignore <makevar>PREFIX</makevar> and install in the
	  Perl tree.  Making these ports respect
	  <makevar>PREFIX</makevar> is a difficult or impossible
	  job.</para>

      </sect3>
    </sect2>

    <sect2 id="ports-removing">
      <title>移除已安裝的 Ports</title>

      <indexterm>
        <primary>ports</primary>
        <secondary>removing</secondary>
      </indexterm>
      <para>Now that you know how to install ports, you are probably
        wondering how to remove them, just in case you install one and
	later on decide that you installed the wrong port.  
        We will remove our previous example (which was 
	<command>lsof</command> for
	those of you not paying attention).  Ports are being removed exactly
	the same as the packages (discussed in the <link
	linkend="packages-using">Packages section</link>), using the
	&man.pkg.delete.1; command:</para>

      <screen>&prompt.root; <userinput>pkg_delete lsof-4.57</userinput></screen>

    </sect2>

    <sect2 id="ports-upgrading">
      <title>升級已安裝的 Ports</title>

      <indexterm>
	<primary>ports</primary>
	<secondary>upgrading</secondary>
      </indexterm>
      <para>First, list outdated ports that have a newer version available in
	the Ports Collection with the &man.pkg.version.1; command:</para>

      <screen>&prompt.root; <userinput>pkg_version -v</userinput></screen>

      <note>
	<para>Once you updated your Ports Collection, before
	  attempting a port upgrade, you should check the
	  <filename>/usr/ports/UPDATING</filename> file.  This file
	  describes various issues and additional steps users may
	  encounter and need to perform when updating a port.</para>
      </note>

      <sect3 id="portupgrade">
	<title>以 Portupgrade 來升級已安裝的 Ports</title>

	<indexterm>
	  <primary>portupgrade</primary>
	</indexterm>

      <para><application>portupgrade</application> 可以輕鬆升級已裝的軟體。
	該工具可從 <filename role="package">sysutils/portupgrade</filename> port 安裝，
	安裝方式就如同其他 port 一樣，用 <command>make <makevar>install	clean</makevar></command> 指令就可以了：</para>

      <screen>&prompt.root; <userinput>cd /usr/ports/sysutils/portupgrade</userinput>
&prompt.root; <userinput>make install clean</userinput></screen>

      <para>Scan the list of installed ports with the <command>pkgdb
	-F</command> command and fix all the inconsistencies it reports.  It is
	a good idea to do this regularly, before every upgrade.</para>

      <para>When you run <command>portupgrade -a</command>,
	<application>portupgrade</application> will begin to upgrade all the
	outdated ports installed on your system.  Use the <option>-i</option>
	flag if you want to be asked for confirmation of every individual
	upgrade.</para>

      <screen>&prompt.root; <userinput>portupgrade -ai</userinput></screen>

      <para>If you want to upgrade only a
	certain application, not all available ports, use <command>portupgrade
	<replaceable>pkgname</replaceable></command>.  Include the
	<option>-R</option> flag if <application>portupgrade</application>
	should first upgrade all the ports required by the given
	application.</para>

      <screen>&prompt.root; <userinput>portupgrade -R firefox</userinput></screen>

      <para>To use packages instead of ports for installation, provide
	<option>-P</option> flag.  With this option
	<application>portupgrade</application> searches
	the local directories listed in <envar>PKG_PATH</envar>, or
	fetches packages from remote site if it is not found locally.
	If packages can not be found locally or fetched remotely,
	<application>portupgrade</application> will use ports.
	To avoid using ports, specify <option>-PP</option>.</para>

      <screen>&prompt.root; <userinput>portupgrade -PR gnome2</userinput></screen>

      <para>To just fetch distfiles (or packages, if
	<option>-P</option> is specified) without building or
	installing anything, use <option>-F</option>.
	For further information see &man.portupgrade.1;.</para>
      </sect3>

      <sect3 id="portmanager">
	<title>以 Portmanager 來升級已安裝的 Ports</title>

	<indexterm>
	  <primary>portmanager</primary>
	</indexterm>

	<para><application>Portmanager</application> 也可以用來輕鬆升級已裝的軟體。
	  該工具可從 <filename role="package">sysutils/portmanager</filename> port 安裝：</para>

	<screen>&prompt.root; <userinput>cd <filename role="directory">/usr/ports/sysutils/portmanager</filename></userinput>
&prompt.root; <userinput>make install clean</userinput></screen>

	<para>所有已裝的軟體，都可以輕鬆用類似下列指令來升級：</para>

	<screen>&prompt.root; <userinput>portmanager -u</userinput></screen>

	<para>此外，使用參數可以改為 <option>-ui</option>，如此一來 <application>Portmanager</application>
	  在升級一些有特殊選項的軟體時，就會詢問該如何升級。
	  <application>Portmanager</application> 也可以用來裝新 port。與以往常用的 
	  <command>make install clean</command> 指令不同之處在於：它會先升級你要裝的 port 所相依的所有 ports，
	  然後才開始編譯、安裝要裝的 port。</para>

	<screen>&prompt.root; <userinput>portmanager <replaceable>x11/gnome2</replaceable></userinput></screen>

	<para>若要裝的 port 之軟體相依關係有問題時，也可以用 <application>Portmanager</application> 
	  使它們重歸正軌。而 <application>Portmanager</application> 解決相依問題完畢之後，該 port 
	  也會重新編譯，以因應正確的相依關係。</para>

	<screen>&prompt.root; <userinput>portmanager <replaceable>graphics/gimp</replaceable> -f</userinput></screen>

	<para>其他運用方式，請參閱 
	  <application>Portmanager</application> 的線上手冊。</para>
      </sect3>
    </sect2>

    <sect2 id="ports-disk-space">
      <title>Ports 與硬碟空間</title>

      <indexterm>
	<primary>ports</primary>
	<secondary>disk-space</secondary>
      </indexterm>
      <para>因為使用 Ports Collection 遲早可能會用光硬碟空間，
	所以在裝完軟體後，記得要以 <command>make <makevar>clean</makevar></command> 
	指令來清除臨時的 <filename class="directory">work</filename> 目錄。
	此外，可以用下列指令來清除整個 Ports Collection 內的臨時目錄：</para>

      <screen>&prompt.root; <userinput>portsclean -C</userinput></screen>

      <para>You will accumulate a lot of old source distribution files in the
	<filename class="directory">distfiles</filename> directory over time.
	You can remove them by hand, or you can use the following command to
	delete all the distfiles that are no longer referenced by any
	ports:</para>

      <screen>&prompt.root; <userinput>portsclean -D</userinput></screen>

      <note>
	<para>The <command>portsclean</command> utility is part of the
	  <application>portupgrade</application> suite.</para>
      </note>

      <para>Do not forget to remove the installed ports once you no longer need
	them.  A nice tool to help automate this task is available from the
	<filename role="package">sysutils/pkg_cutleaves</filename> port.</para>
    </sect2>

  </sect1>

  <sect1 id="ports-nextsteps">
    <title>安裝之後，有什麼後續注意事項嗎？</title>

    <para>通常，安裝完軟體後，我們可以閱讀所附的一些文件，或需要編輯設定檔，
	來確保這個軟體能順利運作，或在機器開機的時候啟動(如果是 daemon 的話)等等。</para>

    <para>不同的軟體會有不同的設定步驟。不管怎樣，如果裝好了軟體，
	但是不知道下一步怎麼辦的時候， 可以試試看這些小技巧：</para>

    <itemizedlist>
      <listitem>
	<para>善用 &man.pkg.info.1; ，這指令可以顯示：透過套件管理系統(Packages/Ports)裝了哪些軟體、檔案裝在哪邊。舉例來說，若剛裝了 FooPackage (版本 1.0.0)，那麼下面這指令：</para>

	<screen>&prompt.root; <userinput>pkg_info -L foopackage-1.0.0 | less</userinput></screen>

	<para>就會顯示這軟體所安裝的檔案清單。 Pay
	  special attention to files in <filename>man/</filename>
	  directories, which will be manual pages,
	  <filename>etc/</filename> directories, which will be
	  configuration files, and <filename>doc/</filename>, which
	  will be more comprehensive documentation.</para>

	<para>If you are not sure which version of the application was
	  just installed, a command like this</para>

	<screen>&prompt.root; <userinput>pkg_info | grep -i <replaceable>foopackage</replaceable></userinput></screen>

	<para>will find all the installed packages that have
	  <replaceable>foopackage</replaceable> in the package name.
	  Replace <replaceable>foopackage</replaceable> in your
	  command line as necessary.</para>
      </listitem>

      <listitem>
	<para>Once you have identified where the application's manual
	  pages have been installed, review them using &man.man.1;.
	  Similarly, look over the sample configuration files, and any
	  additional documentation that may have been provided.</para>
      </listitem>

      <listitem>
	<para>If the application has a web site, check it for
	  additional documentation, frequently asked questions, and so
	  forth.  If you are not sure of the web site address it may
	  be listed in the output from</para>

	<screen>&prompt.root; <userinput>pkg_info <replaceable>foopackage-1.0.0</replaceable></userinput></screen>
	
	<para>A <literal>WWW:</literal> line, if present, should provide a URL
	  for the application's web site.</para>
      </listitem>

      <listitem>
	<para>Ports that should start at boot (such as Internet
	  servers) will usually install a sample script in
	  <filename>/usr/local/etc/rc.d</filename>.  You should
	  review this script for correctness and edit or rename it if
	  needed.  See <link
	  linkend="configtuning-starting-services">Starting
	  Services</link> for more information.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="ports-broken">
    <title>如何處理爛掉(Broken)的 Ports？</title>

      <para>如果發現某個 port 無法順利安裝、運作， 有幾種方法可以試試看：</para>

      <orderedlist>
	<listitem>
	  <para>從 <ulink url="&url.base;/support.html#gnats">Problem Report
	    資料庫</ulink> 中挖寶看看，說不定已經有人送可用的 patch 上去囉，
	    那麼或許就可以順利解決問題哩。</para>
	</listitem>

	<listitem>
	  <para>向該 port 的 maintainer 尋求協助：請打
	    <command>make maintainer</command> 或翻閱
	    <filename>Makefile</filename> 以查詢 maintainer 的
	    email address。記得寄信給 maintainer 時，要附註該 port 的名稱、版本(或是把 <filename>Makefile</filename> 內的 <literal>&dollar;FreeBSD:</literal> 那一整行附上) 以及相關錯誤訊息。</para>

	  <note>
	    <para>有些 port 不是由專門的單一 maintainer 負責，而是透過 <ulink
	      url="&url.articles.mailing-list-faq;/article.html">mailing
	      list</ulink> 的專題討論。許多(但非全部)的聯絡 email 格式通常是
	      <email role="nolink">freebsd-list名稱@FreeBSD.org</email>。發問時，請記得把『freebsd-list名稱』改為相關討論的 mailing list 名稱。</para>

	    <para>尤其當 port 的 maintainer 欄位是
	      <email role="nolink">freebsd-ports@FreeBSD.org</email> 
	        時，事實上已經沒人當該 port maintainer 了。
	        因此若該 port 仍有修正或其他技術支援的話，相關討論都會在 freebsd-ports 郵遞論壇上出現。
	        喔，對了，如果有熟悉該軟體者，志願當該 port maintainer 的話，我們也都很歡迎您的加入喔。</para>
	  </note>

	  <para>若 port maintainer 沒有回覆您的信件， 則可以用 &man.send-pr.1; 
	    來提交問題報告 PR。(請參閱 <ulink
	    url="&url.articles.problem-reports;/article.html">Writing
	    FreeBSD Problem Reports</ulink>)。</para>
	</listitem>

        <listitem>
	  <para>試試看修正它吧!  <ulink
	    url="&url.books.porters-handbook;/index.html">Porter's
	    Handbook</ulink> 包括了 <quote>Ports</quote> 
	    架構的細節部份，這些書中內容有助您修好有問題的 port 甚至提交自己的 port﹗</para>
	</listitem>

	<listitem>
	  <para>從較近的 FTP 站點下載編譯好的 package。
	    package collection 的最上游站是在 <hostid
	    role="fqdn">ftp.FreeBSD.org</hostid> 上的 <ulink
	    url="ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/packages/">packages
	    目錄</ulink>內，但請記得先檢查是否已有 <ulink
	    url="http://mirrorlist.FreeBSD.org/">local mirror</ulink>
	    站!  通常情況下這些 package 都可以直接使用，而且應該比自行編譯快一些。
	    用 &man.pkg.add.1; 即可順利安裝 package 。</para>
	</listitem>
      </orderedlist>
  </sect1>

</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
