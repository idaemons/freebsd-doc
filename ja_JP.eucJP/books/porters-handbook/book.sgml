<!--
     The FreeBSD Documentation Project
     The FreeBSD Japanese Documentation Project

     Original revision: 1.120
     $FreeBSD: doc/ja_JP.eucJP/books/porters-handbook/book.sgml,v 1.23 2000/09/15 07:41:37 hrs Exp $
-->

<!DOCTYPE BOOK PUBLIC "-//FreeBSD//DTD DocBook V3.1-Based Extension//EN" [
<!ENTITY % man PUBLIC "-//FreeBSD//ENTITIES DocBook Manual Page Entities//EN">
%man;

<!ENTITY % bookinfo PUBLIC "-//FreeBSD//ENTITIES DocBook BookInfo Entities//EN">
%bookinfo;

<!ENTITY % authors SYSTEM "../handbook/authors.ent"> %authors;
<!ENTITY % jauthors SYSTEM "../handbook/jauthors.ent"> %jauthors;
<!ENTITY % mailing-lists PUBLIC "-//FreeBSD//ENTITIES DocBook Mailing List Entities//JP">
%mailing-lists;
]>

<book>
  <bookinfo>
    <title>FreeBSD port 作成者のためのハンドブック</title>

    <authorgroup>
      <corpauthor>FreeBSD ドキュメンテーションプロジェクト</corpauthor>
    </authorgroup>

    <pubdate>2000 年 4 月</pubdate>

    <copyright>
      <year>2000</year>
      <holder role="mailto:doc@FreeBSD.org">The FreeBSD Documentation
	Project</holder>
    </copyright>

    <abstract>
      <para>このハンドブックは FreeBSD port 作成者 (porter)
        向けに, 具体的な port の作成方法や注意点などをまとめたものです.</para>

      <para>日本語版の作成は FreeBSD
        日本語ドキュメンテーションプロジェクト (FreeBSD doc-jp) が行なっています.
        日本語訳および, 日本語版のみに関することは
        FreeBSD &a.jp.doc-jp; において日本語で議論されています.
      </para>

      <para>文書の日本語訳に関するお問い合わせや,
        文書の原文に関する問い合わせをしたいが英語が得意でないという方は
        FreeBSD &a.jp.doc-jp; まで, 日本語でコメントをお寄せください.</para>
    </abstract>
      
    &bookinfo.legalnotice;

  </bookinfo>

  <chapter>
    <title>自分で port を作成するには</title>

    <para>自分で port を作ることや既存の port
      の更新作業に興味があるのですか, それはすばらしい!</para>

    <para>これから, FreeBSD 用の portを 作る際の,
      いくつかのガイドラインを説明します.
      もし, 既存の port を更新したいと考えているなら,
      まずこの文書を読み, 次に
      <xref linkend="port-upgrading">を読んでください.</para>
    
    <para>この文書では十分に詳細がわからない場合には,
      <filename>/usr/ports/Mk/bsd.port.mk</filename> を参照してください.
      このファイルは, port の Makefile が例外なくインクルードしているものです.
      これには細かくコメントが書かれていますので, Makefile
      を読むのにあまり慣れていない人でも,
      たくさんの情報を得ることができると思います.
      また, port 特有の質問は &a.ports; へお願いします.
    </para>
      
    <note>
      <para>ここでは, 変更可能な変数(<makevar><replaceable>VAR</replaceable></makevar>)
        の一部についてのみ記述しています.
        ほとんどの変数は<filename>bsd.port.mk</filename>
        の始めに記述があります.
        また, このファイルは非標準のタブ設定を使用しています.
        <application>Emacs</application> や <application>Vim</application>
        はファイルのロード時にこれを認識しますが,
        <command>vi</command> と <command>ex</command> は
        ファイルをロードしてから <command>:set tabstop=4</command>
        とタイプすることで, 正しい値を設定する
        ことができます.</para>
    </note>
  </chapter>
    
  <chapter id="quick-porting">
    <title>3 分間 porting</title>

    <para>この節では, 簡単な port の方法について説明します.
      多くの場合これ では不十分ですが,
      まあうまくいくかどうか試してみて損はないでしょ う.</para>
    
    <para>まず, 元の tar ファイルを
      <makevar>DISTDIR</makevar>
      に置きます.
      デフォルトは
      <filename>/usr/ports/distfiles</filename>
      です.</para>
    
    <note>
      <para>以下では,
        ソフトウェアがそのままコンパイル可能なことを仮定しています.
        つまり FreeBSD マシンで動かすために,
        変更がまったく必要ないという意味です.
        もし何か変更が必要な場合には, 次の節も参照する必要があります.</para>
    </note>
    
    <sect1>
      <title><filename>Makefile</filename> の作成</title>
      
      <para>最小限の<filename>Makefile</filename>
        は次のようなものです.</para>
        
      <programlisting>
# New ports collection makefile for:	oneko
# Date created:	5 December 1994
# Whom:		asami
#
# &#36;FreeBSD&#36;
#

PORTNAME=	oneko
PORTVERSION=	1.1b
CATEGORIES=	games
MASTER_SITES=	ftp://ftp.cs.columbia.edu/archives/X11R5/contrib/

MAINTAINER=	asami@FreeBSD.org

MAN1=		oneko.1
MANCOMPRESSED=	yes
USE_IMAKE=	yes

.include &lt;bsd.port.mk&gt;</programlisting>

      <para>おわかりでしょうか.
        <literal>&#36;FreeBSD&#36;</literal>がある行の内容については,
        気にしないでください.
        これはこのファイルが ports ツリーに書き込まれるときに
        CVS によって自動的に書き込まれます.
        もっと詳しい例が見たければ,
        <link linkend="porting-samplem">Makefile
          のサンプル</link>の節をご覧ください.</para>
    </sect1>

    <sect1>
      <title>package 記述ファイルの作成</title>
      
      <para>package にするしないに関わらず,
        どのような port でも三つの記述ファイルが必要です.
        それは <filename>pkg</filename> サブディレクトリにある,
        <filename>COMMENT</filename>,
        <filename>DESCR</filename>,
        そして <filename>PLIST</filename>です.</para>
      
      <sect2>
        <title><filename>COMMENT</filename></title>
        
        <para>これには, その port についての説明を一行で書きます.
          package の名前,
          バージョン番号等は<emphasis>含めない</emphasis>でください.
          コメントは大文字で始め, 最後のピリオドは付けないでください.
          たとえば, こんな具合です.</para>
        
        <programlisting>
A cat chasing a mouse all over the screen</programlisting>
      </sect2>

      <sect2>
        <title><filename>DESCR</filename></title>
        
        <para>これは, そのソフトウェアについての少し長い説明を記述します.
          その port が何をするのかについて,
          数段落程度の簡潔な解説があれば十分です.</para>
        
        <note>
          <para>このファイルは,
            マニュアルでも使用方法やコンパイル方法についての細かい説明書でも<emphasis>ありません</emphasis>.
            特に <emphasis><filename>README</filename>
              ファイルやマニュアルページをコピーしようとしてしている場合には注意してください</emphasis>.
            これらは多くの場合, その port の簡潔な説明になっていなかったり,
            扱いにくい形式
            (マニュアルページの場合, 行を揃えるために空白が調整されます)
            になっていたりします.
            もしこのソフトウェアに公式のウェブサイトがあれば,
            ここに書いてください.
            自動化ツールが正しく動作するように,
            ウェブサイトのうちの<emphasis>一つ</emphasis>には先頭に
            <literal>WWW:</literal> を付け加えてください.</para>
        </note>
        
        <para>このファイルの最後にあなたの名前を書くことが推奨されています.
          たとえば, こんな具合です.</para>
        
        <programlisting>
This is a port of oneko, in which a cat chases a poor mouse all over
the screen.
 :
(うんぬん.)

WWW: http://www.oneko.org/

- Satoshi
asami@cs.berkeley.edu</programlisting>
      </sect2>
      
      <sect2>
        <title><filename>PLIST</filename></title>
        
        <para>このファイルには,
          この port によってインストールされるファイルが列挙されます.
          このファイルは package を作る際のリストとして使われるため,
          <quote>パッキングリスト (packing list)</quote>
          とも呼ばれます.
          ここに書かれているファイル名は,
          インストール時のプレフィックス
          (普通は
          <filename>/usr/local</filename> か
          <filename>/usr/X11R6</filename>)
          からの相対パスです.
          <makevar>MAN<replaceable>n</replaceable></makevar>
          変数を使用する場合
          (使用することが推奨されています)
          には, マニュアルはここに入れないでください.</para>
        
        <para>簡単な例を載せておきましょう.</para>

        <programlisting>
bin/oneko
lib/X11/app-defaults/Oneko
lib/X11/oneko/cat1.xpm
lib/X11/oneko/cat2.xpm
lib/X11/oneko/mouse.xpm
@dirrm lib/X11/oneko</programlisting>

        <para>パッキングリストの詳細については,
            &man.pkg.create.1; のマニュアルページを参照してください.</para>

        <note>
          <para>すべてのファイルを列挙しなければなりませんが,
            ディレクトリ名は必要ありません.
            また, ports
            がインストール時にディレクトリを作成する場合には
            <literal>@dirrm</literal> の行を加えて,
            その port
            が削除されるときにそのディレクトリも削除されるようにしてください. </para>
          
          <para>このファイルにはファイル名をアルファベット順に並べるようにします.
            そうすることで port のアップグレートの際,
            確認作業が楽に行なえるようになります.</para>
          
          <para>パッキングリストを手で作るのは,
            時にとても退屈な作業になります.
            もし多数のファイルをインストールする port なら,
            <link linkend="porting-autoplist">パッキングリストを自動生成</link
              >すれば時間の節約になるかも知れません.</para>
        </note>
      </sect2>
    </sect1>
      
    <sect1>
      <title>チェックサムファイルの作成</title>
      
      <para><command>make makesum</command>
        と入力するだけです.
        <filename>bsd.port.mk</filename> にルールがあるので,
        自動的に <filename>files/md5</filename> が生成されます.</para>
    </sect1>

    <sect1 id="porting-testing">
      <title>port のテスト</title>

      <para>package 化を含めてその port が正しく動くことを確認してください.
        以下の重要なポイントを確認してください.</para>
      
      <itemizedlist>
        <listitem>
          <para><filename>PLIST</filename> にその port
            がインストールしないものが含まれていないこと.</para>
        </listitem>
        
        <listitem>
          <para><filename>PLIST</filename> にその port
            がインストールするすべてのものが含まれていること.</para>
        </listitem>
        
        <listitem>
          <para><maketarget>reinstall</maketarget>
            ターゲットを使うことによって,
            何度でもインストールが可能なこと.</para>
        </listitem>
        
        <listitem>
          <para>deintall
            の際に<link linkend="porting-cleaning"
                        >後片付け</link>をすること.</para>
        </listitem>
      </itemizedlist>

      <procedure>
        <title>推奨されるテストの手順</title>
        
        <step>
          <para><command>make install</command></para>
        </step>
        
        <step>
          <para><command>make package</command></para>
        </step>
        
        <step>
          <para><command>make deinstall</command></para>
        </step>
        
        <step>
          <para><command>pkg_add <replaceable>package 名</replaceable></command></para>
        </step>
        
        <step>
          <para><command>make deinstall</command></para>
        </step>
        
        <step>
          <para><command>make reinstall</command></para>
        </step>
        
        <step>
          <para><command>make package</command></para>
        </step>
      </procedure>
      
      <para><maketarget>package</maketarget> および
        <maketarget>deinstall</maketarget>
        の段階でどんな警告
        (warning)
        も出力されないことを確認してください.
        ステップ 3 の後,
        新しいディレクトリがすべて正しく消去されているかを確認してください.
        また, ステップ 4 の後にそのソフトウェアを使用してみて,
        package からインストールされた場合に正しく動作するかを
        確認してください.</para>
    </sect1>
    
    <sect1 id="porting-portlint">
      <title><command>portlint</command> によるチェック</title>
      
      <para><command>portlint</command>を使って,
        あなたの port が FreeBSD のガイドラインに沿っているかを確認してください.
        <command>portlint</command> プログラムは
        Ports Collection に含まれています.
        特に <link linkend="porting-samplem">Makefile</link>
        が正しい形式になっているか,
        <link linkend="porting-pkgname">package</link>
        の名前が正しいかをチェックするのに良いでしょう.</para>
    </sect1>
    
    <sect1 id="porting-submitting">
      <title>port の提出</title>

      <para>まず<link linkend="porting-dads">やって良いことといけないこと</link>に関する節を読んでください.</para>

      <para>さあ, あなたの port に満足したら,
        あとはそれを FreeBSD のメインの ports ツリーに置き, 皆に使ってもらうだけです.
        今ある
        <filename>work</filename> ディレクトリや
        <filename>pkgname.tgz</filename> という package
        は必要ありませんから, まずこれらを消去してください.
        あとはバグレポートの中に
        <command>shar `find port_dir`</command>
        の出力を &man.send-pr.1; プログラムを使用して送ってください
        (&man.send-pr.1; についての詳細は<ulink url="../handbook/contrib-how.html#CONTRIB-GENERAL">バグ報告と一般的な論評</ulink>を参照してください).
        もし, 圧縮していない状態で 20KB 以上あるような port あれば,
        圧縮して tar ファイルにして,
        バグレポートに入れる前に &man.uuencode.1; を使用してください
        (20KB 以下のものを tar ファイルにして送っても良いのですが,
        あまり歓迎されません).
        バクレポートの
        category は <literal>ports</literal>,
        class は <literal>change-request</literal>
        を必ず使用してください
        (レポートを <literal>confidential</literal> (秘密)
        にしないようにしてください!).
        また, port 化したプログラムの短い説明文を
        バグレポートの <quote>Description</quote> フィールドに追加して,
        shar もしくは uuencode した tar ファイルを 
        <quote>Fix</quote> フィールドに追加するようにしてください.
        後者は, ports
        管理の作業をスクリプトで行なっているコミッターの助けとなります.</para>
      
      <para>もう一度,
        <emphasis>オリジナルのソースファイル,
          <filename>work</filename> ディレクトリ,
          <command>make package</command>
          で作成した package が含まれていないこと</emphasis>を確認してください.</para>
      
      <note>
        <para>以前, 新しい port を FreeBSD の ftp サイト
          (<hostid role="fqdn">ftp.FreeBSD.org</hostid>)
          にアップロードするようにお願いしたことがありますが,
          現在このサイトの <filename>incoming</filename>
          ディレクトリは読み出し不可になっており,
          いまでは推奨されていません.
          たくさんの海賊版ソフトウェアがそこに置かれたためです.</para>
      </note>
      
      <para>わたしたちは, 何か不明な点があったらあなたに確認した後,
        それをツリーへ置きます. あなたの名前は
        FreeBSD ハンドブックやその他のファイルの
        <quote>Additional FreeBSD contributors</quote>
        のリストにも載るでしょう.
        う〜ん, 素晴らしい. <!-- smiley -->:-)</para>
      <!-- kuriyama - should use link tag? -->

      <note>
        <para>わたしたちが作業しやすいように,
          障害報告の概要 (synopsis) は適切に記述してください.
          たとえば新しい port の提出なら
          <quote>New port: &lt;port の簡単な説明&gt;</quote>,
          port の更新なら
          <quote>Update port: &lt;カテゴリ&gt;/&lt;port 名&gt; &lt;更新内容の簡単な説明&gt;</quote>
          というようなものが歓迎されます.
          こういう方法で報告するように心がけていれば,
          誰かがその報告をすぐに見つけ,
          処理できる確率がぐっと大きくなるのです.</para>
      </note>      
    </sect1>
  </chapter>

  <chapter>
    <title>本格的な port</title>
    
    <para>残念ながら移植がそう簡単ではなく,
      動かすために多少の変更が必要な場合も多いでしょう.
      この節では, Ports Collection の方法論にのっとって,
      そのような場合にどのように変更を施し,
      動くようにしたら良いかを順を追って説明します.</para>
    
    <sect1>
      <title>port 構築の詳細</title>
      
      <para>まず, あなたが port のディレクトリで
        <command>make</command>
        と入力してから起こる一連の出来事について,
        順を追って説明します.
        ここを読むときには, 他のウィンドウで同時に
        <filename>bsd.port.mk</filename>
        も開いておくと良いかも知れません.</para>
      
      <para>しかし,
        <filename>bsd.port.mk</filename>
        が何をしているのか完全に理解 できなくても心配する必要はありません.
        そう多くの人が理解して いるわけではないですから...
        <!-- smiley --><emphasis>f(^_^;)</emphasis></para>
      
      <procedure>
        <step>
          <para>まず, <maketarget>fetch</maketarget>
            というターゲットが実行されます.
            この <maketarget>fetch</maketarget>
            ターゲットはローカルディスクの
            <makevar>DISTDIR</makevar>
            に配布ファイルがあるようにするのが役目です.
            もし, <maketarget>fetch</maketarget>
            が必要なファイルを
            <makevar>DISTDIR</makevar>
            に見つけることができなければ,
            <filename>Makefile</filename>
            に指定されている URL
            <makevar>MASTER_SITES</makevar>,
            そして FreeBSD の FTP サイトである
            <ulink url="ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/">ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/</ulink>
            (ここには, わたしたちが取ってきたファイルをバックアップとして置いてあります)
            へ探しにいきます.
            そして, ユーザのサイトがインターネットに直接接続されている場合には,
            <makevar>FETCH</makevar>
            を使いその名前のファイルを取ってきて,
            <makevar>DISTDIR</makevar>
            に保存します.</para>
        </step>
        
        <step>
          <para>次に実行されるのは
            <maketarget>extract</maketarget> ターゲットです.
            これは <makevar>DISTDIR</makevar>
            にある配布ファイル
            (普通は gzip された tar ファイル)
            を読み, ソースを一時的な作業ディレクトリ
            <makevar>WRKDIR</makevar>
            (デフォルトは <filename>work</filename>)
            に展開します.</para>
        </step>
        
        <step>
          <para>次に,
            <maketarget>patch</maketarget>
            というターゲットが実行されます.
            まず, <makevar>PATCHFILES</makevar>
            に定義されている, すべてのパッチを適用します.
            次にもし
            <makevar>PATCHDIR</makevar>
            (デフォルトは <filename>patches</filename> サブディレクトリ)
            にパッチが存在すれば,
            これらをアルファベット順に適用します.</para>
        </step>
        
        <step>
          <para>次に実行されるターゲットは
            <maketarget>configure</maketarget>
            です.  これには, いろいろな場合があります.</para>
          
          <orderedlist>
            <listitem>
              <para><filename>scripts/configure</filename>
                が存在すれ場合, それが実行されます.</para>
            </listitem>
            
            <listitem>
              <para><makevar>HAS_CONFIGURE</makevar>
                あるいは <makevar>GNU_CONFIGURE</makevar>
                がセットされていれば,
                <filename><makevar>WRKSRC</makevar>/configure</filename>
                が実行されます.</para>
            </listitem>
            
            <listitem>
              <para><makevar>USE_IMAKE</makevar>
                がセットされていれば,  <makevar>XMKMF</makevar>
                (デフォルト: <command>xmkmf -a</command>)
                が実行されます.</para>
            </listitem>
          </orderedlist>
        </step>
        
        <step>
          <para>最後に <maketarget>build</maketarget>
            というターゲットが実行されます.
            これはその port の専用の作業ディレクトリ
            (<makevar>WRKSRC</makevar>)
            に移動し, コンパイルするのが役目です.
            <makevar>USE_GMAKE</makevar> がセットされていれば
            GNU <command>make</command> が使用されます.
            そうでなければ FreeBSD の
            <command>make</command>
            が使用されます.</para>
        </step>
      </procedure>
      
      <para>上記はデフォルトのルールです. さらに,
        <maketarget>pre-<replaceable>何とか</replaceable></maketarget>
        や
        <maketarget>post-<replaceable>何とか</replaceable></maketarget>
        というターゲットが定義してあったり,
        そのような名前のスクリプトが
        <filename>scripts</filename>
        サブディレクトリに置いてある場合には,
        それらはデフォルトの動作の前後に実行されます.</para>
      
      <para>たとえば,
        <maketarget>post-extract</maketarget>
        というターゲットが
        <filename>Makefile</filename> で定義されていて,
        <filename>pre-build</filename> というファイルが
        <filename>scripts</filename> サブディレクトリにあるとすると,
        <maketarget>post-extract</maketarget>
        ターゲットは通常の展開動作の後に呼び出され,
        <filename>pre-build</filename>
        スクリプトはデフォルトのコンパイルのルールが実行される前に実行されます.
        もし動作が簡単であれば, <filename>Makefile</filename>
        のターゲットを使用することが推奨されています.
        なぜなら, その port
        が何らかのデフォルトではない動作を必要とするのかどうかが一箇所にまとめて書いてあった方が,
        他の人に理解しやすいからです.</para>
      
      <para>デフォルトの動作は
        <filename>bsd.port.mk</filename> の
        <maketarget>do-<replaceable>何とか</replaceable></maketarget>
        というターゲットで行なわれます.
        たとえば port を展開するコマンドは
        <maketarget>do-extract</maketarget>
        というターゲットにあります.
        もしデフォルトのターゲットに不満があれば,
        <maketarget>do-<replaceable>何とか</replaceable></maketarget>
        というターゲットを再定義することによってどのようにでも直すことができます.</para>
      
      <note>
        <para><quote>メイン</quote>のターゲット
          (たとえば
          <maketarget>extract</maketarget> や
          <maketarget>configure</maketarget> 等)
          は, すべての前段階が実行されていることを確認してから,
          実際のターゲットやスクリプトを呼び出す以外のことは行ないません.
          bsd.port.mk
          はこれらが変更されることは仮定していませんので,
          たとえば展開の仕方を変更したいときには
          <maketarget>do-extract</maketarget>
          を変更し,
          絶対に
          <maketarget>extract</maketarget>
          には手を触れないでください.</para>
      </note>
      
      <para>これで, ユーザが
        <command>make</command>
        と入力したときに何が起こるのかが理解できたと思います.
        では, 完璧な port を手順を追って作ってみましょう.</para>
    </sect1>
    
    <sect1>
      <title>オリジナルのソースの入手</title>
      
      <para>オリジナルのソースを,
        (普通は) 圧縮された tar ファイルの形
        (<filename><replaceable>foo</replaceable>.tar.gz</filename>
        あるいは
        <filename><replaceable>foo</replaceable>.tar.Z</filename>)
        で入手して, それを
        <makevar>DISTDIR</makevar>
        にコピーします.
        可能なかぎり,
        広く使われている<emphasis>主流の</emphasis>ソースを使用するようにしてください.</para>
      
      <para>ネットワークへの接続の良好な FTP/HTTP
        サイトを見つけることができなかったり,
        頭にくるような非標準的な形式しか持っていないサイトしか見つけられないときには,
        自分で管理する確実な ftp か http サーバ (たとえば,
        あなたのホームページ)
        に置くこと ができます.
        <makevar>MASTER_SITES</makevar>
        に正しく反映されていることを確認してください.</para>
      
      <para>そのような都合の良く安心な置き場所が見つけられない場合
        (あなたが FreeBSD のコミッターであれば
        <hostid>freefall</hostid> の自分の <filename>public_html</filename>
        ディレクトリに置けます),
        <!-- kuriyama - lack of tanslation -->
        わたしたちが
        <filename>ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/LOCAL_PORTS/</filename>
        という場所を提供することもできます.
        この場所は変数 <makevar>MASTER_SITE_LOCAL</makevar>
        を使って参照してください.
        これについての問い合わせのメールは &a.ports へお願いします.
      </para>
        
	<para>その port の配布ファイルが特に理由もなくしょっちゅう変わる場合には,
	  配布ファイルをあなたのホームページに置いて
	  <makevar>MASTER_SITES</makevar>
          の最初に入れてください.
	  こうすることによって, ユーザ利用する場合に
	  <errorname>checksum mismatch</errorname>
	  エラーが起るのを防ぎ, FreeBSD の ftp
          サイトの保守の負担を減らすことができます.
          もし, マスターサイトがたった一つしかない場合には,
	  あなたのサイトにバックアップを置いて
	  <makevar>MASTER_SITES</makevar>
	  の 2 番目に加えてください.</para>
      
      <para>あなたの port に必要ないくつかの追加パッチがインターネット上で手に入るのならば,
        それらも取ってきて
        <makevar>DISTDIR</makevar> に置きます.
        それらがメインのソースの tar
        ファイルとは別のサイトにあっても心配する必要はありません.
        そのような状況にはちゃんと対応できるようになっています
        (以下の <link linkend="porting-patchfiles">PATCHFILES
          の記述</link>をご覧ください).</para>
    </sect1>
    
    <sect1>
      <title>port の修正</title>
      
      <para>適当なディレクトリに tar ファイルを展開し,
        FreeBSD の最新のバージョン上で正しくコンパイルできるために必要なあらゆる変更を施します.
        最終的に処理は自動化するわけですから,
        何を行なったかを<emphasis>注意深く記録しておきましょう</emphasis>.
        あなたの port が完成した暁には, ファイルの削除, 追加,
        修正を含むすべての処理が自動化されたスクリプトやパッチファイルで行なえるようになっていなければなりません.</para>
      
      <para>もし, あなたの port のコンパイルやインストールのために必要な手作業があまりに多いようならば,
        Larry Wall の模範的な <application>Configure</application>
        スクリプトでも参考にしたほうが良いかも知れません.
        新しい Ports Collection は最小のディスクスペースで,
        個々の port がエンドユーザにできるだけ
        <quote>プラグ &amp; プレイ</quote>
        の状態で make できることを目指しています.</para>
      
      <note>
        <para>あなたが作成し FreeBSD の ports
          に寄付されたパッチファイル,
          スクリプトおよびその他のファイルは,
          明示的に記述されている場合を除いて
          BSD の標準的な著作権条件によりカバーされていると見なされます.</para>
      </note>
    </sect1>
    
    <sect1>
      <title>パッチの適用</title>
      
      <para>port
        の過程で追加されたり変更されたファイルは,
        再帰的 diff で変更点を取り出すことができます.
        パッチは適当にまとめて
        <filename>patch-<replaceable>xx</replaceable></filename>
        という名前のファイルに入れてください.
        <filename><replaceable>xx</replaceable></filename>
        はパッチが適用される順番を示します
        &mdash;  これらは<emphasis>アルファベット順</emphasis>,
        つまり
        <literal>aa</literal> が最初,
        次に
        <literal>ab</literal> などとなります.
        これらのファイルは
        <makevar>PATCHDIR</makevar>
        に置いておくと自動的に適用さ れるようになっています.
        すべてのパッチは
        <makevar>WRKSRC</makevar>
        (通常は, port の tar ファイルが展開されるところで,
        make が実行されるところと同じです)
        からの相対パスになります.
        修正やアップグレードを容易にするため,
        2 つ以上のパッチが同じファイルを修正するのは避けてください
        (たとえば,
        patch-aa と patch-ab が共に
        <makevar>WRKSRC</makevar>/foobar.c を修正するなど).</para>
    </sect1>
    
    <sect1>
      <title>コンフィグレーション</title>
      
      <para>カスタマイズのために追加したいコマンドがあれば,
        <filename>configure</filename>
        という名前のスクリプトに入れて
        <filename>scripts</filename> サブディレクトリに置きます.
        上で述べたように, <filename>pre-configure</filename>
        あるいは <filename>post-configure</filename> という
        <filename>Makefile</filename>
        のターゲット,
        スクリプトで処理することもできます.</para>
    </sect1>
    
    <sect1>
      <title>ユーザからの入力の扱い</title>
      
      <para>もし, その port がビルド,
        コンフィグレーション,
        インストールの際にユーザからの入力を必要とするならば,
        <filename>Makefile</filename> で
        <makevar>IS_INTERACTIVE</makevar>
        をセットしてください.
        これによって深夜,
        自動的にたくさんの port
        をコンパイルすることが可能になります.
        環境変数<envar>BATCH</envar>がセットされていると
        <symbol>IS_INTERACTIVE</symbol>
        の定義されている port はスキップされます
        (そして,
        ユーザが<envar>INTERACTIVE</envar>
        という変数をセットすると入力を必要とする
        port <emphasis>のみ</emphasis>コンパイルされます).</para>
      
      <para>もし, 適切なデフォルト設定があるのであれば,
        <makevar>PACKAGE_BUILDING</makevar>
        変数をチェックして,それが設定されている場合には,
        ユーザ入力のスクリプトを起動しないようにしてください.
        こうすることによって, CDROM や ftp に 置く
        package をわたしたちが作成することができます.
      </para>
    </sect1>
  </chapter>
  
  <chapter>
    <title><filename>Makefile</filename> の作成</title>
    
    <para><filename>Makefile</filename> の作成は非常に単純です.
      繰り返しになりますが, 始めるまえにすでにある例を見てみることをお奨めします.
      またこのハンドブックには
      <link linkend="porting-samplem">Makefile
        のサンプル</link>があります.
      それを見て, Makefile
      内の変数の順番や空行を入れるところなどの参考にしてください.
      そうすると他の人々にも読みやすいものとなります.</para>
    
    <para>では,
      <filename>Makefile</filename>
      を設計するときに問題となるところを順に追って見てみましょう.</para>
    
    <sect1>
      <title>オリジナルのソース</title>
      
      <para>ソースは
        <makevar>DISTDIR</makevar>に標準的な
        gzip された tar ファイルとして置かれていますか?
        そうであれば, 次のステップに進めます.
        そうでなければ, 変数
        <makevar>EXTRACT_CMD</makevar>,
        <makevar>EXTRACT_BEFORE_ARGS</makevar>,
        <makevar>EXTRACT_AFTER_ARGS</makevar>,
        <makevar>EXTRACT_SUFX</makevar>,
        <makevar>DISTFILES</makevar>
        を適当に書き換えないといけません.
        どれだけ変更しないといけないかは,
        あなたの port の配布ファイルがどの程度標準からかけはなれているかによります
        (最もよくある場合は
        gzip ではなく普通の compress コマンド
        で tar ファイルが圧縮されている場合で
        <literal>EXTRACT_SUFX=.tar.Z</literal>
        とするだけです).</para>
      
      <para>最悪の場合には, 自分で
        <maketarget>do-extract</maketarget>
        ターゲットを作成して,
        デフォルトを上書きすることもできます.
        しかし, そこまでする必要があることはめったにないでしょう.</para>
    </sect1>
    
    <sect1>
      <title><makevar>PORTNAME</makevar> および
        <makevar>PORTVERSION</makevar></title>
      
      <para><makevar>DISTNAME</makevar> には
        port の名前の基幹部分を入れ,
        <makevar>PORTVERSION</makevar>
        には port のバージョン番号を入れます.</para>
    </sect1>
    
    <sect1>
      <title><makevar>PKGNAMEPREFIX</makevar> および
        <makevar>PKGNAMESUFFIX</makevar></title>
      
      <para>二つのオプション変数
        <makevar>PKGNAMEPREFIX</makevar> および
        <makevar>PKGNAMESUFFIX</makevar> は,
        <makevar>PORTNAME</makevar> および
        <makevar>PORTVERSION</makevar> と結合され,
        <literal>${PKGNAMEPREFIX}${PORTNAME}${PKGNAMESUFFIX}-${PORTVERSION}</literal>
        として
        <makevar>PKGNAME</makevar> を定義します.
        この時, <link linkend="porting-pkgname">適切な package
          名を選ぶためのガイドライン</link>に沿っているか確認してください.
        特に, ハイフン (<literal>-</literal>) を
        <makevar>PORTVERSION</makevar>
        に含めることは禁止されています.
        また, package 名に
        <replaceable>language-</replaceable> もしくは
        <replaceable>compiled.specifics</replaceable>
        部分が含まれる場合, それぞれ
        <makevar>PKGNAMEPREFIX</makevar> と
        <makevar>PKGNAMESUFFIX</makevar> を使用します.
        これらを <makevar>PORTNAME</makevar> の一部として含めてはいけません.</para>
    </sect1>
    
    <sect1>
      <title><makevar>DISTNAME</makevar></title>
      
      <para><makevar>DISTNAME</makevar> は製作者が決めたソフトウェアの名前です.
        <makevar>DISTNAME</makevar> はデフォルトで
        <literal>${PORTNAME}-${PORTVERSION}</literal> となりますが,
        必要に応じて書き換えることができます.
        <makevar>DISTNAME</makevar> は二つの場所でしか使われません.
        一つ目は配布ファイルリスト
        (<makevar>DISTFILES</makevar>)
        のデフォルト
        <makevar>${DISTNAME}</makevar><makevar>${EXTRACT_SUFX}</makevar> で,
        二つ目は配布ファイルが展開されるサブディレクトリ <makevar>WRKSRC</makevar>
        のデフォルト <filename>work/<makevar>${DISTNAME}</makevar></filename> です.</para>
      
      <para><makevar>PKGNAMEPREFIX</makevar> と
        <makevar>PKGNAMESUFFIX</makevar> は        
        <makevar>DISTNAME</makevar> に影響を与えないことに注意してください.</para>
    </sect1>
    
    <sect1>
      <title><makevar>CATEGORIES</makevar></title>
      
      <para>完成した package の実体は
        <filename>/usr/ports/packages/All</filename> に置かれます.
        また, 一つかそれ以上の
        <filename>/usr/ports/packages</filename>
        のサブディレクトリからのシンボリックリンクが作られます.
        それらのサブディレクトリの名前が
        <makevar>CATEGORIES</makevar>
        という変数によって指定されます.
        これは,
        ユーザが FTPサイトや CDROM の package
        の山を渡り歩くことを容易にするためです.
        現在存在する<link linkend="porting-categories">カテゴリ</link>を見て,
        その port に適したもを選んでください.</para>
      
      <para>このリストは, この port が port ツリーのどこに
        import されるかも決定します.
        二つ以上のカテゴリを指定した場合には,
        最初のカテゴリで指定されるサブディレクトリに置かれることになります.
        適切なカテゴリを選ぶ方法については,
        <link linkend="porting-categories">カテゴリ</link>の節を参照してください.</para>
      
      <para>もしその port
        が本当に現存するすべてのものとは異なったものを必要としている場合には,
        新しいカテゴリ名を作ることもできます.
        その際には, &a.ports; 宛てに新しいカテゴリ名を提案するメールを送ってください.</para>
        
      <note>
        <para>カテゴリ名については,
          何のエラーチェックも行なわれません.
          ミスタイプがあっても
          <command>make package</command>
          は何も考えずに新しいディレクトリを作ってしまいますので注意してください.</para>
      </note>
    </sect1>
    
    <sect1>
      <title><makevar>MASTER_SITES</makevar></title>
      
      <para>オリジナルの配布ファイルを指し示す
        FTP または HTTP の URL のディレクトリ部分までを
        <makevar>MASTER_SITES</makevar> に記録します.
        スラッシュ
        (<filename>/</filename>)
        を最後につけることをお忘れなく.</para>
      
      <para>配布ファイルがシステム上に存在しないときに,
        <command>make</command>
        マクロは
        <makevar>FETCH</makevar>
        でこの変数に指定されたサイトから取ってきます.</para>
      
      <para>複数の,
        できれば異なる大陸のサイトをこのリストに入れておくことが推奨されています.
        これによって,
        広域ネットワークにトラブルがあった場合でも成功する可能性が高くなります.
        わたしたちはさらに,
        自動的に最も近いマスタサイトを検出して,
        そこから取ってくるメカニズムの導入を計画しています.</para>
      
      <para>オリジナルの
        tar ファイルが, X-contrib, GNU, Perl CPAN, TeX CTAN
        または Linux Sunsite などの有名なアーカイブにある場合には,
        <makevar>MASTER_SITE_XCONTRIB</makevar>,
        <makevar>MASTER_SITE_GNU</makevar>,
        <makevar>MASTER_SITE_PERL_CPAN</makevar>,
        <makevar>MASTER_SITE_TEX_CTAN</makevar> および
        <makevar>MASTER_SITE_SUNSITE</makevar> を利用することで,
        簡単にこれらのサイトを指定することができます.
        あとは
        <makevar>MASTER_SITE_SUBDIR</makevar>
        にアーカイブ内でのパスを指定するだけです.
        以下に例を示します.</para>
      
      <programlisting>
MASTER_SITES=         ${MASTER_SITE_XCONTRIB}
MASTER_SITE_SUBDIR=   applications</programlisting>

      <para>ユーザは<filename>/etc/make.conf</filename>中で
        <makevar>MASTER_SITE_*</makevar> 変数を設定することによって,
        デフォルトの FTP サイトではなくこれらの有名なアーカイブのミラーの中で,
        好みのものを使用することが可能です.</para>
    </sect1>

    <sect1 id="porting-patchfiles">
      <title><makevar>PATCHFILES</makevar></title>
      
      <para>もし,
        オリジナルの配布ファイル以外にも FTP か HTTP
        で手に入るパッチが必要な場合には,
        <makevar>PATCHFILES</makevar> にファイル名を,
        <makevar>PATCH_SITES</makevar>
        にサイトとディレクトリの名前を
        <makevar>MASTER_SITES</makevar>
        と同様に設定してください.</para>
      
      <para>そのパッチ内のファイル名がソースツリーの一番上のディレクトリ
        (<makevar>WKRSRC</makevar>)
        からの相対パスになっていない場合には,
        <makevar>PATCH_DIST_STRIP</makevar>を指定してください.
        たとえば, パッチ内のファイル名にすべて余計な
        <literal>foozolix-1.0/</literal>
        がついている場合には,
        <literal>PATCH_DIST_STRIP=-p1</literal>
        としてください.</para>
      
      <para>これらのパッチは圧縮されていても大丈夫です.
        ファイル名が
        <filename>.gz</filename> か <filename>.Z</filename>
        で終わる場合には自動的に復元されるようになっています.</para>
      
      <para>もしパッチが, 文書などその他のファイルと一緒に
        gzip された tarファイルで配布されている場合には,
        単純に
        <makevar>PATCHFILES</makevar>
        を使うことはできません.
        このような場合には, このパッチの tar ファイルの名前と場所を
        <makevar>DISTFILES</makevar> と
        <makevar>MASTER_SITES</makevar> に加えます. それから,
        <maketarget>pre-patch</maketarget>
        ターゲットでパッチコマンドを走らせるか, パッチファイルを
        <makevar>PATCHDIR</makevar> ディレクトリに
        <filename>patch-<replaceable>xx</replaceable></filename>
        という名前でコピーするかして,
        パッチを適用するようにします.</para>
      
      <note>
        <para>普通の gzip か compress された tar ファイルであれば,
          通常のソースファイルと一緒にその時までに展開されていますので,
          明示的に展開する必要はありません.
          もし, 後者の方法を使用する場合には,
          すでにそのディレクトリにある何かを上書きしないように注意する必要があります.
          さらに <maketarget>pre-clean</maketarget>
          ターゲットにコピーしたパッチファイルを削除するコマンドを追加するのを忘れないでください.</para>
      </note>
    </sect1>
    
    <sect1>
      <title><makevar>MAINTAINER</makevar></title>
      
      <para>あなたのメールアドレスをここに入れてください.
        お願いします.
        <!-- smiley --><emphasis remap=tt>:-)</emphasis></para>
      
      <para>保守担当者(maintainer)の役割についての詳細は,
        <ulink url="../handbook/policies.html#POLICIES-MAINTAINER">Makefile 中の MAINTAINER</ulink>
        の節をご覧ください.</para>
    </sect1>
    
    <sect1>
      <title>依存関係</title>
      
      <para>プログラムが他の port に依存する場合には,
        必要なものが自動的に作られるようにすることができます.
        そのために, 以下の
        5 つの変数が用意されています.
        よくあるケースのためにあらかじめ設定された依存変数や,
        いくつかの依存関係の制御のための変数があります.</para>
      
      <sect2>
        <title><makevar>LIB_DEPENDS</makevar></title>
        
        <para>port
          が必要とする非標準の共有ライブラリをこの変数で指定します.
          これは
          <replaceable>lib</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
          という組のリストで, そのうち
          <replaceable>lib</replaceable> が共有ライブラリの名前,
          <replaceable>dir</replaceable> がそのライブラリが見つからない場合にインストールする
          port のあるディレクトリ,
          <replaceable>target</replaceable> がそのディレクトリで呼ばれるターゲットです.
          たとえば,

          <!-- kuriyama - should use programlisting? -->
          <programlisting>
            LIB_DEPENDS= jpeg.9:${PORTSDIR}/graphics/jpeg:install
          </programlisting>
          
          と指定してあれば, まずメジャーバージョンが 9 の jpeg
          ライブラリがあるかどうか確認し,
          ない場合には ports ツリーの中の
          <filename>graphics/jpeg</filename>
          というサブディレクトリに移動し,
          そこでコンパイルとインストールを行ないます.
          <replaceable>target</replaceable> の部分は,
          <makevar>DEPENDS_TARGET</makevar>
          (デフォルトは <literal>install</literal>)
          と等しいときには省略できます.</para>
        
        <note>
          <para>前半の <replaceable>lib</replaceable> 部分は
            <command>ldconfig -r | grep -wF</command>
            への引数になります.
            この変数には正規表現を入れられません.
          </para>
        </note>
        
        <para>
          この依存関係は 2 度チェックされます. まず
          <maketarget>extract</maketarget> ターゲットで, 次に
          <maketarget>install</maketarget> でチェックされます
          (これは, その port を作成するマシンとインストールする
          マシンが違う場合でも, きちんとそのライブラリが利用できる
          ことを確認するためです). また, 依存するもの名前は package
          の中にも含まれますので, ユーザのシステムに存在しなければ,
          <command>pkg_add</command> が自動的にインストールします.
        </para>
      </sect2>
      
      <sect2>
        <title><makevar>RUN_DEPENDS</makevar></title>
        
        <para>port
          を使用する際に必要となるファイル,
          またはプログラムがあるときにはこの変数で指定します.
          これは
          <replaceable>path</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
          という組のリストで,
          <replaceable>path</replaceable>
          がファイルまたはプログラムの名前, そして
          <replaceable>dir</replaceable>
          がそれが見つからない場合に作成するためのディレクトリ名で
          <replaceable>target</replaceable>
          はそのディレクトリで呼ばれるターゲットです.
          <replaceable>path</replaceable> の最初の文字がスラッシュ
          (<literal>/</literal>) の場合にはファイルかディレクトリ
          とみなし, その存在を <command>test -e</command>
          でチェックします.
          そうでない場合には実行可能であると仮定し,
          <command>which -s</command>
          を使ってそのプログラムがユーザのサーチパス上にあるかどうか確認します.</para>
        
        <para>たとえば Makefile に以下のように書いてあるとします.</para>
        
        <programlisting>
RUN_DEPENDS=   ${PREFIX}/etc/innd:${PORTSDIR}/news/inn \
               wish8.0:${PORTSDIR}/x11-toolkits/tk80</programlisting>

        <para>まず, <filename>/usr/local/etc/innd</filename>
          というファイルかディレクトリが存在するか確認し,
          ない場合には ports ツリーの中の
          <filename>news/inn</filename>
          というサブディレクトリから作られます.
          また,
          <command>wish8.0</command>
          というプログラムがユーザのサーチパス中にあるかどうか探し,
          ない場合には同じく ports ツリーの
          <filename>x11-toolkits/tk80</filename>
          というサブディレクトリから作られます.</para>
        
        <note>
          <para>この例で, <command>innd</command>
            は実際にはプログラムです.
            このように,
            プログラムであっても標準のサーチパス以外のところにあるようなものの場合には,
            絶対パスで指定してください.</para>
        </note>
        
        <para>この依存関係は
          <maketarget>install</maketarget>
          ステージのはじめでチェックされます.
          また, package を作る際に必要となる
          port の package 名が記録され
          <command>pkg_add</command>
          を使用するとユーザのシステムに存在しない場合には自動的にそちらの
          package もインストールされるようになります.
          <replaceable>target</replaceable> の部分は,
          <makevar>DEPENdS_TARGET</makevar>
          と同じ場合には省略可能です.
        </para>
      </sect2>
      
      <sect2>
        <title><makevar>BUILD_DEPENDS</makevar></title>
        
        <para>この変数はビルドに必要なプログラムまたはファイル名を指定します.
          <makevar>RUN_DEPENDS</makevar>と同様に, これは
          <replaceable>path</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
          という組のリストです.  たとえば,

          <programlisting>BUILD_DEPENDS=unzip:${PORTSDIR}/archivers/unzip</programlisting>
          
          は
          <command>unzip</command> という名前のプログラムを探し,
          見つからない場合には
          <filename>archivers/unzip</filename>
          サブディレクトリで作れという意味になります.</para>
        
        <note>
          <para>ここで言う<quote>ビルド</quote>は,
            ファイルの展開からコンパイルまでのすべてを意味します.
            この依存関係は
            <maketarget>extract</maketarget>
            ステージからチェックされます.
            <replaceable>target</replaceable> の部分は
            <makevar>DEPENDS_TARGET</makevar>
            と同じ場合には省略可能です.</para>
        </note>
      </sect2>
      
      <sect2>
        <title><makevar>FETCH_DEPENDS</makevar></title>
        
        <para>この変数は,
          portを取ってくるのに必要なファイルまたはプロ
          グラムを指定するのに使います. 上の二つと同様に, これは
          <replaceable>path</replaceable>:<replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
          という組のリストです. たとえば, 

          <!-- kuriyama - should use programlisting? -->         
          <programlisting>
FETCH_DEPENDS=	ncftp2:${PORTSDIR}/net/ncftp2</programlisting>

          としておけば, <command>ncftp2</command>
          という名前のプログラムを探 し,
          見つからない場合には
          <filename>net/ncftp2</filename>
          サブディレクトリにいってインストールします.</para>
        
        <para>この依存関係は
          <maketarget>fetch</maketarget>
          ステージからチェックされます.
          <replaceable>target</replaceable> の部分は
          <makevar>DEPENDS_TARGET</makevar>
          と同じ場合には省略可能です.</para>
      </sect2>
      
      <sect2>
        <title><makevar>DEPENDS</makevar></title>
        
        <para>上記の四つのいずれにもあてはまらないような依存関係がある場合,
          または他の port
          がインストールされれているだけではなくソースが展開されている必要がある場合には,
          この変数を使います.
          これは上記の四つと違って特に<quote>確認</quote>するものがありませんので,
          <replaceable>dir</replaceable><optional><replaceable>:target</replaceable></optional>
          という形式のリストになります.
          <replaceable>target</replaceable> の部分は
          <makevar>DEPENDS_TARGET</makevar>
          と同じ場合には省略可能です.</para>
      </sect2>
      
      <sect2>
        <title>よくある依存関係を表す変数</title>
        
        <para>もし ports が X Window System を必要とするのであれば,
          <literal>USE_XLIB=yes</literal> を定義してください
          (これは <makevar>USE_IMAKE</makevar> が定義されていれば
          自動的に定義されます).
          BSD <command>make</command> の代りに
          GNU <command>make</command> を必要とする場合には
          <literal>USE_GMAKE=yes</literal> を,
          動作するのに GNU autoconf を必要とする場合には
          <literal>USE_AUTOCONF=yes</literal> を,
          最新の qt toolkit を使用する場合には
          <literal>USE_QT=yes</literal> を,
          perl 言語のバージョン 5 を必要とする場合には
          <literal>USE_PERL5=yes</literal>  を定義してください
          (特に最後のは重要です.  FreeBSD のいくつかの
          バージョンでは基本システムに perl5 を含みますが,
          他のものは含んでいません).</para>
      </sect2>
      
      <sect2>
        <title>依存関係に関する注意</title>
        
        <para>上で述べたように, 依存する ports
          が必要になったときに呼ばれるデフォルトのターゲットは
          <maketarget>DEPENDS_TARGET</maketarget> で,
          そのデフォルトは <literal>install</literal> です.
          これはユーザの使用する変数で port の
          <filename>Makefile</filename>
          で定義されるものではありません.
          もしあなたの port が特別な方法で依存関係を扱う必要がある場合には,
          <makevar>DEPENDS_TARGET</makevar> を再定義するのではなく
          <makevar>*_DEPENDS</makevar> 変数の
          <literal>:target</literal>
          の部分を利用してください. </para>
        
        <para><command>make clean</command>
          と入力したときには依存する port も自動的に clean されます.
          もしそうしたくない場合には
          <makevar>NOCLEANDEPENDS</makevar>
          を環境変数として設定してください.</para>
        
        <para>無条件に他の port に依存させるには, 特別に
          <literal>nonexistent</literal> という文字列を
          <makevar>BUILD_DEPENDS</makevar>  あるいは
          <makevar>RUN_DEPENDS</makevar>
          の最初のフィールドに使用してください.
          これは, 他の port のソースが必要なときのみ使用してください.
          ターゲットも指定することによって,
          コンパイルの時間を節約することができます.
          たとえば,

          <!-- kuriyama - should use programlisting? -->          
          <programlisting>
BUILD_DEPENDS=	/nonexistent:${PORTSDIR}/graphics/jpeg:extract</programlisting>

          これは, 常に JPEG port
          のディレクトリに行きソースの展開を行ないます.</para>

        <para>あなたがやりたいことが他の方法ではできない場合以外は
          <makevar>DEPENDS</makevar> を使わないでください.
          これは常に 他の port
          の作成を行い(さらにデフォルトでインストールを行い),
          package も作成します.
          もし本当にこれがあなたのやりたいことでしたら,
          代りにこれを
          <literal>BUILD_DEPENDS</literal> と
          <literal>RUN_DEPENDS</literal> で書くことをお勧めします
          &mdash; 少なくとも意図が明確になります.</para>
      </sect2>
    </sect1>

    <sect1>
      <title>ビルドのメカニズム</title>
      
      <para>GNU <command>make</command> を使う場合には,
        <literal>USE_GMAKE=yes</literal> と指定してください.
        port に GNU <command>configure</command>
        が含まれている場合には,
        <literal>GNU_CONFIGURE=yes</literal> を使います(これは,
        <literal>HAS_CONFIGURE</literal> も意味します).
        <command>configure</command> に追加の引数 (デフォルトでは,
        GNU <command>configure</command> では
        <literal>--prefix=&dollar;{PREFIX}</literal>,
        GNU でない <command>configure</command> では空)
        を渡したい場合には追加部分を
        <makevar>CONFIGURE_ARGS</makevar> で指定してください.
        そのパッケージが <command>autoconf</command>
        を使用する場合には
        <literal>USE_AUTOCONF=yes</literal>
        を使います.
        これは <makevar>GNU_CONFIGURE</makevar> も意味し,
        <command>configure</command> の前に
        <command>autoconf</command> を実行します.
      </para>
      
      <para>X Window Systemのアプリケーションなど,
        <command>imake</command>を 使って
        <filename>Imakefile</filename> から
        <filename>Makefile</filename> を作成する
        port の場合には <literal>USE_IMAKE=yes</literal> を指定してください.
        コンフィグレーションステージで自動的に
        <command>xmkmf -a</command> が実行されます.
        もし <option>-a</option> フラグが問題をもたらすなら,
        さらに
        <literal>XMKMF=xmkmf</literal>としてください.
        もし, port が <command>imake</command>
        を使用するけれども
        <maketarget>install.man</maketarget>
        ターゲットがない場合には,
        <literal>NO_INSTALL_MANPAGES=yes</literal>
        を指定してください.
        ついでに, その port のオリジナルの作者を探し出して八つ裂きにすると
        いいでしょう.
        <!-- smiley --><emphasis>(-_-#)</emphasis></para>
      
      <para>port の
        <filename>Makefile</filename> が
        <maketarget>all</maketarget>
        以外のものをメインのターゲットとしている場合には
        <makevar>ALL_TARGET</makevar> でそれを指定してください.
        <maketarget>install</maketarget> と
        <makevar>INSTALL_TARGET</makevar> も同様です.</para>
    </sect1>
  </chapter>

  <chapter>
    <title>特別な配慮</title>
    
    <para>port を作成する場合,
      考慮しなくてはいけないことがさらにいくつかあります.
      この節では,
      それらのうちもっともありがちなものについて説明します.</para>
    
    <sect1 id="porting-ldconfig">
      <title><command>ldconfig</command></title>
      
      <para>共有ライブラリをインストールするときには,
        共有ライブラリのキャッシュを更新するために port の
        <filename>Makefile</filename> の
        <maketarget>post-install</maketarget>
        ターゲットから
        <literal>&dollar;{LDCONFIG} -m</literal>
        を実行してください.
        このコマンドの引数は共有ライブラリのインストールしてあるディレクトリ
        (通常
        <filename><makevar>PREFIX</makevar>/lib</filename>)
        です.</para>
      
      <para>また, <filename>pkg/PLIST</filename> に
        <literal>@exec /sbin/ldconfig -m</literal> と
        <literal>@unexec /sbin/ldconfig -R</literal> の組を入れて,
        package をインストールした場合にも共有ライブラリがすぐ使え,
        削除の際にもシステムがまだライブラリが存在すると誤認しないようにしてください.
        この行は共有ライブラリを指定する行のすぐ後に書くのがよいでしょう.</para>
      
      <programlisting>
lib/libtvl80.so.1
@exec /sbin/ldconfig -m %D/lib
@unexec /sbin/ldconfig -R</programlisting>

      <para><emphasis>絶対に</emphasis>引数なしでただ
        <literal>ldconfig</literal> とだけ書いてある行を
        <filename>Makefile</filename> や
        <filename>pkg/PLIST</filename> ファイルに入れないでください.
        このコマンドを実行すると, 共有ライブラリのキャッシュが
        <filename>/usr/lib</filename> の内容のみとなり,
        ユーザのマシンにさまざまな問題をもたらします
        (「ぎゃぁ! この port をインストールしたら xinit
        が使えなくなっちゃった!」).
        この掟を破った者は, 永久に地獄の底で苦しみ続けるように,
        閻魔様に頼んでおきます.</para>
    </sect1>
  </chapter>

<!--

  <chapter>
    <title>ELF 対応</title>
    
    <para>FreeBSD は 3.0-RELEASE で ELF に移行しましたので,
      共有ライブラリを作成するたくさんの port を
      ELF 対応にする必要があります.
      3.0 システムは ELF としても a.out としても動作しますし,
      わたしたちは非公式ではありますが,
      できるだけ長い間 2.2
      システムのサポートをしたいと思っていますので状況は複雑です.
      以下は a.out のみに対応している port
      をどのように a.out と ELF 両方に対応させるかのガイドラインです.</para>
    
    <para>このリストの一部は移行時にしかあてはまらないものもありますが,
      古い port をアップグレードしたい場合に参考になるようにしばらくのあいだは残しておきます.</para>
    
    <sect1>
      <title>a.out ライブラリの退避</title>
      
      <para>すべての a.out ライブラリは
        <filename>/usr/local/lib</filename> から
        <filename>aout</filename> サブディレクトリに移動しなくはなりません
        (もし移動しないと, ELF ports
        がそれらをあっさり上書きしてしまいます).
        3.0-CURRENT の <filename>src/Makefile</filename> にある
        <maketarget>move-aout-libs</maketarget> ターゲット
        (<maketarget>aout-to-elf</maketarget> から呼ばれます)
        がその移動をしてくれます.
        a.out ライブラリを移動するだけなので,
        ELF と a.out の両方のライブラリが標準的なディレクトリにあるシステムでは,
        このターゲットを実行しても安全です.</para>
    </sect1>
    
    <sect1>
      <title>フォーマット</title>
      
      <para>port ツリーは package
        をそのマシンのフォーマットで作成します.
        つまり, 2.2 では a.out,
        また 3.0 では <command>`objformat`</command> の結果によって
        a.out か ELF になります.
        また, いったん a.out ライブラリをサブディレクトリに移動すると
        a.out ライブラリの作成はサポートされません
        (つまり,
        あなたがにをすれば良いのかを理解しているのならうまく作成できるかも知れませんが,
        自力でやらなければならないということです).</para>
      
      <note>
        <para>もし port が a.out でしか動作しないのなら,
          <makevar>BROKEN_ELF</makevar>
          に原因を説明する文字列を設定してください.
          この変数が設定された port は, ELF
          システム上でのビルドの際スキップされます.</para>
      </note>
    </sect1>
    
    <sect1>
      <title>PORTOBJFORMAT</title>
      
      <para><filename>bsd.port.mk</filename> において
        <makevar>PORTOBJFORMAT</makevar> は
        <literal>aout</literal> か
        <literal>elf</literal> に設定され, 環境変数
        <envar>CONFIGURE_ENV</envar>,
        <envar>SCRIPTS_ENV</envar>,
        <envar>MAKE_ENV</envar> の中で export されます
        (2.2-STABLE
        では常に <literal>aout</literal> になります).
        また,
        <literal>PORTOBJFORMAT=${PORTOBJFORMAT}</literal> として
        <maketarget>PLIST_SUB</maketarget> に渡されます
        (以下にある
        <literal>ldconfig</literal>
        に関するコメントを参照してください).</para>
      
      <para>この変数は, 以下のようにして
        <filename>bsd.port.mk</filename> 中で設定されます.</para>
      
      <programlisting>
PORTOBJFORMAT!= test -x /usr/bin/objformat && /usr/bin/objformat || echo aout</programlisting>

      <para>この変数を使って, port の make
        の過程で何をすべきかを決定すべきですが,
        もし port の <filename>configure</filename> スクリプトが元々
        ELF システムを自動的に検出するのであれば,
        <makevar>PORTOBJFORMAT</makevar>
        を参照する必要はありません.</para>
    </sect1>
    
    <sect1>
      <title>共有ライブラリの作成</title>
      
      <para>以下は, a.out と ELF
        での共有ライブラリの扱いの違いです.</para>
      
      <itemizedlist>
        <listitem>
          <para>共有ライブラリのバージョン</para>
          
          <para>ELF の共有ライブラリは
            <filename>libfoo.so.<replaceable>M</replaceable></filename>
            という名前になっていなければなりません.
            ここで <replaceable>M</replaceable>
            は単一のバージョン番号を表します.
            一方 a.out のライブラリは
            <filename>libfoo.so.<replaceable>M</replaceable>.<replaceable>N</replaceable></filename>
            という名前で,
            <replaceable>M</replaceable> はメジャーバージョン番号,
            <replaceable>N</replaceable>
            はマイナーバージョン番号になっている必要があります.
            これらを混同しないでください.
            <filename>libfoo.so.<replaceable>N</replaceable>.<replaceable>M</replaceable></filename>
            という名の ELF 共有ライブラリや
            <filename>libfoo.so.<replaceable>N</replaceable></filename>
            という名の a.out 共有ライブラリ
            (あるいはシンボリックリンク)
            は<emphasis>絶対にインストールしないでください</emphasis>.</para>
        </listitem>
        
        <listitem>
          <para>リンカコマンドライン</para>
          
          <para>直接 <command>ld</command> を使用せずに
            <command>cc -shared</command> を使用してください.
            たった一つの違いは, ELF には,
            <option>-Wl,-<replaceable>soname,libfoo.so.M</replaceable></option>
            コマンドラインにを加える必要があることです.</para>
          < ! - - kuriyama - strange Japanese representation - - >
        </listitem>
      </itemizedlist>
      
      <para>ELF のリンカを満足させるためには,
        <filename>libfoo.so</filename> から
        <filename>libfoo.so.<replaceable>N</replaceable></filename>
        へのシンボリックリンクを作る必要があります.
        これは <filename>PLIST</filename> にも加えなくてはいけませんし,
        a.out の場合でも害にはならないので
        (一部の port
        ではダイナミックリンクローディングのために必要でもあります),
        <makevar>PORTOBJFORMAT</makevar>
        の設定を気にせずに, ただ単純にリンクを作成してください.</para>
    </sect1>
    
    <sect1>
      <title><makevar>LIB_DEPENDS</makevar></title>
      
      <para>すべての port の <filename>Makefile</filename> を編集して
        <makevar>LIB_DEPENDS</makevar>
        からマイナー番号を除去する必要があり,
        正規表現のサポートも除去する必要があります
        (たとえば,
        <literal>foo\\.1\\.\\(33|40\\)</literal> から
        <literal>foo.2</literal>).
        マッチングは <command>grep -wF</command>
        を使って行われます.</para>
    </sect1>
    
    <sect1>
      <title><filename>PLIST</filename></title>
      
      <para><filename>PLIST</filename> は
        a.out のマイナー番号が 0 であれば短い
        (ELFの) 共有ライブラリの名前を含み,
        そうでなければ長い (a.out の) 名前を含んでいる必要があります.
        <makevar>PORTOBJFORMAT</makevar> が
        <literal>aout</literal> であれば,
        <filename>bsd.port.mk</filename> は自動的に
        <literal>.0</literal> を短い共有ライブラリの名前の行に付け加え,
        <makevar>PORTOBJFORMAT</makevar> が <literal>elf</literal>
        であれば,
        マイナー番号を長い共有ライブラリの名前から削除します.</para>
      
      <para>ELF システムで二つのバージョン番号を持つ共有ライブラリをインストールしたり,
        a.out システムで一つのバージョン番号しか持たない共有ライブラリをインストールするのが避けられない場合
        (たとえば他のオペレーティングシステム用の互換ライブラリをインストールする port など),
        <makevar>NO_FILTER_SHLIBS</makevar>
        変数を定義すれば前節で説明されている
        <filename>PLIST</filename>
        編集の機能が停止されます.</para>
    </sect1>
    
    <sect1>
      <title><literal>ldconfig</literal></title>
      
      < ! - - kuriyama - Eng. why literal? - - >
      <para><filename>Makefile</filename> 中の
        <literal>ldconfig</literal>
        の行は以下のようになります.</para>
      
      <programlisting>
${SETENV} OBJFORMAT=${PORTOBJFORMAT} ${LDCONFIG} -m ....</programlisting>

      <para>また <filename>PLIST</filename> 中では,</para>

      <programlisting>
@exec /usr/bin/env OBJFORMAT=%%PORTOBJFORMAT%% /sbin/ldconfig -m ...
@unexec /usr/bin/env OBJFORMAT=%%PORTOBJFORMAT%% /sbin/ldconfig -R</programlisting>

      <para>となります. これは,
        システムのデフォルトフォーマットではなく package のフォーマットに応じて,
        正しい
        <command>ldconfig</command>
        が呼ばれることを保証するためのものです.</para>
    </sect1>
  </chapter>

-->

  <chapter id="porting-masterdir">
    <title><makevar>MASTERDIR</makevar></title>
    
    <para>もし, あなたの port が変数
      (たとえば解像度とか紙のサイズなど)
      を変えたりした, ちょっと違うバージョンを作成する必要があるときには,
      ユーザが分りやすいように package ごとに別々のサブディレクトリを作成し,
      できるだけ port 間でファイルを共有するようにしてください.
      典型的な例では,
      うまく変数を使えばとても短い<filename>Makefile</filename>だけを
      一つ以外のすべてのディレクトリに置くだけで済みます.
      その短い
      <filename>Makefile</filename> には
      <makevar>MASTERDIR</makevar> を使って,
      残りのファイルがあるディレクトリを指定できます.
      また <link linkend="porting-pkgname"><makevar>PKGNAMESUFFIX</makevar></link>
      の一部に変数に使って
      package が別々の名前を持つようにしてください.</para>
    
    <para>以下がとても良い例になるでしょう.
      これは
      <filename>japanese/xdvi300/Makefile</filename>
      の一部です.</para>

    <programlisting>
PORTNAME=       xdvi
PORTVERSION=    17
PKGNAMEPREFIX=  ja-
PKGNAMESUFFIX=  ${RESOLUTION}
 :
# default
RESOLUTION?=   300
.if ${RESOLUTION} != 118 && ${RESOLUTION} != 240 && \
       ${RESOLUTION} != 300 && ${RESOLUTION} != 400
       @${ECHO} "Error: invalid value for RESOLUTION: \"${RESOLUTION}\""
       @${ECHO} "Possible values are: 118, 240, 300 (default) and 400."
       @${FALSE}
.endif</programlisting>

    <para><filename>japanese/xdvi300</filename> は通常のパッチ,
      package ファイルももっています. そこで,
      <command>make</command> と入力すると,
      デフォルトの解像度(300)を使って, 普通に port
      の作成を行います.</para>
    
    <para>他の解像度に関してですが, これが,
      <filename>xdvi118/Makefile</filename> の(コメントを除いた)
      <emphasis>すべて</emphasis>です.</para>

    <programlisting>
RESOLUTION=     118
MASTERDIR=      ${.CURDIR}/../xdvi300

.include ${MASTERDIR}/Makefile</programlisting>

    <para>(<filename>xdvi240/Makefile</filename> と
      <filename>xdvi400/Makefile</filename> も同様です).
      <makevar>MASTERDIR</makevar> が
      <filename>bsd.port.mk</filename> に
      <makevar>PATCHDIR</makevar> や <makevar>PKGDIR</makevar>
      などの通常のサブディレクトリが <filename>xdvi300</filename>
      にあることを教えます.  <literal>RESOLUTION=118</literal>
      の行が, <filename>xdvi300/Makefile</filename> の
      <literal>RESOLUTION=300</literal> の行を無効にし, port
      は解像度を118として作成されます.</para>
  </chapter>
  
  <chapter>
    <title>共有ライブラリのバージョン</title>

    <para>まず,
      <ulink url="../handbook/policies-shlib.html">共有ライブラリのバージョンについての指針</ulink>を読んで,
      共有ライブラリのバージョンを一般的にどうすれば良いかを理解してください.
      盲目的にソフトウエアの作者がちゃんと理解していると信じていてはいけません.
      多くの場合, それは間違っていますし, 細い点まで考慮することは大変重要なことです.
      なぜならわたしたちは,
      互換性がないかもしれない大量のソフトウェアを共存させようとする特殊な状況にあるからです.
      過去に不注意な port の導入が共有ライブラリに関して多大な問題を引き起したことがあります
      (今まで <filename>jpeg-6b</filename>
      がなぜ 9 というバージョン番号を持っているか不思議に思ったことはありませんか?).
      もし, 疑問があれば, &a.ports; にメールを送ってください.
      ほとんどの時間は正しい共有ライブラリのバージョンを決めることと,
      それを実現するためのパッチを作成することに終始します.</para>

<!--

    <para>しかしながら,
      同じソフトウェアの違ったバージョンのソフトウェアが既にツリーにある場合には,
      状況は非常に複雑です. < ! - - kuriyama - strange translation? - - >
      つまり FreeBSD ではユーザがリンカにどのバージョンの共有ライブラリを使用するかを指定できないからです
      (リンカは常にもっとも高いバージョンを選びます).
      これは, もし <filename>libfoo.so.3.2</filename> と
      <filename>libfoo.so.4.0</filename>
      がシステムに存在するときに, リンカに特別なアプリケーションだけ
      <filename>libfoo.so.3.2</filename>
      をリンクするよう指示する方法がないことを意味します.
      これはコンパイル時のリンクという意味では完全に見劣りします.
      この場合の唯一の解決方法は,
      共有ファイルの名前の<emphasis>ベース</emphasis>部分を変えることです.
      たとえば
      <filename>libfoo.so.4.0</filename> を
      <filename>libfoo4.so.1.0</filename> へ変えることによって,
      バージョン 3.2 とバージョン 4.0 共に他の
      port からリンクされることができるようになります.</para>

-->
    </chapter>

  <chapter id="porting-manpages">
    <title>マニュアルページ</title>

    <para><makevar>MAN[1-9LN]</makevar> 変数を使用すると,
      自動的にすべてのマニュアルを <filename>pkg/PLIST</filename>
      に加えます (つまり, マニュアルを <filename>PLIST</filename>
      に加えては<emphasis>いけません</emphasis>
      &mdash; <link linkend="porting-plist">PLIST の生成</link>
      を参照してください).
      またマニュアルを
      <filename>/etc/make.conf</filename> 中の
      <makevar>NOMANCOMPRESS</makevar> の設定に応じて,
      インストール時に自動的に圧縮したり復元したりします.</para>
    
    <para>もしあなたの port で複数のファイル名を持つマニュアルページを,
      シンボリックリンクやハードリンクを用いてインストールしようとしているなら,
      それらを識別するために <makevar>MLINKS</makevar>
      を使わなければなりません.
      port によってインストールされたリンクは,
      意図するファイルをきちんと指しているかどうかを確実なものにするため
      <filename>bsd.port.mk</filename> によって削除されたり, 再作成されたりします.
      MLINKS に含まれているマニュアルページは, 一つとして
      <filename>PLIST</filename> の中に存在していてはいけません.
    </para>
    
    <para>マニュアルをインストール時に圧縮するかどうかを
      指定するには, <makevar>MANCOMPRESSED</makevar>
      変数を使用します. この変数は三つの値をとることができます,
      <literal>yes</literal>,
      <literal>no</literal> そして
      <literal>maybe</literal> です.
      <literal>yes</literal> はマニュアルが既に圧縮されてインストールされている,
      <literal>no</literal> はされていない,
      <literal>maybe</literal> はそのソフトウェアがすでに
      <makevar>NOMANCOMPRESS</makevar> に合わせており
      <filename>bsd.port.mk</filename>
      が特別なにもする必要がないことを意味します.</para>
    
    <para><makevar>USE_IMAKE</makevar> がセットされていて,
      <makevar>NO_INSTALL_MANPAGES</makevar>
      がセットされていなければ, <makevar>MANCOMPRESSED</makevar>
      は自動的に <literal>yes</literal> に設定され,
      それ以外の場合には, <literal>no</literal> になります.
      デフォルトがあなたの port
      に合わない場合以外は明示的に設定する必要がありません.</para>
    
    <para><makevar>PREFIX</makevar> 以外のディレクトリの下に
      マニュアルを置くような port では <makevar>MANPREFIX</makevar>
      を指定することができます. さらに,
      特定のセクションのマニュアルだけ,
      標準ではない場所にインストールする場合,
      たとえばいくつかの Perl のモジュールの ports などには,
      個々のマニュアルのパスを
      <makevar>MAN<replaceable>sect</replaceable>PREFIX</makevar>
      (<replaceable>sect</replaceable> は, <literal>1-9</literal>,
      または, <literal>L</literal> か <literal>N</literal>
      を表わします) によって指定できます.</para>
    <!-- kuriyama - strange representation -->
    
    <para>マニュアルが言語特有のサブディレクトリに置かれる場合には,
      言語名を <makevar>MANLANG</makevar> に設定してください.
      この変数のデフォルト値は,
      <literal>""</literal> になっています (つまり, 英語のみ).
    </para>
    
    <para>これは, 全部をまとめた例です.</para>
    
    <programlisting>
MAN1=          foo.1
MAN3=          bar.3
MAN4=          baz.4
MLINKS=        foo.1 alt-name.8
MANLANG=       "" ja
MAN3PREFIX=    ${PREFIX}/share/foobar
MANCOMPRESSED= yes</programlisting>
    
    <para>以下の 6 個のファイルがこの port でインストールされます.</para>

      <programlisting>
${PREFIX}/man/man1/foo.1.gz
${PREFIX}/man/ja/man1/foo.1.gz
${PREFIX}/share/foobar/man/man3/bar.3.gz
${PREFIX}/share/foobar/man/ja/man3/bar.3.gz
${PREFIX}/man/man4/baz.4.gz
${PREFIX}/man/ja/man4/baz.4.gz</programlisting>

    <para>さらに
      <filename>${PREFIX}/man/man8/alt-name.8.gz</filename>
      がこの port によってインストールされるかどうかわかりませんが,
      それとは無関係に foo(1) と alt-name(8) のマニュアルページを
      指すシンボリックリンクが作成されます.
    </para>	
  </chapter>

  <chapter id="porting-motif">
    <title>Motif を必要とする port</title>
    
    <para>最近はコンパイルに Motif
      を必要とするアプリケーションが増えてきました
      (Motif 自体は有料のものがいくつかの会社から手に入りますし,
      多くのアプリケーションがコンパイル可能な無料の互換ライブラリが
      <filename>x11-toolkits/lesstif</filename>にあります).
      Motif はかなり広く使われていますし,
      製品のライセンスではライブラリを静的にリンクした実行形式は再配布が認められている場合が多いので,
      Motif を必要とするソフトウェアを簡単に動的
      (port からコンパイルする人々のために),
      静的
      (package を配布する人々のために)
      にリンクできるようなしくみが用意されています.</para>
    
    <sect1>
      <title><makevar>REQUIRES_MOTIF</makevar></title>
      
      <para>Motif
        がないとコンパイルできない port の <filename>Makefile</filename>
        ではこの変数を指定してください. これによって,
        Motif を持っていない人が
        この port をコンパイルしようとするのを未然に防ぎます.</para>
    </sect1>
    
    <sect1>
      <title><makevar>MOTIFLIB</makevar></title>
      
      <para>この変数は <filename>bsd.port.mk</filename> によって
        Motif ライブラリの指定に置き換えられます.
        ソース内の Makefile や Imakefile で Motif ライブラリを指定しているところを,
        この変数に置き換えるようにパッチを適用してください.</para>
      
      <para>代表的な例としては以下の二つがあげられます:</para>
      
      <orderedlist>
        <listitem>
          <para>Makefile か Imakefile の中で Motif ライブラリが
            <option>-lXm</option> として使われている場合には,
            かわりに
            <makevar>MOTIFLIB</makevar>
            と書いてください.</para>
        </listitem>
        
        <listitem>
          <para>Imakefile の中で <literal>XmClientLibs</literal>
            が使われている場合には, それを
            <literal>&#36;{MOTIFLIB} &#36;{XTOOLLIB} &#36;{XLIB}</literal>
            と書きかえてください.</para>
        </listitem>
      </orderedlist>
      
      <para>なお
        <makevar>MOTIFLIB</makevar> は通常,
        <literal>-L/usr/X11R6/lib   -lXm</literal> か
        <literal>/usr/X11R6/lib/libXm.a</literal>
        に置き換えられます.
        したがって前に <option>-L</option> や
        <option>-l</option> をつける必要はありません.</para>
    </sect1>
  </chapter>

  <chapter>
    <title>X11 のフォント</title>
    
    <para>もし, あなたの port が X window system
      のフォントをインストールするのであれば,
      それらを
      <filename><makevar>X11BASE</makevar>/lib/X11/fonts/local</filename>
      に置くようにしてください. このディレクトリは XFree86 release 3.3.3
      で新設されたものです.
      もしそれが存在しなければ作成し,
      ユーザに XFree86 を 3.3.3 かそれより新しいものに更新か,
      少なくともこのディレクトリを
      <filename>/etc/XF86Config</filename>
      のフォントパスに加えるように促すメッセージを出力するようにしてください.
    </para>
  </chapter>
  
  <chapter id="porting-info">
    <title>Info ファイル</title>
    
    <para>新しい版の texinfo
      (2.2.2-RELEASE およびそれ以降に入っています)
      には
      <command>install-info</command> というコマンドが含まれており,
      <filename>dir</filename>
      ファイルに項目を追加したり削除したりすることができます.
      もし, あなたの port が info 文書をインストー ルするのであれば,
      以下の指示に従ってその port および package
      が正しくユーザの
      <filename>&#36;{PREFIX}/info/dir</filename>
      ファイルを更新するようにしてください
      (この節はとても長くてすいません.
      しかし info ファイルを作りあげるためにはこれらは不可欠です.
      正しく行なえば<emphasis>美しい</emphasis>リストができますので,
      辛抱してください!
      <!-- smiley --><emphasis>:-)</emphasis></para>
    
    <para>まず, これを知っておかなければなりません.</para>

    <screen>&prompt.user; <userinput>install-info --help</userinput>
install-info [OPTION]... [INFO-FILE [DIR-FILE]]
  Install INFO-FILE in the Info directory file DIR-FILE.
  (訳注: Info ディレクトリの INO-FILE を DIR-FILE にインストールする)
Options:
--delete          Delete existing entries in INFO-FILE;
                    don't insert any new entries.
                  (訳注: INFO-FILE の中の項目を削除,
                   新しい項目は一切追加しない.)
 :
--entry=TEXT      Insert TEXT as an Info directory entry.
                  (訳注: TEXT を Info ディレクトリの項目として追加する.)
 :
--section=SEC     Put this file's entries in section SEC of the directory.
                  (訳注: このファイルの項目を Info ディレクトリの SEC
                   というセクションに置く.)
 :</screen>

    <note>
      <para>このプログラムは, 実際には info
        ファイルを<emphasis>インストール</emphasis>しません.
        単に
        <filename>dir</filename>
        ファイルにエントリを挿入したり削除したりするだけです.</para>
    </note>
    
    <para>これから, <command>install-info</command>
      を使用するように, ports を変換する 7 段階の工程を示します.
      例として
      <filename>editors/emacs</filename>
      を使用します.</para>
    
    <procedure>
      <step>
        <para>まず, texinfo のソースを見て,
          <literal>@dircategory</literal> と
          <literal>@direntry</literal> 文がないファイルについて,
          それらを追加するパッチを作成します. 以下は,
          ここでの例での patchの一部です:</para>
        
        <programlisting>
--- ./man/vip.texi.org	Fri Jun 16 15:31:11 1995
+++ ./man/vip.texi	Tue May 20 01:28:33 1997
@@ -2,6 +2,10 @@
 
 @setfilename ../info/vip
 @settitle VIP
+@dircategory The Emacs editor and associated tools
+@direntry
+* VIP: (vip).		A VI-emulation for Emacs.
+@end direntry
 
 @iftex
 @finalout
 :</programlisting>

        <para>フォーマットについては見ればわかると思います.
          <filename>dir</filename>
          というファイルに必要な項目を書いておいてくれる作者も多いので,
          まず自分で書く前にさがしてみてください.
          また, 関係する ports も調べて,
          セクションの名前やインデントなどがきちんと合っているかどうかを確認してください
          (項目のテキスト は, すべて 4 つめのタブ・ストップ
          (tab stop) から始めることを推奨します).</para>
        
        <note>
          <para>一つファイルに対して一つの info
            の項目しか書けないことに注意してください.
            これは
            <command>install-info --delete</command>
            <!-- kuriyama - not email --> のバグにより
            <email>@direntry</email>
            セクションに複数の項目を書いても初めの一つの項目しか削除してくれないからです.</para>
        </note>
        
        <para>texinfo のソースにパッチを適用する代わりに
          <literal>dir</literal> の項目を
          <command>install-info</command> の引数
          ((<option>--section</option>,
          <option>--entry</option>)
          として与えることもできますが,
          これはあまり良い方法とは思えません.
          なぜなら同じ情報を三つの場所
          (<filename>Makefile</filename>,
          <filename>PLIST</filename> の
          <literal>@exec</literal>/<literal>@unexec</literal>:
          以下参照)
          に重複して書く必要があるからです.
          しかし, もし日本語
          (あるいは, 他のマルチバイト文字)の info
          ファイルがある場合には
          <command>install-info</command>
          の特別な引数を使用する必要があるでしょう.
          なぜなら <command>makeinfo</command> がこのような
          texinfo ソースファイルを扱えないからです.
          (このようなものをどう扱うかの例としては
          <filename>japanese/skk</filename> の
          <filename>Makefile</filename> と
          <filename>PLIST</filename> を見てください).</para>
      </step>
      
      <step>
        <para>portのディレクトリに戻って
          <command>make clean; make</command> を実行し,
          info ファイルが texinfo ソースファイルから再び生成されることを確認してください.
          texinfo ソースファイルのほうが info ファイルよりも新しいので
          <command>make</command> と入力すれば
          info ファイルは再構築されるはずですが, 多くの
          <filename>Makefile</filename>
          には info ファイルの正しい依存関係が書かれていません.
          <command>emacs</command>  の場合,
          info ファイルの再構築ため
          <filename>man</filename>
          サブディレクトリに降りていくようにするためにメインの
          <filename>Makefile.in</filename>
          にパッチを適用する必要がありました.</para>

        <programlisting>
--- ./Makefile.in.org	Mon Aug 19 21:12:19 1996
+++ ./Makefile.in	Tue Apr 15 00:15:28 1997
@@ -184,7 +184,7 @@
 # Subdirectories to make recursively.  `lisp' is not included
 # because the compiled lisp files are part of the distribution
 # and you cannot remake them without installing Emacs first.
-SUBDIR = lib-src src
+SUBDIR = lib-src src man
 
 # The makefiles of the directories in $SUBDIR.
 SUBDIR_MAKEFILES = lib-src/Makefile man/Makefile src/Makefile oldXMenu/Makefile lwlib/Makefile
--- ./man/Makefile.in.org	Thu Jun 27 15:27:19 1996
+++ ./man/Makefile.in	Tue Apr 15 00:29:52 1997
@@ -66,6 +66,7 @@
 	${srcdir}/gnu1.texi \
 	${srcdir}/glossary.texi
 
+all: info
 info: $(INFO_TARGETS)
 
 dvi: $(DVI_TARGETS)</programlisting>

        <para><filename>man</filename>
          サブディレクトリでのデフォルトターゲットは,
          <maketarget>info</maketarget> で呼ばれるのに対して,
          メインの <filename>Makefile</filename> では,
          <maketarget>all</maketarget> で呼びたいので,
          二つ目のpatchが必要でした.
          また, <filename>info</filename> info ファイルのインストールも削除しました.
          なぜなら, 同じものが同じ名前ですでに
          <filename>/usr/share/info</filename>
          にあるからです
          (このパッチはここにはありません).</para>
      </step>
      
      <step>
        <para>もし, <filename>Makefile</filename> に
          <filename>dir</filename>
          ファイルをインストールする個所があれば削除します.
          あなたの port がインストールしてはいけません.
          また, <filename>dir</filename>
          ファイルを壊してしまうようなコマンドの類も削除します.</para>

        <programlisting>
--- ./Makefile.in.org	Mon Aug 19 21:12:19 1996
+++ ./Makefile.in	Mon Apr 14 23:38:07 1997
@@ -368,14 +368,8 @@
 	if [ `(cd ${srcdir}/info &amp;&amp; /bin/pwd)` != `(cd ${infodir} &amp;&amp; /bin/pwd)` ]; \
 	then \
 	  (cd ${infodir};  \
-	   if [ -f dir ]; then \
-	     if [ ! -f dir.old ]; then mv -f dir dir.old; \
-	     else mv -f dir dir.bak; fi; \
-	   fi; \
 	   cd ${srcdir}/info ; \
-	   (cd $${thisdir}; ${INSTALL_DATA} ${srcdir}/info/dir ${infodir}/dir); \
-	   (cd $${thisdir}; chmod a+r ${infodir}/dir); \
 	   for f in ccmode* cl* dired-x* ediff* emacs* forms* gnus* info* message* mh-e* sc* vip*; do \
 	     (cd $${thisdir}; \
 	      ${INSTALL_DATA} ${srcdir}/info/$$f ${infodir}/$$f; \
 	      chmod a+r ${infodir}/$$f); \</programlisting>
      </step>

      <step>
        <para>(これは, 既存のportを修正するときのみ必要です.)
          <filename>pkg/PLIST</filename> を見て,
          <filename>info/dir</filename>
          にパッチをあてようとするものすべてを削除します.
          これらは
          <filename>pkg/INSTALL</filename>
          やその他のファイルにもあるかもしれないので,
          いろいろさがしてみてください.</para>

        <programlisting>
Index: pkg/PLIST
===================================================================
RCS file: /usr/cvs/ports/editors/emacs/pkg/PLIST,v
retrieving revision 1.15
diff -u -r1.15 PLIST
--- PLIST	1997/03/04 08:04:00	1.15
+++ PLIST	1997/04/15 06:32:12
@@ -15,9 +15,6 @@
 man/man1/emacs.1.gz
 man/man1/etags.1.gz
 man/man1/ctags.1.gz
-@unexec cp %D/info/dir %D/info/dir.bak
-info/dir
-@unexec cp %D/info/dir.bak %D/info/dir
 info/cl
 info/cl-1
 info/cl-2</programlisting>
      </step>
      
      <step>
        <para><maketarget>post-install</maketarget> ターゲットを
          <filename>Makefile</filename>
          に加えてインストールされた info ファイルについては,
          <maketarget>install-info</maketarget>
          を実行するようします
          (<filename>dir</filename>
          ファイルが存在しない場合にそれを作成するようにする必要はなくなりました.
          <command>install-info</command>
          はこのファイルが存在しなければ自動的に作成します).
        </para>
        
        <programlisting>
Index: Makefile
===================================================================
RCS file: /usr/cvs/ports/editors/emacs/Makefile,v
retrieving revision 1.26
diff -u -r1.26 Makefile
--- Makefile	1996/11/19 13:14:40	1.26
+++ Makefile	1997/05/20 10:25:09	1.28
@@ -20,5 +20,11 @@
 post-install:
 .for file in emacs-19.34 emacsclient etags ctags b2m
 	strip ${PREFIX}/bin/${file}
 .endfor
+.for info in emacs vip viper forms gnus mh-e cl sc dired-x ediff ccmode
+	install-info ${PREFIX}/info/${info} ${PREFIX}/info/dir
+.endfor
 
 .include &lt;bsd.port.mk&gt;</programlisting>
      </step>

      <step>
        <para><filename>PLIST</filename> を編集して, 同じ働きをする
          <literal>@exec</literal> 文, 
          それに <command>pkg_delete</command> のために
          <literal>@unexec</literal> 文を加えてください.</para>

        <programlisting>
Index: pkg/PLIST
===================================================================
RCS file: /usr/cvs/ports/editors/emacs/pkg/PLIST,v
retrieving revision 1.15
diff -u -r1.15 PLIST
--- PLIST	1997/03/04 08:04:00	1.15
+++ PLIST	1997/05/20 10:25:12	1.17
@@ -16,7 +14,14 @@
 man/man1/etags.1.gz
 man/man1/ctags.1.gz
+@unexec install-info --delete %D/info/emacs %D/info/dir
 :
+@unexec install-info --delete %D/info/ccmode %D/info/dir
 info/cl
 info/cl-1
@@ -87,6 +94,18 @@
 info/viper-3
 info/viper-4
+@exec install-info %D/info/emacs %D/info/dir
 :
+@exec install-info %D/info/ccmode %D/info/dir
 libexec/emacs/19.34/i386--freebsd/cvtmail
 libexec/emacs/19.34/i386--freebsd/digest-doc</programlisting>

        <note>
          <para><literal>@unexec install-info --delete</literal>
            コマンドは info ファイル自身より先に置き,
            コマンドがファイルを読めるようにしておかなければならないことに注意してください.
            また
            <literal>@exec install-info</literal> コマンドは,
            info ファイルおよび <filename>dir</filename>
            ファイルを作る
            <literal>@exec</literal>
            コマンドより後におかなければなりません.</para>
        </note>
      </step>
      
      <step>
        <para><link linkend="porting-testing">テスト</link>
          をして出来栄えに感服しましょう
          <!-- smiley --><emphasis>:)</emphasis>
          各段階の前後に
          <filename>dir</filename>
          ファイルをチェックしましょう.</para>
      </step>
    </procedure>
  </chapter>
  
  <chapter>
    <title><filename>pkg/</filename> サブディレクトリ</title>
    
    <para>まだ触れていない,
      いくつかのこつが <filename>pkg/</filename>
      サブディレクトリにはあり, 時として便利でしょう.</para>
    
    <sect1 id="porting-message">
      <title><filename>MESSAGE</filename></title>
      
      <para>もしインストールする人にメッセージを表示する必要がある場合には,
        そのメッセージを
        <filename>pkg/MESSAGE</filename> に置くことができます.
        この機能は
        <command>pkg_add</command>
        の後の追加のインストール手続きを表示するときなどに重宝します.</para>
      
      <note>
        <para>
          <filename>pkg/MESSAGE</filename> ファイルは
          <filename>pkg/PLIST</filename> に加える必要はありません.
          また, もしユーザが package ではなく
          port を使用している場合には自動的には表示されませんので,
          明示的に
          <maketarget>post-install</maketarget>
          で表示するようにするべきでしょう.</para>
      </note>
    </sect1>
    
    <sect1>
      <title><filename>INSTALL</filename></title>
      
      <para>バイナリパッケージが
        <command>pkg_add</command>
        でインストールされるときに実行される必要があるコマンドがあれば,
        <filename>pkg/INSTALL</filename>
        スクリプトを使って実行することができます.
        このスクリプトは自動的に package に加えられ,
        <command>pkg_add</command> によって二回実行されます.
        はじめは
        <literal>INSTALL &dollar;{PKGNAME} PRE-INSTALL</literal>
        と実行され, 二回目には
        <literal>INSTALL &dollar;{PKGNAME} POST-INSTALL</literal>
        と実行されます.
        どちらのモードで実行されているかは
        <literal>&dollar;2</literal> を調べることによってわかります.
        環境変数 <envar>PKG_PREFIX</envar> には
        package がインストールされるディレクトリが設定されます.
        詳細は &man.pkg.add.1; を見てください.</para>
      
      <note>
        <para>
          port を <command>make install</command>
          でインストールするときにはこのスクリプトは自動的に実行されません.
          もし実行される必要があるならば port の Makefile
          から明示的に呼ぶ必要があります.
        </para>
      </note>
    </sect1>
    
    <sect1>
      <title><filename>REQ</filename></title>
      
      <para>port が
        (インストールされるシステムの状態によって)
        インストールされるべきか,
        されないべきか区別する必要があるときには,
        <quote>要件(requirements)</quote> スクリプト
        <filename>pkg/REQ</filename> を作ることができます.
        これはインストールおよび削除
        (package の削除)
        の時に自動的に実行され,
        それらが処理されるべきかを決定します.</para>
    </sect1>
    
    <sect1 id="porting-plist">
      <title>make の変数にあわせた
        <filename>PLIST</filename> の変更</title>
      
      <para>いくつかの port, 特に p5-ports などは
        configure のオプション
        (あるいは, p5-ports の場合は perl のバージョン)
        によって
        <filename>PLIST</filename> を変える必要があります.
        これを容易に実現するために
        <filename>PLIST</filename> 中の
        <literal>%%OSREL%%</literal>,
        <literal>%%PERL_VER%%</literal>,
        <literal>%%PERL_VERSION%%</literal> は適切に置き換えられるようになっています.
        <literal>%%OSREL%%</literal> の値はオペレーティングシステムの数字で表されたリビジョンです
        (たとえば <literal>2.2.7</literal>).
        <literal>%%PERL_VERSION%%</literal> は perl
        のバージョン番号全体
        (たとえば <literal>5.00502</literal>)
        で, <literal>%%PERL_VER%%</literal>
        はバージョン番号からパッチレベルを引いたものです
        (たとえば <literal>5.005</literal>).</para>
      
      <para>他の置き換えが必要であれば, <makevar>PLIST_SUB</makevar>
        変数に
        <literal><replaceable>VAR</replaceable>=<replaceable>VALUE</replaceable></literal>
        という形式のペアのリストを設定することによって,
        <filename>PLIST</filename> 中の
        <literal>%%<replaceable>VAR</replaceable>%%</literal>
        は
        <replaceable>VALUE</replaceable> に置き換えられます.
        たとえばバージョンに固有のたくさんのファイルをインストールする場合には,
        <filename>Makefile</filename> に</para>
      <!-- kuriyama - Eng ver has unneeded quote above -->
      
      <programlisting>
OCTAVE_VERSION= 2.0.13
PLIST_SUB=      OCTAVE_VERSION=${OCTAVE_VERSION}</programlisting>

      <para>と書いて, <filename>PLIST</filename>
        中のバージョン番号が表われるすべてのところに,
        <literal>%%OCTAVE_VERSION%%</literal> と書きます.
        このようにしておけば, port をアップグレードするときに,
        何十行
        (ときとして, 何百行)
        も
        <filename>PLIST</filename>
        を書き替えないですみます.</para>
      
      <para>この書き換えは
        (<link linkend="porting-manpages">マニュアル</link>の追加も)
        <maketarget>do-install</maketarget> と
        <maketarget>post-install</maketarget> ターゲットの間に
        <makevar>PLIST</makevar> を読み
        <makevar>TMPPLIST</makevar>
        (デフォルトは <filename><makevar>WRKDIR</makevar>/.PLIST.mktmp</filename>)
        に書き込むことによって行なわれます.
        もし, あなたの port が
        <makevar>PLIST</makevar> を実行時に生成するのであれば,
        <maketarget>do-install</maketarget>
        の間かその前に行うようにしてください.
        また, 書きかえられたあとのファイルを編集する必要がある場合には,
        <maketarget>post-install</maketarget>
        で <makevar>TMPPLIST</makevar> を書きかえてください.</para>
    </sect1>
    
    <sect1>
      <title id="porting-pkgsubdir"><filename>pkg</filename>
        サブディレクトリにあるファイル名の変更</title>
      
      <para><filename>pkg</filename>
        サブディレクトリにあるファイルはすべて変数を使用して定義されていますので,
        必要であれば
        <filename>Makefile</filename> 中で変更可能です.
        いくつかの ports で一つの
        <filename>pkg</filename>
        サブディレクトリを共有する場合や,
        上記のファイルに書き込む必要があるときなど特に便利です
        (<filename>pkg</filename>
        サブディレクトリに直接書き込むのが良くない理由については
        <link linkend="porting-wrkdir">WRKDIR
          以外への書きこみ</link> を参照してください).</para>
      
      <para>以下が変数名とそのデフォルト値の表です.</para>
      
      <informaltable frame="none">
        <tgroup cols="2">
          <thead>
            <row>
              <entry>変数名</entry>
              <entry>デフォルト値</entry>
            </row>
          </thead>
          
          <tbody>
            <row>
              <entry><makevar>COMMENT</makevar></entry>
              <entry><literal>${PKGDIR}/DESCR</literal></entry>
            </row>
            
            <row>
              <entry><makevar>DESCR</makevar></entry>
              <entry><literal>${PKGDIR}/DESCR</literal></entry>
            </row>
            
            <row>
              <entry><makevar>PLIST</makevar></entry>
              <entry><literal>${PKGDIR}/PLIST</literal></entry>
            </row>
            
            <row>
              <entry><makevar>PKGINSTALL</makevar></entry>
              <entry><literal>${PKGDIR}/INSTALL</literal></entry>
            </row>
            
            <row>
              <entry><makevar>PKGDEINSTALL</makevar></entry>
              <entry><literal>${PKGDIR}/DEINSTALL</literal></entry>
            </row>
            
            <row>
              <entry><makevar>PKGREQ</makevar></entry>
              <entry><literal>${PKGDIR}/REQ</literal></entry>
            </row>
            
            <row>
              <entry><makevar>PKGMESSAGE</makevar></entry>
              <entry><literal>${PKGDIR}/MESSAGE</literal></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      
      <para><makevar>PKG_ARGS</makevar>
        を上書きせずにこれらの変数を変更するようにしてください.
        <makevar>PKG_ARGS</makevar>
        を変更すると, これらのファイルは port から正しく
        <filename>/var/db/pkg</filename>
        にインストールされなくなります.</para>
    </sect1>
  </chapter>
  
  <chapter>
    <title>ライセンス上の問題</title>
    
    <para>ソフトウェアによっては制限の厳しい
      ライセンスがついてきたり,
      法律的に問題があるかも知れません
      (PKP の公開鍵暗号の特許,
      ITAR (暗号化ソフトウェアの輸出)
      などが例としてあげられます).
      それらをどう扱えばいいかは,
      ライセンスの文面によってさまざまな場合があります.</para>
    
    <note>
      <para>ソフトウェア移植者として,
        あなたにはライセンスをよく読み
        FreeBSD プロジェクトが FTP または CD-ROM
        で配布してはいけないソフトウェアを配布してしまうことのないよう注意する義務があります.
        何か疑問がある場合には
        &a.ports; に聞いてみてください.</para>
    </note>
    
    <para>よく見られるケースに対処するために,
      <filename>Makefile</filename> に指定できる二つの変数が用意されています.</para>
    
    <orderedlist>
      <listitem>
        <para>ソフトウェアに<quote>有償再配布を禁ずる</quote>という趣旨のライセン スがついてきた場合には,
          <makevar>NO_CDROM</makevar>
          という変数にその理由を記述してください.
          わたしたちはこれがついている port を
          CD-ROM リリースに入れないようにしますが,
          オリジナルのソースファイルと package を
          FTP で取れるようにしておきます.</para>
      </listitem>
      
      <listitem>
        <para>もし生成される package が個々のサイトで独自に構築される必要があったり,
          ライセンスによって生成されるバイナリが配布できない場合には
          <makevar>NO_PACKAGE</makevar> 変数にその理由を記述してください.
          そのような package は FTP サイトに置かれたり,
          リリース 時の CD-ROM へ入らないようにします.
          ただし, いずれの場合も
          distfile は (FTP や CD-ROM に)
          含まれるようになります.</para>
      </listitem>
      
      <listitem>
        <para>使用者によっては法律上の問題が生じる port 
          (暗号化ソフトウェアなど)
          の場合,
          あるいは<quote>商用利用を禁ずる</quote>とライセンスに書いてある場合には,
          <makevar>RESTRICTED</makevar>という変数にその理由を入れてください.
          この場合には, ソースファイルや package
          が FreeBSD の FTP サイトにも置かれなくなります.</para>
      </listitem>
    </orderedlist>
    
    <note>
      <para>GNU 一般公有使用許諾書 (GPL) は,
        バージョン 1, 2 とも port 作成上何ら問題にはなりません.</para>
    </note>
    
    <note>
      <para>もしあなたがソースツリー管理者 (committer) であれば,
        ソースツリーにこのような port を入れる際に
        <filename>ports/LEGAL</filename>
        ファイルを書き換えるのを忘れないようにしてください.</para>
    </note>
  </chapter>
  
  <chapter id="port-upgrading">
    <title>アップグレード</title>
    
    <para>port のバージョンが原作者からのものに比べて古いことに気がついたら,
      まずはあなたの持っている port が私たちの最新のもの
      (ミラーサイトの <filename>ports/ports-current</filename>
      というディレクトリにあります)
      であることを確認してください.
      また, Ports Collection 全体を最新の状態に保つために
      CVSup を利用することもできます.
      詳しくは
      <ulink url="../handbook/synching.html#CVSUP-CONFIG">FreeBSD
        ハンドブック</ulink>をご覧ください.</para>
    
    <para>次に port の
      <filename>Makefile</filename> に
      <makevar>MAINTAINER</makevar> (保守担当者)
      のアドレスが書いてある場合には, その人にメールを出してみましょう.
      保守担当者の人がすでにアップグレードの準備をしているかも知れませんし,
      (新しいバージョンの安定度に問題があるなど)
      あえてアップグレードをしない理由があるのかも知れません.</para>
    
    <para>保守担当者にアップグレードをしてくれと頼まれた場合,
      あるいは, そもそも port の Makefile に保守担当者が書いてない場合などは,
      あなたがアップグレードをしてくださると助かります.
      その場合にはアッ プグレードをした後,
      変更前と変更後のディレクトリの再帰的 diff
      (unified diff と context diff のどちらでもいいのですが,
      port のコミッター達は unified diff の方を好むようです)
      をとって送ってください
      (たとえば変更前のディレクトリが
      <filename>superedit.bak</filename>
      という名前でとってあり, 変更後のものが
      <filename>superedit</filename>
      に入っているなら,
      <command>diff -ruN superedit.bak superedit</command>
      の結果を送ってください).
      diff の出力を見て,
      すべての変更が正しくなされているか確認してください.
      変更箇所については, &man.send-pr.1;
      (カテゴリは <literal>ports</literal>)
      に diff の出力結果を添えて, わたしたちに送ってもらうのが一番良いです.
      commit する際に CVS に明確に記述しなければならないので,
      付け加えたり削除したりしたファイルがあればそれについて書いておいてください.
      もし diff の大きさが 20 KB 程度を超えるようであれば,
      圧縮したものを uuencode してください.
      そうでなければそのまま PR に入れるだけで構いません.</para>

    <note>
      <para>繰り返しになりますが, 既存の ports の変更を送るときには
          &man.shar.1; ではなく &man.diff.1; を使用してください!</para>
    </note>
  </chapter>
  
  <chapter id="porting-dads">
    <title>やっていいことといけないこと</title>
    <!-- kuriyama - why Eng ver has anchor tag? -->
    
    <para>この節ではソフトウェアを port する上で,
      良くある落し穴などについて説明します.
      このリストを使ってあなた自身が作成した port のチェックはもとより,
      PR データベースにある,
      他の人が作成した port のチェックもできます.
      あなたがチェックした port
      についてのコメントを<ulink url="../handbook/contrib-how.html#CONTRIB-GENERAL">バグ報告と一般的な論評</ulink>にしたがって送ってください.
      PR データベースにある port をチェックすると,
      わたしたちがそれらを commit するのを早くし,
      あなたが何をしているか理解していることも示します.</para>
    <!-- 2000/07/16:hrs strange translation -->
    
    <sect1>
      <title>バイナリの strip</title>
      
      <para>バイナリは strip してください.
        オリジナルのソースがバイナリを
        strip してくれる場合は良いですが,
        そうでない場合には port の
        <filename>Makefile</filename> が
        <literal>install</literal> ターゲットを持っているなら
        <makevar>BSD_INSTALL_PROGRAM</makevar> を,
        持っていないなら
        strip するための <literal>post-install</literal> ルールを追加して
        strip するようにするとよいでしょう.
        たとえばこんな風になります:</para>
      
      <programlisting>
post-install:
        strip ${PREFIX}/bin/xdl</programlisting>

      <para>インストールされた実行形式がすでに strip
        されているかどうかは <command>file</command>
        コマンドで確認できます.
        <quote>not stripped</quote>
        と表示されなければ strip されていることを示しています.</para>
    </sect1>
    
    <sect1>
      <title><makevar>INSTALL_*</makevar> マクロ</title>
      
      <para>あなた自身の <maketarget>*-install</maketarget>
        ターゲットでファイルの正しいモードとオーナを保証するために,
        必ず
        <filename>bsd.port.mk</filename>
        で提供されているマクロを使用してください.</para>
      
      <itemizedlist>
        <listitem>
          <para><makevar>${INSTALL_PROGRAM}</makevar>
            は実行可能なバイナリをインストール
            (し, その過程で strip 処理)するコマンドです.</para>
        </listitem>
        
        <listitem>
          <para><makevar>${INSTALL_SCRIPT}</makevar>
            は実行可能なスクリプトをインストールするコマンドです.</para>
        </listitem>
        
        <listitem>
          <para><makevar>${INSTALL_DATA}</makevar>
            は共有可能なデータをインストールするコマンドです.</para>
        </listitem>
        
        <listitem>
          <para><makevar>${INSTALL_MAN}</makevar>
            はマニュアルとその他の文書をインストールするコマンドです
            (圧縮はしません).</para>
        </listitem>
      </itemizedlist>
      
      <para>これらは基本的に <command>install</command>
        コマンドに適切なフラグを与えたものです.
        それらは distfile の <filename>Makefile</filename>
        で, 頭に <quote>BSD_</quote> が付けられた
        (つまり BSD_INSTALL_PROGRM というような)
        形で使うことができます.
        どのようにこれらを使用するかは以下の例を見てください.
      </para>
    </sect1>

    <sect1 id="porting-wrkdir">
      <title><makevar>WRKDIR</makevar></title>
      
      <para><makevar>WKRDIR</makevar>
        の外のファイルにはなにも書き込まないように
        <!-- kuriyama - to files? --> してください.
        <makevar>WRKDIR</makevar> は
        ports のビルド中に書き込こめることが保証されている唯一の場所です
        (<ulink url="../handbook/ports-using.html#PORTS-CD">CDROM からの ports
          のコンパイル</ulink> を参照).
        <makevar>PKGDIR</makevar>
        にあるファイルを修正する必要があるときには<link linkend="porting-pkgsubdir">変数の再定義</link>によって行ない,
        上書きはしないでください.</para>
    </sect1>
    
    <sect1 id="porting-wrkdirprefix">
      <title><makevar>WRKDIRPREFIX</makevar></title>
      
      <para><makevar>WRKDIRPREFIX</makevar>
        を尊重していることを確認してください.
        特に, 別の port の
        <makevar>WRKDIR</makevar> を参照しているときには気を付けてください.
        正しい場所は,
        <filename><makevar>WRKDIRPREFIX</makevar><makevar>PORTSDIR</makevar>/<replaceable>subdir</replaceable>/<replaceable>name</replaceable>/work</filename>
        です,
        <filename><makevar>PORTSDIR</makevar>/<replaceable>subdir</replaceable>/<replaceable>name</replaceable>/work</filename>
        や
        <filename><makevar>.CURDIR</makevar>/../../<replaceable>subdir</replaceable>/<replaceable>name</replaceable>/work</filename>
        ではありません.</para>
      
      <para>また,
        自分で <makevar>WRKDIR</makevar> 定義するときには先頭に
        <literal>&dollar;{WRKDIRPREFIX}&dollar;{.CURDIR}</literal>
        が付いていることを確認してください.</para>
    </sect1>
    
    <sect1 id="porting-versions">
      <title>OS や OS のバージョンの区別</title>
      
      <para>port の過程で,
        修正やどのバージョンの UNIX
        で動くかによる条件つきコンパイルなどが必要なコードに出会うかも知れません.
        そのような条件つきコンパイルなどのための変更を行なうときには
        FreeBSD 1.x システムへの移植や
        CSRG の 4.4BSD, BSD/386, 386BSD, NetBSD, OpenBSD などの,
        他の BSD システムへの移植が可能なように,
        できるだけ汎用的な変更を行なうことを心がけてください.</para>
      
      <para>4.3BSD/Reno (1990)
        およびそれより新しい BSD のバージョンを古いバージョンと区別するには
        <literal>BSD</literal> マクロを利用するのがよいでしょう.
        これは <filename>&lt;sys/param.h&gt;</filename> で定義されています.
        このファイルがすでにインクルードされていれば良いのですが,
        もしそうでない場合には,
        以下のコードをその
        <filename>.c</filename>
        ファイルの適当な場所に加えてください.</para>
      
      <programlisting>
#if (defined(__unix__) || defined(unix)) &amp;&amp; !defined(USG)
#include &lt;sys/param.h&gt;
#endif</programlisting>

      <para>これらの二つのシンボルが定義されているシステムには必ず
        <filename>sys/param.h</filename> があるはずです.
        もしそうでないシステムを発見したら,
        &a.ports; までメールを送ってわたしたちに伝えてください.</para>
      
      <para>あるいは, GNU Autoconf のスタイルを使用することもできます,</para>
      
      <programlisting>
#ifdef HAVE_SYS_PARAM_H
#include &lt;sys/param.h&gt;
#endif</programlisting>

      <para>この方法を使用するときには,
        <filename>Makefile</filename> 中の
        <makevar>CFLAGS</makevar>に
        <literal>-DHAVE_SYS_PARAM_H</literal>
        を加えることを忘れないようにしてください.</para>
      
      <para>いったん <filename>sys/param.h</filename>
        がインクルードされると,</para>

      <programlisting>
#if (defined(BSD) &amp;&amp; (BSD &gt;= 199103))</programlisting>

      <para>このようにしてそのコードが 4.3 Net2 コードベース,
        またはそれより新しいもの
        (例: FreeBSD 1.x, 4.3/Reno, NetBSD 0.9, 386BSD, BSD/386 1.1 とそれ以前)
        の上でコンパイルされているかを検出できます.</para>
      
      <programlisting>
#if (defined(BSD) &amp;&amp; (BSD &gt;= 199306))</programlisting>

      <para>これは, 4.4コードベース, またはそれより新しいもの
        (例: FreeBSD 2.x, 4.4, NetBSD 1.0, BSD/386 2.0 とそれ以後)
        の上でコンパイルされているかどうかを検出するために使用します.</para>
      
      <para>4.4BSD-Lite2 コードベースでは
        <literal>BSD</literal> マクロの値は
        <literal>199506</literal> になっています.
        これは参考程度の意味合いしかありません.
        4.4-Lite ベースの FreeBSD と 4.4-Lite2
        での変更がマージされたバージョンとを区別するのに使用するべきものではありません.
        この目的のためにはかわりに
        <literal>__FreeBSD__</literal>
        マクロを使用してください.</para>
      
      <para>以下は控え目に使ってください.</para>
      
      <itemizedlist>
        <listitem>
          <para><literal>__FreeBSD__</literal>
            はFreeBSDのすべての版で定義されています.
            変更が FreeBSD だけに適用されるとき以外は使用しないでください.
            port でよくある
            <function>strerror()</function> ではなく
            <literal>sys_errlist[]</literal> を使うなどは
            FreeBSDでの変更ではなく BSD の流儀です.</para>
        </listitem>
        
        <listitem>
          <para>FreeBSD 2.xでは <literal>__FreeBSD__</literal> が
            <literal>2</literal> と定義されています.
            それ以前の版では <literal>1</literal> になっています.
            その後の版ではそのメジャー番号に合うように上がっていきます.</para>
        </listitem>
        
        <listitem>
          <para>もし
            FreeBSD 1.x システムと FreeBSD 2.x,
            あるいは FreeBSD 3.x システムを区別する必要があれば,
            上で述べた <literal>BSD</literal>
            マクロを使用するのが大抵の場合において正しい答です.
            もし FreeBSD 特有の変更であれば
            (<command>ld</command> を使うときの共有ライブラリ用のオプションなど),
            <!-- kuriyama - strange translation -->
            <literal>__FreeBSD__</literal>を使い
            <literal>#if __FreeBSD__ &gt; 1</literal>
            のようにFreeBSD 2.x および,
            それ以降のシステムを検出するのはかまいません.
            もし 2.0-RELEASE 以降の FreeBSD システムを細かく検出したければ,
            以下を使用することができます.</para>
          
          <programlisting>
#if __FreeBSD__ &gt;= 2
#include &lt;osreldate.h&gt;
#    if __FreeBSD_version &gt;= 199504
         /* 2.0.5+ release specific code here */
#    endif
#endif</programlisting>

          <informaltable frame="none">
            <tgroup cols="2">
              <thead>
                <row>
                  <entry>Release</entry>
                  <entry><literal>__FreeBSD_version</literal></entry>
                </row>
              </thead>
              
              <tbody>
                <row>
                  <entry>2.0-RELEASE</entry>
                  <entry>119411</entry>
                </row>
                
                <row>
                  <entry>2.1-CURRENT</entry>
                  <entry>199501, 199503</entry>
                </row>
                
                <row>
                  <entry>2.0.5-RELEASE</entry>
                  <entry>199504</entry>
                </row>
                
                <row>
                  <entry>2.1 以前の 2.2-CURRENT</entry>
                  <entry>199508</entry>
                </row>
                
                <row>
                  <entry>2.1.0-RELEASE</entry>
                  <entry>199511</entry>
                </row>
                
                <row>
                  <entry>2.1.5 以前の 2.2-CURRENT</entry>
                  <entry>199512</entry>
                </row>
                
                <row>
                  <entry>2.1.5-RELEASE</entry>
                  <entry>199607</entry>
                </row>
                
                <row>
                  <entry>2.1.6 以前の 2.2-CURRENT</entry>
                  <entry>199608</entry>
                </row>
                
                <row>
                  <entry>2.1.6-RELEASE</entry>
                  <entry>199612</entry>
                </row>
                
                <row>
                  <entry>2.1.7-RELEASE</entry>
                  <entry>199612</entry>
                </row>
                
                <row>
                  <entry>2.2-RELEASE</entry>
                  <entry>220000</entry>
                </row>
                
                <row>
                  <entry>2.2.1-RELEASE</entry>
                  <entry>220000 (2.2-RELEASE と同じです)</entry>
                </row>
                
                <row>
                  <entry>2.2.1-RELEASE 以後の 2.2-STABLE</entry>
                  <entry>220000 (これも同じです)</entry>
                </row>
                
                <row>
                  <entry>texinfo-3.9 以後の 2.2-STABLE</entry>
                  <entry>221001</entry>
                </row>
                
                <row>
                  <entry>top 導入以後の 2.2-STABLE</entry>
                  <entry>221002</entry>
                </row>
                
                <row>
                  <entry>2.2.2-RELEASE</entry>
                  <entry>222000</entry>
                </row>
                
                <row>
                  <entry>2.2.2-RELEASE 以後の 2.2-STABLE</entry>
                  <entry>222001</entry>
                </row>
                
                <row>
                  <entry>2.2.5-RELEASE</entry>
                  <entry>225000</entry>
                </row>
                
                <row>
                  <entry>2.2.5-RELEASE 以後の 2.2-STABLE</entry>
                  <entry>225001</entry>
                </row>
                
                <row>
                  <entry>ldconfig -R 以後の 2.2-STABLE</entry>
                  <entry>225002</entry>
                </row>
                
                <row>
                  <entry>2.2.6-RELEASE</entry>
                  <entry>226000</entry>
                </row>
                
                <row>
                  <entry>2.2.7-RELEASE</entry>
                  <entry>227000</entry>
                </row>
                
                <row>
                  <entry>2.2.7-RELEASE 以後の 2.2-STABLE</entry>
                  <entry>227001</entry>
                </row>
                
                <row>
                  <entry>semctl(2) 変更後の 2.2-STABLE</entry>
                  <entry>227002</entry>
                </row>
                
                <row>
                  <entry>2.2.8-RELEASE</entry>
                  <entry>228000</entry>
                </row>
                
                <row>
                  <entry>2.2.8-RELEASE 以後の 2.2-STABLE</entry>
                  <entry>228001</entry>
                </row>
                
                <row>
                  <entry>mount(2) 変更以前の 3.0-CURRENT</entry>
                  <entry>300000</entry>
		  </row>
                
                <row>
                  <entry>mount(2) 変更以後の 3.0-CURRENT</entry>
                  <entry>300001</entry>
                </row>
                
                <row>
                  <entry>semctl(2) 変更以後の 3.0-CURRENT</entry>
                  <entry>300002</entry>
                </row>
                
                <row>
                  <entry>ioctl 引数変更後の 3.0-CURRENT</entry>
                  <entry>300003</entry>
                </row>

                <row>
                  <entry>ELF 移行後の 3.0-CURRENT</entry>
                  <entry>300004</entry>
                </row>
                
                <row>
                  <entry>3.0-RELEASE</entry>
                  <entry>300005</entry>
                </row>
                
                <row>
                  <entry>3.0-RELEASE 以後の 3.0-CURRENT</entry>
                  <entry>300006</entry>
                </row>
                
                <row>
                  <entry>3/4 の分岐後の 3.0-STABLE</entry>
                  <entry>300007</entry>
                </row>
                
                <row>
                  <entry>3.1-RELEASE</entry>
                  <entry>310000</entry>
                </row>
                
                <row>
                  <entry>3.1-RELEASE 以後の 3.1-STABLE</entry>
                  <entry>310001</entry>
                </row>
                
                <row>
                  <entry>C++ コンストラクタ/デストラクタ順序変更後の
                    3.1-STABLE</entry>
                  <entry>310002</entry>
                </row>
                
                <row>
                  <entry>3.2-RELEASE</entry>
                  <entry>320000</entry>
                </row>
                
                <row>
                  <entry>3.2-STABLE</entry>
                  <entry>320001</entry>
                </row>
                
                <row>
                  <entry>バイナリ互換性のない IPFW とソケットの変更後の
                    3.2-STABLE</entry>
                  <entry>320002</entry>
                </row>
                
                <row>
                  <entry>3.3-RELEASE</entry>
                  <entry>330000</entry>
                </row>
                
                <row>
                  <entry>3.3-STABLE</entry>
                  <entry>330001</entry>
                </row>
                
                <row>
                  <entry>libc へ mkstemps() が追加された後の 3.3-STABLE</entry>
                  <entry>330002</entry>
                </row>
                
                <row>
                  <entry>3.4-RELEASE</entry>
                  <entry>340000</entry>
                </row>
                
                <row>
                  <entry>3.4-STABLE</entry>
                  <entry>340001</entry>
                </row>
                
                <row>
                  <entry>3.4 の分岐後の 4.0-CURRENT</entry>
                  <entry>400000</entry>
                </row>
                
                <row>
                  <entry>dynamic linker の変更後の 4.0-CURRENT</entry>
                  <entry>400001</entry>
                </row>
                
                <row>
                  <entry>C++ コンストラクタ/デストラクタ順序変更後の
                    4.0-CURRENT</entry>
                  <entry>400002</entry>
                </row>
                
                <row>
                  <entry>dladdr(3) 機能追加後の 4.0-CURRENT</entry>
                  <entry>400003</entry>
                </row>
                
                <row>
                  <entry>__deregister_frame_info dynamic linker のバグ修正,
                    EGCS 1.1.2 導入後の 4.0-CURRENT</entry>
                  <entry>400004</entry>
                </row>
                
                <row>
                  <entry>suser(9) の API 変更, newbus 後の 4.0-CURRENT
                  </entry>
                  <entry>400005</entry>
                </row>
                
                <row>
                  <entry>cdevsw 登録方法の変更後の 4.0-CURRENT</entry>
                  <entry>400006</entry>
                </row>
                
                <row>
                  <entry>ソケットレベルの証明書 (credential) のための
                    so_cred への追加後の 4.0-CURRENT</entry>
                  <entry>400007</entry>
                </row>
                
                <row>
                  <entry>libc_r への poll syscall ラッパー追加後の
                    4.0-CURRENT</entry>
                  <entry>400008</entry>
                </row>
                
                <row>
                  <entry>kernel の <literal>dev_t</literal> 型から
                    <literal>struct spacinfo</literal> ポインタへの
                    変更後の 4.0-CURRENT
                  </entry>
                  <entry>400009</entry>
                </row>

                <row>
                  <entry>jail(2) のセキュリティホール修正後の 4.0-CURRENT </entry>
                  <entry>400010</entry>
                </row>
                
                <row>
                  <entry><literal>sigset_t</literal>
                    のデータ型変更後の 4.0-CURRENT</entry>
		    <entry>400011</entry>
                </row>
                
                <row>
                  <entry>システムコンパイラを gcc 2.95.2 にアップグレードした後の
                    4.0-CURRENT</entry>
                  <entry>400012</entry>
                </row>
                
                <row>
                  <entry>追加可能な Linux モードの ioctl ハンドラが追加された後の
                    4.0-CURRENT</entry>
                  <entry>400013</entry>
                </row>
                
                <row>
                  <entry>OpenSSL が導入された後の 4.0-CURRENT</entry>
                  <entry>400014</entry>
                </row>
                
                <row>
                  <entry>GCC 2.95.2 の C++ ABI 変更で,
                    デフォルトが -fvtable-thunks から -fno-vtable-thunks に変更された後の
                    4.0-CURRENT </entry>
                  <entry>400015</entry>
                </row>
                
                <row>
                  <entry>OpenSSH が導入された後の 4.0-CURRENT</entry>
                  <entry>400016</entry>
                </row>
                
                <row>
                  <entry>4.0-RELEASE</entry>
		    <entry>400017</entry>
                </row>
                
                <row>
                  <entry>4.0-RELEASE より後の 4.0-STABLE</entry>
                  <entry>400018</entry>
                </row>
                
                <row>
                  <entry>libxpg4 が libc にマージされた後の
                    4.0-STABLE</entry>
                  <entry>400020</entry>
                </row>

                <row>
                  <entry>Binutils の 2.10.0 へのアップグレードと
                    ELF バイナリのマーク付け (branding) 方法の変更,
                    ベースシステムへの tcsh の導入後の
                    4.0-STABLE</entry>
                  <entry>400021</entry>
                </row>
                
                <row>
                  <entry>5.0-CURRENT</entry>
                  <entry>500000</entry>
                </row>

                <row>
                  <entry>ELF ヘッダフィールドの追加と ELF バイナリのマーク付け
                    (branding) 方法の変更後の 5.0-CURRENT</entry>
                  <entry>500001</entry>
                </row>
                
                <row>
                  <entry>kld メタデータ変更後の 5.0-CURRENT</entry>
                  <entry>500002</entry>
                </row>
                
                <row>
                  <entry>buf/bio 変更後の 5.0-CURRENT</entry>
                  <entry>500003</entry>
                </row>
                
                <row>
                  <entry>binutils アップグレード後の 5.0-CURRENT</entry>
                  <entry>500004</entry>
                </row>
                
                <row>
                  <entry>libxpg4 コードの libc へのマージと,
                    TASKQ インターフェイスの導入後の 5.0-CURRENT</entry>
                  <entry>500005</entry>
                </row>

                <row>
                  <entry>AGP インターフェイスが追加された後の
                    5.0-CURRENT</entry>
                  <entry>500006</entry>
                </row>
                
                <row>
                  <entry>Perl を 5.6.0 にアップグレードした後の
                    5.0-CURRENT</entry>
                  <entry>500007</entry>
                </row>
                
                <row>
                  <entry>KAME コードを 2000/07 版のソースに更新した後の
                    5.0-CURRENT</entry>
                  <entry>500008</entry>
                </row>

		<row>
		  <entry>ether_ifattach() および
		    ether_ifdetach() 変更後の 5.0-CURRENT</entry>
		  <entry>500009</entry>
		</row>

                <row>
                  <entry>mtree のデフォルトをオリジナルの変種に戻し,
                    シンボリックリンクをたどる -L オプションを追加した後の
                    5.0-CURRENT</entry>
                  <entry>500010</entry>
                </row>

		<row>
		  <entry>kqueue API 変更後の 5.0-CURRENT</entry>
		  <entry>500011</entry>
		</row>

		<row>
		  <entry>setproctitle() が libutil から libc
                     へ移動した後の 5.0-CURRENT</entry>
		  <entry>500012</entry>
		</row>
                
		<row>
		  <entry>最初の SMPng がコミットされた後の
                     5.0-CURRENT</entry>
		  <entry>500013</entry>
		</row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>
      </itemizedlist>
      
      <note>
        <para>(2.2-STABLE は 2.2.5-RELESE 以後,
          <quote>2.2.5-STABLE</quote> と呼ばれることがあります.)
          見てのとおりこれは年・月というフォーマットになっていましたが,
          バージョン 2.2 からより直接的にメジャー/マイナー番号を使うように変更になりました.
          並行していくつかのブランチ
          (枝分かれしたバージョン)
          を開発する場合には,
          リリースされた日付でそれらのリリースを分類することが不可能だからです
          (あなたが今 port
          を作成するときに, 古い -CURRENT 達について心配する必要はありません.
          これは参考のために挙げられているに過ぎないからです).</para>
      </note>
      
      <para>これまで, 何百もの
        port が作られてきましたが,
        <literal>__FreeBSD__</literal>
        が正しく使われたのは一つか二つの場合だけでしょう.
        以前の port が誤った場所でそのマクロを使っているからといって,
        それをまねする理由はありません.</para>
    </sect1>

    <sect1>
      <title><filename>bsd.port.mk</filename> の後に書くこと</title>
      
      <para><literal>.include &lt;bsd.port.mk&gt;</literal>
        の行の後には何も書かないようにしてください.
        大抵の場合は
        <filename>Makefile</filename> の中程のどこかで
        <filename>bsd.port.pre.mk</filename> をインクルードして,
        最後に
        <filename>bsd.port.pre.mk</filename>
        をインクルードすることによって避けることができます.</para>
      
      <note>
        <para><filename>pre.mk</filename>/<filename>post.mk</filename>
          のペアか <filename>bsd.port.mk</filename>
          だけのどちらかだけをインクルードし, 二つを混ぜないでください.</para>
      </note>
      
      <para>前者はいくつかの変数の定義だけをして
        <filename>Makefile</filename>
        でのテストに使用し, 後者は残りを定義します.</para>

      <para>以下は <filename>bsd.port.pre.mk</filename>
        で定義される重要な変数です
        (これは, すべてではありません.
        完全なリストは <filename>bsd.port.mk</filename> を参照してください).
      </para>
      
      <informaltable frame="none">
        <tgroup cols="2">
          <thead>
            <row>
              <entry>変数名</entry>
              <entry>解説</entry>
            </row>
          </thead>
          
          <tbody>
            <row>
              <entry><makevar>ARCH</makevar></entry>
              <entry><command>uname -m</command> で返される
                アーキテクチャ. (例, <literal>i386</literal>).
              </entry>
            </row>
            
            <row>
              <entry><makevar>OPSYS</makevar></entry>
		<entry><command>uname -s</command> で返される
                オペレーティングシステム (例,
                <literal>FreeBSD</literal>).</entry>
            </row>
            
            <row>
              <entry><makevar>OSREL</makevar></entry>
              <entry>オペレーティングシステムの
                リリースバージョン
                (例., <literal>2.1.5</literal>,
                <literal>2.2.7</literal>).</entry>
            </row>
            
            <row>
              <entry><makevar>OSVERSION</makevar></entry>
              <entry>数字形式のオペレーティングシステム
                のバージョン,
                上記の <link linkend="porting-versions"><literal>
                    __FreeBSD_version</literal></link>
                と同じです.</entry>
            </row>
            
            <row>
              <entry><makevar>PORTOBJFORMAT</makevar></entry>
              <entry>システムのオブジェクト
                フォーマット (<literal>aout</literal> あるいは
                <literal>elf</literal>).</entry>
            </row>
            
            <row>
              <entry><makevar>LOCALBASE</makevar></entry>
              <entry><quote>local</quote> ツリーのベース.
                (例, <literal>/usr/local/</literal>).
              </entry>
            </row>
            
            <row>
              <entry><makevar>X11BASE</makevar></entry>
              <entry><quote>X11</quote> ツリーのベース.
                (例, <literal>/usr/X11R6/</literal>).
              </entry>
            </row>
            
            <row>
              <entry><makevar>PREFIX</makevar></entry>
              <entry>ports のインストール先
                (<link linkend="porting-prefix">
                  <makevar>PREFIX</makevar>について</link>を参照).
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      
      <note>
        <para><makevar>USE_IMAKE</makevar>,
          <makevar>USE_X_PREFIX</makevar> あるいは
          <makevar>MASTERDIR</makevar>
          などの変数を定義する必要がある場合には,
          <filename>bsd.port.pre.mk</filename>
          をインクルード前に定義してください.
          他のものは <filename>bsd.port.pre.mk</filename>
          の前でも後でもかまいません.</para>
      </note>
      
      <para>以下は <filename>bsd.port.pre.mk</filename>
        の後に書けるものの例です.</para>
      
      <programlisting>
# no need to compile lang/perl5 if perl5 is already in system
.if ${OSVERSION} > 300003
BROKEN= perl is in system
.endif

# only one shlib version number for ELF
.if ${PORTOBJFORMAT} == "elf"
TCL_LIB_FILE=  ${TCL_LIB}.${SHLIB_MAJOR}
.else
TCL_LIB_FILE=  ${TCL_LIB}.${SHLIB_MAJOR}.${SHLIB_MINOR}
.endif

# software already makes link for ELF, but not for a.out
post-install:
.if ${PORTOBJFORMAT} == "aout"
       ${LN} -sf liblinpack.so.1.0 ${PREFIX}/lib/liblinpack.so
.endif</programlisting>
    </sect1>
    
    <sect1>
      <title>付加的な文書のインストール</title>
      
      <para>普通のマニュアルや info
        ファイルの他にユーザにとって有用だと思えるような文書がある場合には,
        <filename><makevar> PREFIX</makevar>/share/doc</filename>
        の下にインストールしてください.
        これは前記と同様
        <maketarget>post-install</maketarget>
        ターゲットの中から行なうと良いでしょう.</para>
      
      <para>まず, あなたの port のために新しいディレクトリを作ります.
        どの port の文書か簡単にわかるような名前にする必要がありますので,
        普通は <makevar>PORTNAME</makevar> を使うと良いでしょう.
        もちろん, ユーザが異なるバージョンのものを同時に使うことが予想される
        port の場合には
        <makevar>PKGNAME</makevar> をそのまま使っても構いません.</para>
      
      <para>ユーザが <filename>/etc/make.conf</filename>
        でこの部分を禁止するために
        <makevar>NOPORTDOCS</makevar>
        という変数をセットしている場合には,
        これらの文書がインストールされないようにしてください.
        こんな具合です.</para>

      <programlisting>
post-install:
.if !defined(NOPORTDOCS)
        ${MKDIR} ${PREFIX}/share/doc/xv
        ${INSTALL_MAN} ${WRKSRC}/docs/xvdocs.ps ${PREFIX}/share/doc/xv
.endif</programlisting>

      <para>これらのファイルを
        <filename>pkg/PLIST</filename>
        に入れるのを忘れないよ うにしてください
        (package が
        <filename>/etc/make.conf</filename>
        内の変数を読む方法は今のところ存在しませんので
        <makevar>NOPORTDOCS</makevar>
        については気にしないでください).</para>
      
      <para>インストール時に
        <filename>pkg/MESSAGE</filename>
        ファイルを利用してメッセージを表示することができます.
        詳細は
        <link linkend="porting-message">pkg/MESSAGE を使う</link>の節を参照してください.</para>

      <!-- kuriyama - note below is not exist in Jap ver, but Eng ver has it. why? -->
      <note>
        <para><filename>MESSAGE</filename>
          ファイルを
          <filename>pkg/PLIST</filename>
          に加える必要はありません.</para>
      </note>
    </sect1>
    
    <sect1>
      <title><makevar>DIST_SUBDIR</makevar></title>
      
      <para><filename>/usr/ports/distfiles</filename>
        ディレクトリ内をあまり散らかさないようにしてください.
        たくさんのファイルを取ってくる port や,
        数は少なくても他の port
        のファイルと混同される恐れがあるファイル
        (<filename>Makefile</filename> など)
        がある場合には,
        <makevar>DIST_SUBDIR</makevar> に port の名前
        (<literal>${PORTNAME}</literal> か
        <literal>${PKGNAMEPREFIX}${PORTNAME}</literal> を使うといいでしょう)
        を入れてください.
        すると <makevar>DISTDIR</makevar>
        がデフォルトの
        <filename>/usr/ports/distfiles</filename> から
        <filename>/usr/ports/distfiles/<makevar>DIST_SUBDIR</makevar></filename>
        に変更され,
        取ってきたファイルはすべてそのサブディレクトリの中に置かれるようになります.</para>
      
      <para>また,
        ファイルを取ってくるときにバックアップサイトとして使われる
        <filename>ftp.FreeBSD.org</filename>
        のディレクトリ名にもこの変数の値が使われます
        (<makevar>DISTDIR</makevar> を明示的に指定した場合,
        ローカルのファイルを置くところは変わりますが,
        このサイトのディレクトリ名は変わりません.
        必ず <makevar>DIST_SUBDIR</makevar> を使うようにしてください).</para>
      
      <note>
        <para>この変数は <filename>Makefile</filename>
          中で明示的に指定された
          <makevar>MASTER_SITES</makevar>
          には影響しないことに注意してください.</para>
      </note>
    </sect1>
    
    <sect1>
      <title>package 情報</title>
      
      <para><filename>pkg</filename> ディレクトリには必ず,
        <filename>COMMENT</filename> や
        <filename>DESCR</filename>, <filename>PLIST</filename>
        といった package 情報を入れてください.</para>
      
      <note>
        <para>これらのファイルはもはや package
          の作成だけに使われるものではなくなっています.
          たとえ <makevar>NO_PACKAGE</makevar>
          が定義されていたとしても<emphasis>必須</emphasis>であることに注意してください.</para>
      </note>
    </sect1>
    
    <sect1>
      <title>RCS 文字列</title>
      
      <para>RCS が特別な意味を与えている文字列をパッチ内に入れないようにしてください.
        ファイルを私たちのソースツリーに入れる時,
        これらの文字列は CVS によって書き換えられてしまい,
        後でまたパッチを使おうとした時にうまくいかないことがあります.
        RCS 文字列はドル記号 (<literal>&#36;</literal>)
        で囲まれており,
        <literal>&#36;FreeBSD</literal> や
        <literal>&#36;RCS</literal>
        などで始まります.</para>
    </sect1>
    
    <sect1>
      <title>再帰的 diff</title>
      
      <para><command>diff</command>
        の再帰
        (<option>-r</option>)
        フラグを使って再帰的なパッチを作るのは大変結構なのですが,
        でき上がったパッチは必ず目でチェックして余計なゴミが入っていないことを確認してください.
        よくあるのはバックアップファイル同士の変更点,
        あるいは
        <command>Imake</command> や
        GNU <command>configure</command>
        を使うソフトウェアの
        <filename>Makefile</filename>
        の変更点が入っている場合などです.
        また <filename>configure.in</filename> を編集して
        <command>autoconf</command> を使って
        <command>configure</command> を作り直すときには,
        <command>configure</command> の diff は含めずに
        (それらは良く数千行におよぶことがあります),
        <literal>USE_AUTOCONF=yes</literal> を定義して
        <filename>configure.in</filename> の
        diff をとってください.</para>

      <para>ファイルをまるごと消す場合には,
        パッチを使わずに
        <maketarget>post-extract</maketarget> ターゲットで消す方が簡単です.
        できあがった差分に満足したら,
        それらをソースのファイルごとに別々のパッチファイルに分割してください.</para>
    </sect1>
    
    <sect1 id="porting-prefix">
      <title><makevar>PREFIX</makevar></title>
      
      <para>なるべく port は <makevar>PREFIX</makevar>
        に対する相対パスにインストールすることができるように心がけてください
        (この変数の値は
        <makevar>USE_X_PREFIX</makevar> か
        <makevar>USE_IMAKE</makevar> が指定してある時には
        <makevar>X11BASE</makevar>
        (デフォルト<filename>/usr/X11R6</filename>),
        そうでない場合には<makevar>LOCALBASE</makevar>
        (デフォルト<filename>/usr/local</filename>)
        にセットされます).</para>
      
      <para>サイトによってフリーソフトウェアがインストールされる場所が違いますので,
        ソース内で
        <filename>/usr/local</filename> や
        <filename>/usr/X11R6</filename>
        を明示的に書かないようにしてください.
        X のプログラムで
        <command>imake</command> を使うものについては,
        <!-- kuriyama - imake is command -->           
        これは問題にはなりません.
        それ以外の場合にはソース中の Makefile やスクリプトで
        <filename>/usr/local</filename>
        (imake を使わない X のプログラムは <filename>/usr/X11R6</filename>)
        と書いてあるところを
        <makevar>PREFIX</makevar> に書き換えてください.
        この値は port のコンパイルおよび,
        インストール時に自動的に環境変数として下位 make に渡されます.</para>
      
      <para><makevar>USE_X_PREFIX</makevar>
        は本当に必要な時
        (つまり X のライブラリなどとリンクしたり,
        <makevar>X11BASE</makevar> 以下にあるファイルを参照したりする必要がある時)
        以外には設定しないでください.</para>
      
      <para>変数 <makevar>PREFIX</makevar> の値は
        port の Makefile やユーザの環境で変更することもできます.
        しかし, 個々の port が Makefile
        でこの変数の値を明示的に設定することはなるべくしないでください.</para>
      
      <para>また, 他の port からインストールされるプログラムやファイルを指定するときには,
        上で述べた変数を使用してください.
        たとえば <command>less</command> のフルパスを
        <literal>PAGER</literal> というマクロに入れたい場合は,
        コンパイラに
        <literal>-DPAGER=\"/usr/local/bin/less\"</literal>
        と渡すかわりに
        <programlisting>-DPAGER=\"&#36;{PREFIX}/bin/less\"</programlisting>
        (X を使う port の時は
        <programlisting>-DPAGER=\"&#36;{LOCALBASE}/bin/less\"</programlisting>)
        を渡してください.
        こうしておけば <quote>/usr/local</quote>
        がまるごとどこか他の場所に移してあるサイトでもあなたの port
        がそのまま使える可能性が高くなります.</para>
    </sect1>
    
    <sect1>
      <title>ディレクトリ構成</title>
      
      <para>インストール時には
        <makevar>PREFIX</makevar>
        の正しいサブディレクトリにファイルを置くように心がけてください.
        ソフトウェアによっては新しいディレクトリを一つ作って,
        ファイルを全部それに入れてしまうものがありますが,
        それは良くありません.
        また, バイナリ, ヘッダファイルとマニュアル以外のすべてを
        <filename>lib</filename>
        というディレクトリに入れてしまう port もありますが,
        これも BSD 的なファイルシステム構成からいうと正しくありません.
        これは以下のように分散すべきです.
        <filename>etc</filename>
        にセットアップ/コンフィグレーションファイル,
        <filename>libexec</filename>
        に内部で使用されるプログラム
        (コマンドラインから呼ばれることのないコマンド),
        <filename>sbin</filename>
        に管理者用のコマンド,
        <filename>info</filename>
        に GNU Info 用の文書,
        そして
        <filename>share</filename> にアーキテクチャに依存しないファイルが入ります.
        詳細については &man.hier.7; のマニュアルページを参照してください.
        <filename>/usr</filename>
          の構成方針はほとんどそのまま
          <filename>/usr/local</filename> にもあてはまります.
          USENET <quote>ニュース</quote>を扱う ports は例外です.
          これらはファイルのインストール先として
	  <filename><makevar>PREFIX</makevar>/news</filename>
	  を使用します.</para>
    </sect1>
    
    <sect1 id="porting-cleaning">
      <title>空のディレクトリの削除</title>
      
      <para>ports は削除の際に,
        自分自身を消去したあとに
        (ディレクトリの)
        削除をするようにしてください.
        これは大抵の場合 <literal>@dirrm</literal> の行を
        ports が作成するすべてのディレクトリについて加えることによって実現できます.
        親ディレクトリは子ディレクトリを先に消さないと消せないことに注意してください.</para>
      
      <programlisting>
 :
lib/X11/oneko/pixmaps/cat.xpm
lib/X11/oneko/sounds/cat.au
 :
@dirrm lib/X11/oneko/pixmaps
@dirrm lib/X11/oneko/sounds
@dirrm lib/X11/oneko</programlisting>

      <para>といった感じです.</para>
      
      <para>しかし時として,
        他の port とディレクトリを共有しているために
        <literal>@dirrm</literal> がエラーを返すことがあります.
        <command>rmdir</command> を
        <literal>@unexec</literal>
        から呼びだすことによって,
        警告(warning)なしで空のディレクトリのみを削除することができます.
      </para>

      <programlisting>
@unexec rmdir %D/share/doc/gimp 2>/dev/null || true</programlisting>

      <para>
        これを使えば, たとえ他の
        port がファイルをインストールしていて
        <filename><makevar>PREFIX</makevar>/share/doc/gimp</filename>
        が空でない場合でもエラーメッセージは表示されませんし,
        <command>pkg_delete</command>
        が異常終了することもありません.</para>
    </sect1>
    
    <sect1>
      <title>UID</title>
      
      <para>あなたの port が,
        インストールされるシステム上に特定のユーザを必要とする場合は
        <filename>pkg/INSTALL</filename> スクリプトから
        <command>pw</command>
        コマンドを実行して自動的にそのユーザを追加するようにしてください.
        <filename>net/cvsup-mirror</filename> の port が参考になるでしょう.</para>
      
      <para>あなたの port がバイナリの
        package としてインストールされる場合とコンパイルされる場合の両方で,
        同じユーザー/グループ ID
        を使わなければならないのなら, 50 から 99 の間で空いている UID を選んで登録してください.
        <filename>japanese/Wnn</filename> の port
        が参考になるでしょう.</para>
      
      <para>既にシステムや他の port で利用されている
        UIDを使わないように十分注意してください.
        現在の 50 から 99 までの間の UID は以下のとおりです.</para>
      
      <programlisting>
majordom:*:54:54:Majordomo Pseudo User:/usr/local/majordomo:/nonexistent
cyrus:*:60:60:the cyrus mail server:/nonexistent:/nonexistent
gnats:*:61:1:GNATS database owner:/usr/local/share/gnats/gnats-db:/bin/sh
uucp:*:66:66:UUCP pseudo-user:/var/spool/uucppublic:/usr/libexec/uucp/uucico
xten:*:67:67:X-10 daemon:/usr/local/xten:/nonexistent
pop:*:68:6:Post Office Owner (popper):/nonexistent:/nonexistent
wnn:*:69:7:Wnn:/nonexistent:/nonexistent
ifmail:*:70:66:Ifmail user:/nonexistent:/nonexistent
pgsql:*:70:70:PostgreSQL pseudo-user:/usr/local/pgsql:/bin/sh
ircd:*:72:72:IRCd hybrid:/nonexistent:/nonexistent
alias:*:81:81:QMail user:/var/qmail/alias:/nonexistent
qmaill:*:83:81:QMail user:/var/qmail:/nonexistent
qmaild:*:82:81:QMail user:/var/qmail:/nonexistent
qmailq:*:85:82:QMail user:/var/qmail:/nonexistent
qmails:*:87:82:QMail user:/var/qmail:/nonexistent
qmailp:*:84:81:QMail user:/var/qmail:/nonexistent
qmailr:*:86:82:QMail user:/var/qmail:/nonexistent
msql:*:87:87:mSQL-2 pseudo-user:/var/db/msqldb:/bin/sh
mysql:*:88:88:MySQL Daemon:/var/db/mysql:/sbin/nologin</programlisting>

      <para>このリストを最新の状態に保つためにも,
        この範囲の UID や GID を予約するような port を作ったり,
        既存の port にそのような改変を行ってわたしたちに送るときには
        UID の予約に関する注意書きをつけてください.</para>
    </sect1>
    
    <sect1>
      <title>合理的な port</title>
      
      <para><filename>Makefile</filename>
        は単純かつ適切であるべきです. もし,
        <filename>Makefile</filename> を数行短かくできたり,
        もっと読みやすくできるのであればそうしてください.
        たとえば,
        シェルの <literal>if</literal> 構文を使うかわりに
        make の <literal>.if</literal> 構文を使う,
        <makevar>EXTRACT*</makevar> の再定義で代用できるのであれば
        <maketarget>do-extract</maketarget> を再定義しない,
        <literal>CONFIGURE_ARGS += --prefix=&dollar;{PREFIX}</literal>
        とするかわりに
        <makevar>GNU_CONFIGURE</makevar> とする, などです.</para>
    </sect1>
    
    <sect1>
      <title><makevar>CFLAGS</makevar> の尊重</title>
      
      <para><makevar>CFLAGS</makevar> 変数は尊重すべきです.
        port がこれを無視する場合は,
        <literal>NO_PACKAGE=ignores cflags</literal> を
        <filename>Makefile</filename> に加えてください.</para>

      <para><makevar>CFLAGS</makevar> 変数をきちんと考慮した
        <filename>Makefile</filename> の例を以下に示します.
        <makevar>+=</makevar> の部分に注目してください.</para>
      
      <programlisting>CFLAGS += -Wall -Werror</programlisting>

      <para>次は <makevar>CFLAGS</makevar>
        変数を考慮しない <filename>Makefile</filename> の例です.</para>
      
      <programlisting>CFLAGS = -Wall -Werror</programlisting>

      <para><makevar>CFLAGS</makevar> 変数は,
        FreeBSD システムの
        <filename>/etc/make.conf</filename>
        で定義されています.
        最初の例では既存の定義を保存しつつ <makevar>CFLAGS</makevar>
        変数にオプションフラグを追加しているのに対し,
        二番目の例では既存の定義をすべて無効にしてしまっています.</para>
    </sect1>
    
    <sect1>
      <title>コンフィグレーション (設定) ファイル</title>
      
      <para>もしあなたの port が設定ファイルを
        <filename><makevar>PREFIX</makevar>/etc</filename>
        に置く必要がある場合には, それを単純にインストールしたり,
        <filename>pkg/PLIST</filename>
        に加えては<emphasis>いけません</emphasis>.
        こうしてしまうと
        <command>pkg_delete</command>
        によってユーザが苦労して作ったファイルが消えてしまったり,
        新しくインストールする時に上書きされてしまったりします.</para>
      
      <para>かわりに見本となるファイルを
        サフィックス
        (<filename><replaceable>filename</replaceable>.sample</filename> が良いでしょう)
        を付けてインストールして<link linkend="porting-message">メッセージ</link>を表示し,
        ソフトウェアを動かす前にユーザがそのファイルをコピーして編集をしなければならないことを知らせましょう.
      </para>
    </sect1>

    <sect1>
      <title>portlint</title>
      
      <para>送付や commit をする前に
        <link linkend="porting-portlint"><command>portlint</command></link>
        を使ってチェックしましょう.</para>
    </sect1>
    
    <sect1>
      <title>フィードバック</title>
      
      <para>port を作るためにソフトウェアに変更を加えたら,
        なるべく原作者にその旨を伝えてパッチ等を送ってください.
        これらが次のリリースに取り入れられればアップグレードが楽になります.</para>
    </sect1>

    <sect1>
      <title><filename>README.html</filename></title>
      
      <para>
        <filename>README.html</filename> というファイルを含めてはいけません.
        このファイルは, cvs コレクションの一部ではなく,
        <command>make readme</command> コマンドで生成されるファイルです.</para>
    </sect1>
    
    <sect1>
      <title>その他諸々</title>
      
      <para><filename>pkg/DESCR</filename>,
        <filename>pkg/COMMENT</filename>,
        <filename>pkg/PLIST</filename> などのファイルはそれぞれ二重にチェックしてください.
        再検討してもっと良い記述があればそれに置きかえてください.</para>
      
      <para>GNU General Public License
        (GNU一般公有使用許諾)
        のコピーは
        (すでにあるので)
        コピーしないでください.
        お願いします.</para>
      
      <para>法律に関することには十分注意をはらってください.
        わたしたちに法律に反するような形でソフトウェアの配布をさせないでください!</para>
    </sect1>

    <sect1>
      <title>困ったら....</title>
      
      <para>わたしたちに質問を送る前に,
        既存の port の例と
        <filename>bsd.port.mk</filename> をちゃんと読んでください!
        <!-- smiley --><emphasis>;)</emphasis></para>
      
      <para>それでもわからないことがあったら一人で悩まないでどんどん質問してください!
        <!-- smiley --><emphasis>:-)</emphasis></para>
    </sect1>
  </chapter>

  <chapter id="porting-samplem">
    <title><filename>Makefile</filename> のサンプル</title>
    
    <para>これは port の
      <filename>Makefile</filename> を作る際のお手本です.
      かぎかっこ ([]) 内のコメントは忘れずに取ってください.</para>
    
    <para>変数の順番, 段落の間の空行など,
      <filename>Makefile</filename>
      を作るときはなるべくこの形式に従ってください.
      この形式は重要な情報が簡単に見つけられるように設計されています.
      <link linkend="porting-portlint">portlint</link> を使って
      <filename>Makefile</filename> をチェックすることが推奨されています.</para>
    
    <programlisting>
[ヘッダ ... どのような port の Makefile かすぐにわかるようになっています]
# New ports collection makefile for:	xdvi
["version required" 行は, PORTVERSION 変数では port のバージョンを
十分に表現できない場合にのみ必要です. ]
# Version required:    pl18 + japanization patches 18.1 and 18.2
[この Makefile の最初の版が作成された日付です.
 この port をアップグレードするときには変えないでください.]
# Date created:	26 May 1995
[このソフトウェアを最初に FreeBSD に port した人の名前, つまり,
 この Makefile の最初の版を書いた人です. この port をアップグレー
 ドするとき, この行も変えないでください.]
# Whom:		Satoshi Asami &lt;asami@FreeBSD.org&gt;
#
# &#36;FreeBSD&#36;
[ ^^^^^^^^^ この部分は, CVS ツリーに入れる時に自動的に RCS の ID 文字列に
 置き換えられます.]
#

[port 自体, およびオリジナルのソースを取ってくるところを記述する部分.
 最初は必ず PORTNAME と PORTVERSION, そして必要なら PKGNAME,
 CATEGORIES, 続いて MASTER_SITES が置かれ, さらに MASTER_SITE_SUBDIR が
 置かれることもあります.  必要なら PKGNAMEPREFIX と PKGNAMESUFFIX が
 それに続き, そして DISTNAME, EXTRACT_SUFX, DISTFILES が,
 また, その後に必要に応じて EXTRACT_ONLY が置かれます.]
PORTNAME=      xdvi
PORTVERSION=   18.2
CATEGORIES=	print
[MASTER_SITE_* マクロを使用しない場合は,
最後のスラッシュを忘れないように ("/")!]
MASTER_SITES= ${MASTER_SITE_XCONTRIB}
MASTER_SITE_SUBDIR= applications
DISTNAME=      xdvi-pl18
[ソースファイルが標準の ".tar.gz" 形式でない時にこれを使いましょう]
EXTRACT_SUFX=	.tar.Z

[配布パッチセクション -- ない場合もあります]
PATCH_SITES=	ftp://ftp.sra.co.jp/pub/X11/japanese/
PATCHFILES=	xdvi-18.patch1.gz xdvi-18.patch2.gz

[保守責任者 -- これは *必ず* 必要です. 担当者 (あなた) 自身, あるいは
 担当者に素早く連絡をとれる人のアドレスを書いてください. どうしてもこ
 こに自分のアドレスを書くのがいやな人は "ports@FreeBSD.org" と書いて
 もいいです]
MAINTAINER=	asami@FreeBSD.org

[依存するport -- ない場合もあります]
RUN_DEPENDS=	gs:${PORTSDIR}/print/ghostscript
LIB_DEPENDS=	Xpm.5:${PORTSDIR}/graphics/xpm

[ここには標準の bsd.port.mk の変数で, 上のどれにもあてはまらないものを
 書きます]
[コンフィグレーション, コンパイル, インストールなどの時に質問をする
 なら...]
IS_INTERACTIVE=yes
[${DISTNAME} 以外のディレクトリにソースが展開されるなら...]
WRKSRC=	${WRKDIR}/xdvi-new
[配布されているパッチが ${WRKSRC} に対する相対パスで作られてい
 い場合にこの変数の指定が必要かも...]
PATCH_DIST_STRIP=	-p1
[GNU autoconf によって生成された "configure" スクリプトを走らせたいなら...]
GNU_CONFIGURE=	yes
[/usr/bin/makeでなく, GNU make を使わないといけないなら...]
USE_GMAKE=	yes
[これが X のアプリケーションで "xmkmf -a" を走らせたいなら...]
USE_IMAKE=	yes
[などなど]

[下の方のルールで使う非標準の変数]
MY_FAVORITE_RESPONSE=	"yeah, right"

[そして, 特別なターゲット, 使用順に]
pre-fetch:
	i go fetch something, yeah

post-patch:
	i need to do something after patch, great

pre-install:
	and then some more stuff before installing, wow

[最後には必ず]
.include &lt;bsd.port.mk&gt;</programlisting>
  </chapter>

  <chapter id="porting-autoplist"> 
    <title>パッキングリストの自動生成</title>

    <para>まず, あなたの port に
      <filename>PLIST</filename>
      がないことを除いて完全なことを確認して,
      空の <filename>PLIST</filename> を作ってください.</para>
    
    <screen>&prompt.root; <userinput>touch PLIST</userinput></screen>
    
    <para>次に, あなたの port
      をインストールすることができるディレクトリ階層を新たに作成してください.
      また, 依存するものをインストールしてください.</para>
    
    <screen>&prompt.root; <userinput>mtree -U -f /etc/mtree/BSD.local.dist -d -e -p /var/tmp/<replaceable>port-name</replaceable></userinput>
&prompt.root; <userinput>make depends PREFIX=/var/tmp/<replaceable>port-name</replaceable></userinput></screen>

    <para>このディレクトリ構造を新しいファイルに保存してください.</para>

    <screen>&prompt.root; <userinput>(cd /var/tmp/<replaceable>port-name</replaceable> && find * \! -type d) &gt; OLD-DIRS</userinput></screen>

    <para>もしあなたの port が <makevar>PREFIX</makevar> にちゃんと従うなら, 
      ここで port をインストールしてパッキングリストを作ることができます.</para>

    <screen>&prompt.root; <userinput>make install PREFIX=/var/tmp</userinput>
&prompt.root; <userinput>(cd /var/tmp/<replaceable>port-name</replaceable> && find * \! -type d) &gt; pkg/PLIST</userinput></screen>

    <para>新しく生成されたディレクトリはすべてパッキングリストに追加する必要があります.</para>

    <screen>&prompt.root; <userinput>(cd /var/tmp/<replaceable>port-name && find * -type d) | comm -13 OLD-DIRS - | sed -e 's#^#@dirrm#' &gt;&gt; pkg/PLIST</replaceable></userinput></screen>

    <para>最後に, パッキングリストを手で整える必要があります.  
      完全に自動化されていると言ったのはうそです.
      マニュアルページファイルはパッキングリストにではなく,
      port の <filename>Makefile</filename> 中の
      <makevar>MAN<replaceable>n</replaceable></makevar>
      に記述しなければなりません.
      ユーザ設定ファイルは削除するか
      <filename><replaceable>filename</replaceable>.sample</filename>
      としてインストールされなければなりません.
      また <filename>info/dir</filename>
      ファイルはリストに含めず,
      <link linkend="porting-info">info ファイル</link>に記述されているように,
      適切な <filename>install-info</filename> 行に追加しなければなりません.
      port によってインストールされるライブラリは, 
      <link linkend="porting-ldconfig">ldconfig</link>
      の節で示したように記載されるべきです.</para>
  </chapter>
  
  <chapter id="porting-pkgname">
    <title>package の名前</title>
    
    <para>package の名前は以下のルールにしたがってつけてください.
      これは package のディレクトリを見やすくするためで,
      無秩序な名前がたくさん並んでいるとユーザが使いづらくなるのではという心配からです
      (FTP サイトなどにはたくさん package がありますからね).</para>
    
    <para>package の名前は以下のようにしてください.
      <filename><replaceable>言語-</replaceable>名前<replaceable>-オプション</replaceable><replaceable>バージョン.番号</replaceable></filename></para>
    
    <para>package 名は
      <literal>${PKGNAMEPREFIX}${PORTNAME}${PKGNAMESUFFIX}-${PORTVERSION}</literal>
      というように定義されています.
      変数がこの書式と適合していることを確認してください.</para>
    
    <orderedlist>
      <listitem>
        <para>FreeBSD
          はユーザの慣れ親しんだ言語のサポートに力を入れています.
          特定の言語のための port の package 名には
          <replaceable>言語-</replaceable> に ISO-639
          で定義されている言語名の略称を入れてください.
          たとえば日本語なら <literal>ja</literal>,
          ロシア語なら <literal>ru</literal>,
          ベトナム語なら <literal>vi</literal>,
          中国語なら <literal>zh</literal>,
          韓国語ならば <literal>ko</literal>,
          ドイツ語なら <literal>de</literal>
          といった具合です.</para>
        
        <para>port がある言語地域に特化したものである場合には,
          さらに二文字の国名コードを付加してください.
          たとえば合衆国英語圏は <literal>en_US</literal> となり,
          スイスのフランス語圏は <literal>fr_CH</literal> となります.</para>
        
        <para><replaceable>言語-</replaceable> 部分は,
          <makevar>PKGNAMEPREFIX</makevar> 変数に定義されなければなりません.</para>
      </listitem>
      
	<listitem>
        <para><filename>名前</filename>の部分は原則的にはすべて英小文字を使います.
          例外はたくさんのプログラムが入っている巨大な port の場合で,
          XFree86 (ほんとにあるんですよ) や
          ImageMagick
          などがこれにあたります.
          そうでない場合には名前の大文字を小文字に
          (少なくとも最初の一字だけは)
          変えてください.
          もし大文字であることが重要な場合
          (たとえば一文字の名前,
          <literal>R</literal> とか <literal>V</literal>)
          には,
          あなたの裁量で大文字を使うのも良いでしょう.
          Perl 5 のモジュールでは先頭に
          <literal>p5-</literal> を付け,
          二重コロン (<literal>::</literal>)
          のセパレータをハイフン
          (<literal>-</literal>)
          に置きかえる習慣になっています.
          たとえば
          <literal>Data::Dumper</literal> は
          <literal>p5-Data-Dumper</literal> になります.
          また, そのソフトウェアの名前として通常使われるものに番号,
          ハイフン, あるいは下線が入っている場合には,
          それらを使うことも構いません
          (<literal>kinput2</literal>など).</para>
      </listitem>
      
      <listitem>
        <para>コンパイル時に環境変数や
          <command>make</command> の引数などで<link linkend="porting-masterdir">ハードコードされたデフォルト</link>を変えてコンパイルできる場合,
          <replaceable>-compiled.specifics</replaceable>
          にそのコンパイル時のデフォルトを入れてください
          (ハイフンはあってもなくてもかまいません).
          用紙のサイズ, あるいはフォントの解像度などがこれにあたります.</para>
        
        <para><replaceable>compiled.specifics</replaceable> 部分は,
          <makevar>PKGNAMESUFFIX</makevar> 変数に定義されなければなりません.</para>
      </listitem>
      
      <listitem>
        <para>バージョン番号は数字とアルファベットからなり,
          ピリオド (.) で区切ります.
          アルファベットは二文字以上続けてはいけません.
          ただ一つの例外は「パッチレベル」を意味する
          <literal>pl</literal> で,
          それ以外にバージョン番号がまったくついていない場合にのみ使うことができます.
          もしソフトウェアのバージョンに
          "alpha", "beta" や "pre" といった文字列が含まれる場合には,
          ピリオドの後に最初の一文字をとってください.
          これらの後に, さらにバージョン文字列が続く場合には,
          一文字のアルファベットの後にピリオドをつけずに番号を続けます.</para>
        
        <para>この考え方は,
          バージョン文字列を見て簡単に ports を並べられるようにするためのものです.
          特に, バージョン番号の各部分が必ずピリオドで区切られていること,
          また日付の部分がバージョン文字列の一部となっている場合には
          
          <literal><replaceable>yyyy</replaceable>.<replaceable>mm</replaceable>.<replaceable>dd</replaceable></literal>
          
          という書式を使っていることを確認してください.
          
          <literal><replaceable>dd</replaceable>.<replaceable>mm</replaceable>.<replaceable>yyyy</replaceable></literal>
          
          や, 2000 年問題に対応していない
          
          <literal><replaceable>yy</replaceable>.<replaceable>mm</replaceable>.<replaceable>dd</replaceable></literal>
          
          という書式を使ってはいけません.</para>
      </listitem>
    </orderedlist>
    
    <para>では, <makevar>DISTNAME</makevar>を正しい
      <makevar>PKGNAME</makevar>
      に直す例を見てみましょう:</para>
    
    <para>以下は, ソフトウェアの作者が決めた名前から
      適切な package 名に変換する方法を示した (実際の) 例です.</para>
    
    <informaltable frame="none">
      <tgroup cols="6">
        <thead>
          <row>
            <entry>配布名</entry>
            <entry><makevar>PKGNAMEPREFIX</makevar></entry>
            <entry><makevar>PORTNAME</makevar></entry>
            <entry><makevar>PKGNAMESUFFIX</makevar></entry>
            <entry><makevar>PORTVERSION</makevar></entry>
            <entry>理由</entry>
          </row>
        </thead>
        
        <tbody>
          <row>
            <entry>mule-2.2.2</entry>
            <entry>(空)</entry>
            <entry>mule</entry>
            <entry>(空)</entry>
            <entry>2.2.2</entry>
            <entry>変更の必要はありません</entry>
          </row>
          
          <row>
            <entry>XFree86-3.3.6</entry>
            <entry>(空)</entry>
            <entry>XFree86</entry>
            <entry>(空)</entry>
            <entry>3.3.6</entry>
            <entry>変更の必要はありません</entry>
          </row>
          
          <row>
            <entry>EmiClock-1.0.2</entry>
            <entry>(空)</entry>
            <entry>emiclock</entry>
            <entry>(空)</entry>
            <entry>1.0.2</entry>
            <entry>プログラム一つだけの時は小文字のみ</entry>
          </row>
          
          <row>
            <entry>rdist-1.3alpha</entry>
            <entry>(空)</entry>
            <entry>rdist</entry>
            <entry>(空)</entry>
            <entry>1.3.a</entry>
            <entry><literal>alpha</literal> のような文字列は使えない</entry>
          </row>
          
          <row>
            <entry>es-0.9-beta1</entry>
            <entry>(空)</entry>
            <entry>es</entry>
            <entry>(空)</entry>
            <entry>0.9.b1</entry>
            <entry><literal>alpha</literal> のような文字列は使えない</entry>
          </row>
          
          <row>
            <entry>v3.3beta021.src</entry>
            <entry>(空)</entry>
            <entry>tiff</entry>
            <entry>(空)</entry>
            <entry>3.3</entry>
            <entry>なんなんでしょう ;)</entry>
          </row>
          
          <row>
            <entry>tvtwm</entry>
            <entry>(空)</entry>
            <entry>tvtwm</entry>
            <entry>(空)</entry>
            <entry>pl11</entry>
            <entry>バージョン番号は必ず必要</entry>
          </row>
          
          <row>
            <entry>piewm</entry>
            <entry>(空)</entry>
            <entry>piewm</entry>
            <entry>(空)</entry>
            <entry>1.0</entry>
            <entry>同上</entry>
          </row>
          
          <row>
            <entry>xvgr-2.10pl1</entry>
            <entry>(空)</entry>
            <entry>xvgr</entry>
            <entry>(空)</entry>
            <entry>2.10.1</entry>
            <entry><literal>pl</literal> が使えるのは,
              他にメジャー/マイナーバージョン番号がない場合のみ</entry>
          </row>
          
          <row>
            <entry>gawk-2.15.6</entry>
            <entry>ja-</entry>
            <entry>gawk</entry>
            <entry>(空)</entry>
            <entry>2.15.6</entry>
            <entry>日本語バージョン</entry>
          </row>
          
          <row>
            <entry>psutils-1.13</entry>
            <entry>(空)</entry>
            <entry>psutils</entry>
            <entry>-letter</entry>
            <entry>1.13</entry>
            <entry>コンパイル時に用紙のサイズを指定</entry>
          </row>
          
          <row>
            <entry>pkfonts</entry>
            <entry>(空)</entry>
            <entry>pkfonts</entry>
            <entry>300</entry>
            <entry>1.0</entry>
            <entry>300dpiフォント用の package</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    
    <para>オリジナルのソースにまったくバージョン情報が見当たらず,
      また原作者が新しいバージョンをリリースする可能性が低いときには,
      バージョン番号として
      <literal>1.0</literal> を使えばいいでしょう
      (上記の piewm の例がこれにあたります).
      そうでない場合には原作者に聞くか, 日付
      (<literal><replaceable>yyyy</replaceable>.<replaceable>mm</replaceable>.<replaceable>dd</replaceable></literal>)
      を使うなどしてください.</para>
  </chapter>
  
  <chapter id="porting-categories">
    <title>カテゴリ</title>
    
    <para>すでにご存知のように,
      ports はいくつかのカテゴリに分類されています.
      これを有効に利用するためには,
      port を作成する人々とユーザが,
      それぞれのカテゴリが何であるか,
      どのようにしてカテゴリに分類するかを理解する必要があります.</para>
    
    <sect1>
      <title>現在のカテゴリのリスト</title>
      
      <para>まず, これが現在の port のカテゴリのリストです.
        アスタリスク(<literal>*</literal>)
        が付いているものは仮想 (<emphasis>virtual</emphasis>)
        カテゴリです &mdash;
        これらには対応するサブディレクトリが port ツリーにはありません.</para>
      <!-- kuriyama - don't use " - - " as literal -->
      
      <note>
        <para>仮想カテゴリでないものは,
          そのサブディレクトリ内の
          <filename>pkg/COMMENT</filename>
          に一行の記述があります
          (例: <filename>archivers/pkg/COMMENT</filename>).</para>
      </note>
      
      <informaltable frame="none">
        <tgroup cols="2">
          <thead>
            <row>
              <entry>カテゴリ</entry>
              <entry>説明</entry>
            </row>
          </thead>
          
          <tbody>
            <row>
              <entry><filename>afterstep*</filename></entry>
              <entry>AfterStep ウィンドウマネージャをサポートする ports</entry>
            </row>
            
            <row>
              <entry><filename>archivers</filename></entry>
              <entry>アーカイブ用ツール</entry>
            </row>
            
            <row>
              <entry><filename>astro</filename></entry>
              <entry>天文学関連の ports</entry>
            </row>
            
            <row>
              <entry><filename>audio</filename></entry>
              <entry>サウンドをサポートする ports</entry>
            </row>
            
            <row>
              <entry><filename>benchmarks</filename></entry>
              <entry>ベンチマークユーティリティ</entry>
            </row>
            
            <row>
              <entry><filename>biology</filename></entry>
              <entry>生物学関連のソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>cad</filename></entry>
              <entry>CAD ツール</entry>
            </row>
            
            <row>
              <entry><filename>chinese</filename></entry>
              <entry>中国語サポート</entry>
            </row>
            
            <row>
              <entry><filename>comms</filename></entry>
              <entry>通信ソフトウェア. ほとんどはシリアルポート用です.</entry>
            </row>
            
            <row>
              <entry><filename>converters</filename></entry>
              <entry>文字コード変換</entry>
            </row>
            
            <row>
              <entry><filename>databases</filename></entry>
              <entry>データベース</entry>
            </row>
            
            <row>
              <entry><filename>deskutils</filename></entry>
              <entry>コンピュータが発明される以前に机上で使われていた道具
                (訳注: いわゆるデスクトップユーティリティのこと)</entry>
            </row>
            
            <row>
              <entry><filename>devel</filename></entry>
              <entry>開発ユーティリティ.
                どうしてもここに置かなければならない理由があるのでない限り,
                ライブラリをここに含めないでください.</entry>
            </row>
            
            <row>
              <entry><filename>editors</filename></entry>
              <entry>一般的なエディタ.
                特殊なエディタはそれぞれふさわしいセクションに入れます
                (たとえば数式エディタは <filename>math</filename> です).</entry>
            </row>
            
            <row>
              <entry><filename>elisp</filename></entry>
              <entry>Emacs-lisp の ports</entry>
            </row>
            
            <row>
              <entry><filename>emulators</filename></entry>
              <entry>他のオペレーティングシステムのエミュレータ.
                端末エミュレータはここに含まれません &mdash;
                X ベースのものは <filename>x11</filename> に,
                テキストベースのものは機能によって
                <filename>comms</filename> か
                <filename>misc</filename> に分類されます.</entry>
            </row>
            
            <row>
              <entry><filename>ftp</filename></entry>
              <entry>FTP クライアントとサーバユーティリティ.
                port が FTP と HTTP の両方をサポートしていれば,
                <filename>ftp</filename>
                に入れ, 第二カテゴリを
                <filename>www</filename> とします.</entry>
            </row>
            
            <row>
              <entry><filename>games</filename></entry>
              <entry>ゲーム</entry>
            </row>
            
            <row>
              <entry><filename>german</filename></entry>
              <entry>ドイツ語サポート</entry>
            </row>
            
            <row>
              <entry><filename>gnome*</filename></entry>
              <entry>GNU Object Model Environment (GNOME)
                プロジェクトの ports</entry>
            </row>
            
            <row>
              <entry><filename>graphics</filename></entry>
              <entry>グラフィックユーティリティ</entry>
            </row>

            <row>
              <entry><filename>hebrew</filename></entry>
              <entry>ヘブライ語サポート</entry>
            </row>
            
            <row>
              <entry><filename>irc</filename></entry>
              <entry>インターネットリレーチャット (IRC) 用ユーティリティ</entry>
            </row>
            
            <row>
              <entry><filename>ipv6*</filename></entry>
              <entry>IPv6 関連のソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>japanese</filename></entry>
              <entry>日本語サポート</entry>
            </row>
            
            <row>
              <entry><filename>java</filename></entry>
              <entry>Java 言語サポート</entry>
            </row>
            
            <row>
              <entry><filename>kde*</filename></entry>
              <entry>K Desktop Environment (kde) の ports</entry> 
            </row>
            
            <row>
              <entry><filename>korean</filename></entry>
              <entry>韓国語サポート</entry>
            </row>
            
            <row>
              <entry><filename>lang</filename></entry>
              <entry>プログラミング言語</entry>
            </row>
            
            <row>
              <entry><filename>linux*</filename></entry>
              <entry>Linux アプリケーションとサポートユーティリティ</entry>
            </row>
            
            <row>
              <entry><filename>mail</filename></entry>
              <entry>メールソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>math</filename></entry>
              <entry>数値計算ソフトウェアやその他の数学ソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>mbone</filename></entry>
              <entry>MBone アプリケーション</entry>
            </row>
            
            <row>
              <entry><filename>misc</filename></entry>
              <entry>種々のユーティリティ
                &mdash;
                基本的に他のカテゴリに属さないものです.
                これは他の仮想でないカテゴリを伴わない, 唯一のカテゴリです.
                <literal>misc</literal> と他のカテゴリが
                <makevar>CATEGORIES</makevar> 行に書かれている場合,
                <literal>misc</literal>
                を削除して他のサブディレクトリにおいて良いという意味になります.</entry>
            </row>
            
            <row>
              <entry><filename>net</filename></entry>
              <entry>種々のネットワークソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>news</filename></entry>
              <entry>USENET ニュースソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>offix*</filename></entry>
              <entry>OffiX suite の ports</entry>
            </row>
            
            <row>
              <entry><filename>palm</filename></entry>
              <entry>3Com Palm(tm) シリーズをサポートするソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>perl5*</filename></entry>
              <entry>実行に perl バージョン 5 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>plan9*</filename></entry>
              <entry>Plan9 に由来するさまざまなソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>print</filename></entry>
              <entry>印刷ソフトウェア.
                DTP 用ツール (プレビュアなど) もここに分類されます.</entry>
            </row>
            
            <row>
              <entry><filename>python*</filename></entry>
              <entry>python 言語で書かれたソフトウェア</entry>
            </row>

            <row>
              <entry><filename>ruby*</filename></entry>
              <entry>ruby 言語で書かれたソフトウェア</entry>
            </row>
            
            <row>
              <entry><filename>russian</filename></entry>
              <entry>ロシア語サポート</entry>
            </row>

            <row>
              <entry><filename>security</filename></entry>
              <entry>セキュリティ関連のユーティリティ</entry>
            </row>
            
            <row>
              <entry><filename>shells</filename></entry>
              <entry>コマンドラインシェル</entry>
            </row>
            
            <row>
              <entry><filename>sysutils</filename></entry>
              <entry>システムユーティリティ</entry>
            </row>
            
            <row>
              <entry><filename>tcl75*</filename></entry>
              <entry>実行に Tcl バージョン 7.5 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>tcl76*</filename></entry>
              <entry>実行に Tcl バージョン 7.6 を必要とする ports</entry>
            </row>

            <row>
              <entry><filename>tcl80*</filename></entry>
              <entry>実行に Tcl バージョン 8.0 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>tcl81*</filename></entry>
              <entry>実行に Tcl バージョン 8.1 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>textproc</filename></entry>
              <entry>テキスト処理ユーティリティ.
                DTP ツールはここではなく, print/ に分類されます.</entry>
            </row>
            
            <row>
              <entry><filename>tk41*</filename></entry>
              <entry>実行に Tk バージョン 4.1 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>tk42*</filename></entry>
              <entry>実行に Tk バージョン 4.2 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>tk80*</filename></entry>
              <entry>実行に Tk バージョン 8.0 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>tk81*</filename></entry>
              <entry>実行に Tk バージョン 8.1 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>tkstep80*</filename></entry>
              <entry>実行に TkSTEP バージョン 8.0 を必要とする ports</entry>
            </row>
            
            <row>
              <entry><filename>vietnamese</filename></entry>
              <entry>ベトナム語サポート</entry>
            </row>
            
            <row>
              <entry><filename>windowmaker*</filename></entry>
              <entry>WindowMaker ウィンドウマネージャをサポートする ports</entry>
            </row>
            
            <row>
              <entry><filename>www</filename></entry>
              <entry>World Wide Web 関連のソフトウェア.
                HTML 言語サポートもここに分類されます.</entry>
            </row>
            
            <row>
              <entry>x11</entry>
              <entry>X ウィンドウシステムとその関連ソフトウェア.
                このカテゴリは,
                直接ウィンドウシステムをサポートするソフトウェアのみを対象とするものです.
                通常の X アプリケーションをここに分類しないでください.
                あなたの port が X アプリケーションで, 
                <makevar>USE_XLIB</makevar> が定義
                (<makevar>USE_IMAKE</makevar> を定義すると自動的に定義されます)
                されている場合は, 適切なカテゴリに分類してください.
                また, それらのほとんどは他の <filename>x11-*</filename>
                カテゴリ (下記参照) に分類されます.</entry>
            </row>
            
            <row>
              <entry><filename>x11-clocks</filename></entry>
              <entry>X11 用時計</entry>
            </row>
            
            <row>
              <entry><filename>x11-fm</filename></entry>
              <entry>X11 用ファイルマネージャ</entry>
            </row>
            
            <row>
              <entry><filename>x11-fonts</filename></entry>
              <entry>X11 フォントとフォントユーティリティ</entry>
            </row>
            
            <row>
              <entry><filename>x11-servers</filename></entry>
              <entry>X11 サーバ</entry>
            </row>
            
            <row>
              <entry><filename>x11-toolkits</filename></entry>
              <entry>X11 ツールキット</entry>
            </row>
            
            <row>
              <entry><filename>x11-wm</filename></entry>
              <entry>X11 ウィンドウマネージャ</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1>
      <title>適切なカテゴリの選択</title>
      
      <para>多くのカテゴリに重なるので,
        どれを<quote>第一</quote>カテゴリにするかを決めなければならないことがたびたびあるでしょう.
        これをうまく決めるルールがいくつかあります.
        以下はその優先順のリストで, 優先度の高いものから低いものの順に書いてあります.</para>
      
      <itemizedlist>
        <listitem>
          <para>言語特有のカテゴリがまず最初です.
            たとえば日本語の
            X11 のフォントをインストールする port の場合,
            <makevar>CATEGORIES</makevar> 行は
            <literal>japanese x11-fonts</literal>
            となるでしょう.</para>
        </listitem>
        
        <listitem>
          <para>より特徴的なカテゴリが,
            一般的なカテゴリより優先されます.
            たとえば, HTML エディタの場合は <literal>www editors</literal> となります.
            これを逆順にはしないでください.
            また,
            port が <literal>irc</literal>,
            <literal>mail</literal>,
            <literal>mbone</literal>,
            <literal>news</literal>,
            <literal>security</literal>,
            <literal>www</literal>
            のいずれかに属する場合には
            <literal>net</literal>
            は必要ありません.</para>
        </listitem>
        
        <listitem>
          <para><literal>x11</literal>
            を第二カテゴリにするのは第一カテゴリが自然言語の場合のみにしてください.
            特に X のアプリケーションには
            <literal>x11</literal>
            を指定<emphasis>しない</emphasis>でください.</para>
        </listitem>
        
        <listitem>
          <para>もし, あなたの port が他のどのカテゴリにも属しない場合には
            <literal>misc</literal> にしてください.</para>
        </listitem>
      </itemizedlist>

      <para>もし, あなたがカテゴリについて自信が持てない場合には,
        そのことを <command>send-pr</command> する時に書き加えてください.
        そうすれば import する前にそれについて議論できます
        (もしあなたがコミッターであれば,
        そのことを &a.ports; に送って先に議論するようにしてください
        &mdash; 新しい port が間違ったカテゴリに import
        されて, すぐ移動されることが多いので).</para>
    </sect1>
  </chapter>

  <chapter>
    <title>この文書と ports システムの変更</title>
    
    <para>もしあなたが, たくさんの ports の保守をしているのであれば,
      &a.ports; メーリングリストの内容を読むことを考えてください.
      ports のしくみについての重要な変更点はここに アナウンスされます.
      最新の変更点については, いつでも,
      <ulink url="http://www.FreeBSD.org/cgi/cvsweb.cgi/ports/Mk/bsd.port.mk">bsd.port.mk
        の CVS ログ</ulink>で詳細な情報を得ることができます.</para>
  </chapter>

  <chapter>
    <title>やっとおしまい!</title>
    
    <para>いやはや, 長い文章ですみません.
      ここまで読んでくださった方には感謝, 感謝でございます. 
      さあ, port の作り方がわかったところで世界中のソフトウェアを
      port 化しましょう.
      FreeBSD プロジェクトに貢献するには,
      それが最も簡単な方法です!
      <!-- smiley --><emphasis>:-)</emphasis></para>
  </chapter>
</book>

<!--
     Local Variables:
     mode: sgml
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     End:
-->
