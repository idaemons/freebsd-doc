.\" Copyright (c) 1990, 1991, 1993
.\"     The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"     This product includes software developed by the University of
.\"     California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)syslog.conf.5	8.1 (Berkeley) 6/9/93
.\" %FreeBSD: src/usr.sbin/syslogd/syslog.conf.5,v 1.12.2.1 1999/08/29 15:48:29 peter Exp %
.\"
.\" jpman %Id: syslog.conf.5,v 1.3 1998/07/16 01:34:25 yohta Stab %
.\"
.Dd June 9, 1993
.Dt SYSLOG.CONF 5
.Os
.Sh 名称
.Nm syslog.conf
.Nd
.Xr syslogd 8
設定ファイル
.Sh 解説
.Nm
ファイルは
.Xr syslogd 8
プログラムの設定ファイルです。
このファイルは
.Em program
指定によって分けられた行ブロックから構成されています。
それぞれの行は 2つのフィールドを含みます。
その行が適用されるメッセージのタイプと優先度を指定する
.Em selector
フィールドと、
.Xr syslogd
が選んだ基準とマッチしたメッセージを受けとった場合の動作を指定する
.Em action
フィールドです。
.Em selector
フィールドと
.Em action
フィールドは 1 つ以上のタブ文字または空白で区切られています。
.Pp
区切りに空白を使用すると、
.Em syslog.conf
は他の Unix や Unix 的システムと互換性が無くなってしまうことに
注意してください。
この機能は、設定を容易にし
(例えば
.Em syslog.conf
にカットアンドペーストできるようにし)、
その際発生し得るミスを避けるため追加されました。
しかしながらこの変更は、古いスタイルの
.Em syslog.conf
(すなわちタブ文字のみ) へのバックワードコンパチビリティを保っています。
.Pp
.Em selector
機能は、
.Em facility 
とピリオド
.Pq Dq \&.
とオプションの比較フラグ
.Pq Bq <=>
そして
.Em level 
で符号化され、間に空白は含みません。
.Em facility
と
.Em level
の双方とも、大文字小文字の区別はありません。
.Pp
.Em facility
はシステムが発するメッセージの一部を表し、次にあげるキーワード群の
1 つで表されます : auth, authpriv, cron, daemon, ftp, kern, lpr, mail,
mark, news, ntp, syslog, user, uucp と local0 から local7。
これらのキーワード (mark を除く) は
.Xr openlog 3
と
.Xr syslog 3
ライブラリルーチンで指定される
.Dq Dv LOG_
で始まる値と一致します。
.Em 比較フラグ
を使用して、何を記録するのかを正確に指定できます。
比較フラグのデフォルト組は
.Dq =>
(またはあなたが好むのなら
.Do >=
.Dc ) であり、
指定した
.Em facility
リストからの
.Em level
以上のレベルのメッセージを記録することを意味します。
.Pp
.Pp
.Em level
はメッセージの重要度を表し、以下のキーワードの順に高から低になります:
emerg, alert, crit, err, warning, notice, info, debug。
これらのキーワードは
.Xr syslog 3
ライブラリルーチンで指定される
.Dq Dv LOG_
で始まる値と一致します。
.Pp
それぞれの行ブロックはタグによって前のブロックと区別されます。
タグは行の先頭が
.Em #!prog
または
.Em !prog
(前者は以前の syslogd との互換性のためのものです。
例えば syslog.conf ファイルを共有したい時などに便利です)
で始まり、それぞれのブロックは syslog を呼び出す特定のプログラムと
関連付けられています。
また、タグ ``foo'' は、
``foo: '' というプレフィックスを持つ
カーネルログメッセージにもマッチします。
.Pp
.Em facility
と
.Em level
の両方のキーワードとその意味のより詳細な説明を知りたい場合は
.Xr syslog 3
を見てください。
選択は
.Em facility
で行なう方が
.Em program
で行なうよりも好まれています。
なぜなら、後者はネットワーク環境の中では
簡単に変化してしまう場合があるからです。しかし、適切な
.Em facility
が本当に存在しない場合もあります。
.Pp
もし
.Em facility
指定に一致したメッセージを受けとり、なおかつそれが
指定した
.Em level
.Em (もしくはそれ以上の level)
だった場合、またはメッセージ中の日付の後ろの最初の単語が
.Em program
と一致した場合、
.Em action
フィールドで指定された動作が選択されます。
.Pp
複数の
.Em selector
を、セミコロン
.Pq Dq \&;
によって区切ることにより、1 つの
.Em action
に対して指定することができます。
しかしそれぞれの
.Em selector
はその前にある指定を上書き修正できてしまいますので注意してください。
.Pp
複数の
.Em facility
は、コンマ
.Pq Dq \&,
によって区切ることにより 1 つの
.Em level
を指定することができます。
.Pp
アスタリスク
.Pq Dq *
は、全ての
.Em facility
、全ての
.Em levels
、または全ての
.Em programs
を指定するのに使用できます。
.Pp
特別な
.Em facility
である
.Dq mark
は、20分毎に
.Dq info
の優先度を持つメッセージを受け取ります
(
.Xr syslogd 8
を参照 )。これは
アスタリスクを含む
.Em facility
フィールドには適用されません。
.Pp
特別な
.Em level
である
.Dq none
は、特定の
.Em facility
を無効にします。
.Pp
それぞれの行の
.Em action
フィールドは、
.Em selector
フィールドに指定されたメッセージを受け取った際の動作を指定します。
動作指定には次の 5つの形式があります:
.Bl -bullet
.It
パス名 (先頭がスラッシュで始まります)。
該当するメッセージは、そのファイルに追加されます。
.It
ホスト名 (
.Dq @
文字から始まる必要があります)。
該当するメッセージは、指定されたホストの
.Xr syslogd
プログラムに転送されます。
.It
コンマで区切られたユーザのリスト。
該当するメッセージは、指定されたユーザがログインしていれば、
そのユーザの画面に出力されます。
.It
1 つのアスタリスク。
該当するメッセージは、ログイン中の全てのユーザの画面に出力されます。
.It
垂直バー
.Pq Dq \&|
とそれに続くコマンド。該当したメッセージをパイプを使って
コマンドに渡すことができます。
このコマンドは、
.Pa /bin/sh
によって評価されるので、通常のシェルメタキャラクタや入力/出力
リダイレクトを利用できます。
(しかし実行されたコマンドからの
.Xr stdio 3
バッファされた出力のリダイレクトは余計な遅延を引き起こしたり、
あるいはシグナルによってロギング中のサブプロセスが終了した場合など
出力データを失うことがあるかもしれないことに注意してください)
コマンドそれ自身は
.Em stdout
と
.Em stderr
を
.Pa /dev/null 
にリダイレクトして動作します。
.Dv SIGHUP 
を受け取ると、
.Nm
はそのプロセスとのパイプを閉じます。もしそのプロセスが自発的に終了しない
場合は、60秒の猶予期間の後
.Dv SIGTERM
を送ります。
.Pp
コマンドはパイプ経由で送るべきデータが到着した際に 1 度だけ起動されます。
その後、コマンドが終了した場合には必要に応じて再起動されます。
そのため、1 行の入力だけをサブプロセスに引き渡すことが望ましいのならば、
(もし多くのメッセージが速く流れる場合には、
資源を大量に消費する可能性がありますが)
1 行の入力があった後に終了する事によって達成する事ができます。
必要ならば、この効果を得るためにラッパスクリプトを書くこともできます。
.Pp
そのコマンドが完全なパイプラインでない場合、コマンドを
.Em exec
で起動すると、起動したシェルプロセスがコマンドの完了を待たなくなるので
便利かもしれません。
警告: このプロセスは
.Xr syslogd 8 
の UID のもとで動きます。通常はスーパユーザです。
.El
.Pp
空行、および、最初の空白でない文字がハッシュ
.Pq Dq #
文字である行は無視されます。
.Sh 使用例
.Pp
設定ファイルは次のようになります:
.Bd -literal
# err レベル以上の全てのメッセージ、全てのレベルの kernel メッセージ、
# notice レベルの auth メッセージをコンソールに出力します。
# プライベートな認証メッセージは記録をとりません!
*.err;kern.*;auth.notice;authpriv.none	/dev/console

# info 以上のレベルを持つ (mail を除く) 全てのメッセージを記録します。
# プライベートな認証メッセージは記録をとりません!
*.info;mail.none;authpriv.none		/var/log/messages

# debug レベルのみの daemon メッセージを記録します
daemon.=debug						/var/log/daemon.debug

# authpriv ファイルはアクセス制限を持ちます。
.\" /var/log/secure の read permission を限定するということ？
.\" 2.2.6-RELEASE 対象
.\" By yohta@bres.tsukuba.ac.jp (July 8 1998)
authpriv.*						/var/log/secure

# 全てのレベルの mail メッセージを一箇所にまとめて記録します。
mail.*							/var/log/maillog

# emerg (非常事態) レベルの全てのメッセージは全員が受け取ります。
*.emerg							*
*.emerg							@arpa.berkeley.edu

# alert レベル以上のメッセージを root と eric の画面に表示されます。
.\" 原文は Root and Eric get alert and higher messages を意訳
.\" 2.2.6-RELEASE 対象
.\" By yohta@bres.tsukuba.ac.jp (July 10 1998)
*.alert                                                 root,eric

# err レベル以上の mail と news の エラーを特別なファイルに保存します。
mail;news.err						/var/log/spoolerr
.\" 原文は uucp,news.crit / send-pr 予定
.\" 2.2.6-RELEASE 対象
.\" By yohta@bres.tsukuba.ac.jp (July 10 1998)

# 全てのレベルの認証メッセージをフィルタにパイプします。
auth.*					|exec /usr/local/sbin/authfilter

# ftpd のトランザクションを mail と news にあわせて保存します。
!ftpd
*.*							/var/log/spoolerr

# カーネルのファイヤウォールレポートを別のファイルに保存します。
!ipfw
*.*							/var/log/ipfw
.Ed
.Sh 関連ファイル
.Bl -tag -width /etc/syslog.conf -compact
.It Pa /etc/syslog.conf
.Xr syslogd 8
設定ファイル
.El
.Sh バグ
複数のセレクタ指定は、時々思ったように効果を発揮しない事があります。
例えば、
.Dq mail.crit,*.err
と設定すると、
.Dq mail
ファシリティのメッセージのレベルは
.Dq err
かそれ以上となり、
.Dq crit
かそれ以上のレベルにはなりません。
.Pp
ネットワーク環境においては、全てのオペレーティングシステムが
同じ facility 名のセットを実装しているわけではない点に注意してください。
authpriv, cron, ftp, ntp といったこの実装において知られた facility が、
目的のシステムには存在しないかもしれません。更に悪い事に、
DEC UNIX は AdvFS ファイルシステムのログイベントに facility 番号 10
(この実装では authpriv に該当します) を使っています。
.Sh 関連項目
.Xr syslog 3 ,
.Xr syslogd 8
