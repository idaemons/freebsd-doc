.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)types.5	8.1 (Berkeley) 6/5/93
.\" %FreeBSD: src/share/man/man5/types.5,v 1.10 2000/01/05 17:40:25 bde Exp %
.\" $FreeBSD$
.\"
.Dd June 5, 1993
.Dt TYPES 5
.Os BSD 4
.Sh 名称
.Nm types
.Nd システムのデータ型
.Sh 書式
.Fd #include <sys/types.h>
.Sh 解説
ファイル
.Pa sys/types.h
はカーネル内部で (ほとんどの物はシステム全体を通じて) 用いられる、
定義済みのデータ型を含みます。
.Bd -literal
#ifndef _SYS_TYPES_H_
#define	_SYS_TYPES_H_

/* 機種に依存するパラメータ。 */
#include <sys/inttypes.h> /* <machine/ansi.h> をインクルードします */
#include <machine/types.h>

#ifndef _POSIX_SOURCE
typedef	unsigned char	u_char;
typedef	unsigned short	u_short;
typedef	unsigned int	u_int;
typedef	unsigned long	u_long;
typedef	unsigned short	ushort;		/* Sys V との互換性 */
typedef	unsigned int	uint;		/* Sys V との互換性 */
#endif

typedef __uint8_t	u_int8_t;
typedef __uint16_t	u_int16_t;
typedef __uint32_t	u_int32_t;
typedef __uint64_t	u_int64_t;

typedef	u_int64_t	u_quad_t;	/* 4 倍長語 */
typedef	int64_t		quad_t;
typedef	quad_t *	qaddr_t;

typedef	char *		caddr_t;	/* コアアドレス */
typedef	__const char *	c_caddr_t;	/* コアアドレスの const へのポインタ */
typedef	__volatile char *v_caddr_t;	/* コアアドレスの volatile へのポインタ */
typedef	int32_t		daddr_t;	/* ディスクアドレス */
typedef	u_int32_t	u_daddr_t;	/* 符号無しのディスク番号 */
typedef	u_int32_t	fixpt_t;	/* 固定小数点数 */
typedef u_int32_t	fixpt_t;	/* 固定小数点数 */
typedef	u_int32_t	gid_t;		/* グループ ID */
typedef	u_int32_t	ino_t;		/* i ノード番号 */
typedef	long		key_t;		/* IPC キー (Sys V プロセス間通信用) */
typedef	u_int16_t	mode_t;		/* パーミッション */
typedef	u_int16_t	nlink_t;	/* リンクカウント */
typedef	_BSD_OFF_T_	off_t;		/* ファイルオフセット */
typedef	_BSD_PID_T_	pid_t;		/* プロセス ID */
typedef	quad_t		rlim_t;		/* リソースリミット */
#ifdef __alpha__		/* XXX should be in <machine/types.h> */
typedef	int64_t		segsz_t;	/* セグメントサイズ */
#else
typedef	int32_t		segsz_t;	/* セグメントサイズ */
#endif
typedef	int32_t		swblk_t;	/* スワップオフセット */
typedef	int32_t		ufs_daddr_t;
typedef	u_int32_t	uid_t;		/* ユーザ id */

#ifdef _KERNEL
typedef	int		boolean_t;
typedef	u_int64_t	uoff_t;
typedef	struct vm_page	*vm_page_t;
#endif

#ifdef _KERNEL

struct specinfo;

typedef	u_int32_t	udev_t;		/* デバイス番号 */
typedef struct specinfo	*dev_t;

#else /* !_KERNEL */

typedef	u_int32_t	dev_t;		/* デバイス番号 */
#define udev_t dev_t

#ifndef _POSIX_SOURCE

/*
 * minor() はインデックスの代わりにクッキーを与えます。この理由は、
 * ビット0-15 の意味の変更を避けるためと、ビット 16-31 をシフトする
 * ことに起因してこれを使わないデバイスにとっては時間と空間の無駄遣い
 * になることを避けるためです。
 */
.\" 「昔は dev_t は 16 ビットで、
.\" 16 bit の上位 8 bit が major で下位 8 bit が minor だった」
.\" ということを暗に言っている？
.\" だとすると原文は以上のような前提知識を要求しており、読解難だと思う
.\" horikawa@jp.FreeBSD.org 2000/02/19
#define major(x)        ((int)(((u_int)(x) >> 8)&0xff)) /* メジャー番号 */
#define minor(x)        ((int)((x)&0xffff00ff))         /* マイナ番号 */
#define makedev(x,y)    ((dev_t)(((x) << 8) | (y)))     /* dev_t を生成する */

#endif /* _POSIX_SOURCE */

#endif /* !_KERNEL */

#include <machine/endian.h>

#ifdef	_BSD_CLOCK_T_
typedef	_BSD_CLOCK_T_	clock_t;
#undef	_BSD_CLOCK_T_
#endif

#ifdef	_BSD_CLOCKID_T_
typedef	_BSD_CLOCKID_T_	clockid_t;
#undef	_BSD_CLOCKID_T_
#endif

#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
#endif

#ifdef	_BSD_SSIZE_T_
typedef	_BSD_SSIZE_T_	ssize_t;
#undef	_BSD_SSIZE_T_
#endif

#ifdef	_BSD_TIME_T_
typedef	_BSD_TIME_T_	time_t;
#undef	_BSD_TIME_T_
#endif

#ifdef	_BSD_TIMER_T_
typedef	_BSD_TIMER_T_	timer_t;
#undef	_BSD_TIMER_T_
#endif

#ifndef _POSIX_SOURCE
#define	NBBY	8		/* 1 バイトに含まれるビット数 */

/*
 * select は long 型のファイル記述子ビットマスクを用います。これらの
 * マクロはこの型のビットフィールドを操作します (ファイルシステムの
 * マクロは char 型を用います)。
 * FD_SETSIZE はユーザによって定義することもできますが、ほとんどの
 * ユーザにとっては、ここに示すデフォルトで十分でしょう。
 */
#ifndef	FD_SETSIZE
#define	FD_SETSIZE	1024
#endif

typedef	long	fd_mask;
#define	NFDBITS	(sizeof(fd_mask) * NBBY)	/* マスクごとのビット */

#ifndef howmany
#define	howmany(x, y)	(((x) + ((y) - 1)) / (y))
#endif

typedef	struct fd_set {
	fd_mask	fds_bits[howmany(FD_SETSIZE, NFDBITS)];
} fd_set;

#define	FD_SET(n, p)	((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
#define	FD_CLR(n, p)	((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define	FD_ISSET(n, p)	((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
#define	FD_COPY(f, t)	bcopy(f, t, sizeof(*(f)))
#define	FD_ZERO(p)	bzero(p, sizeof(*(p)))

/*
 * これらの宣言は別のところに属しますが、ここと <stdio.h> で繰り返して
 * います。壊れたプログラムが 64 ビットの off_t で動作するようにする
 * 機会を増すためです。
 */
#ifndef _KERNEL
__BEGIN_DECLS
#ifndef _FTRUNCATE_DECLARED
#define	_FTRUNCATE_DECLARED
int	 ftruncate __P((int, off_t));
#endif
#ifndef _LSEEK_DECLARED
#define	_LSEEK_DECLARED
off_t	 lseek __P((int, off_t, int));
#endif
#ifndef _MMAP_DECLARED
#define	_MMAP_DECLARED
void *	 mmap __P((void *, size_t, int, int, int, off_t));
#endif
#ifndef _TRUNCATE_DECLARED
#define	_TRUNCATE_DECLARED
int	 truncate __P((const char *, off_t));
#endif
__END_DECLS
#endif /* !_KERNEL */

#endif /* !_POSIX_SOURCE */

#endif /* !_SYS_TYPES_H_ */
.Ed
.Sh 関連項目
.Xr gdb 1 ,
.Xr lseek 2 ,
.Xr time 3 ,
.Xr fs 5
.Sh 歴史
.Nm
ファイルは
.At v7
から登場しました。
