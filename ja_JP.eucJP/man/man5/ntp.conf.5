.\"
.\" %FreeBSD: src/usr.sbin/ntp/doc/ntp.conf.5,v 1.2.2.2 2001/03/06 14:21:28 ru Exp %
.\"
.Dd January 13, 2000
.\" jpman %Id: ntp.conf.5,v 1.4 2000/06/02 11:02:36 takamune Stab %
.\" WORD: dotted-quad form	ドットで 4 つの部分に区切られた形式
.\" WORD: association		アソシエーション[NTP]
.\" WORD: key identifier	鍵の識別子
.\" WORD: key cache		鍵のキャッシュ
.\" WORD: key file		鍵ファイル
.\" WORD: reference clock	参照クロック
.\" WORD: time server		タイムサーバ
.\" WORD: symmetric active	対称的アクティブ
.\" WORD: manycast		メニーキャスト
.Dt NTP.CONF 5
.Os
.Sh 名称
.Nm ntp.conf
.Nd ネットワークタイムプロトコル (NTP) デーモンの設定ファイル
.Sh 書式
.Nm /etc/ntp.conf
.Sh 説明
.Nm
設定ファイルは、
.Xr ntpd 8
デーモンが初期始動時に、同期用のソースやモード、そしてその他の関連情報を
指定するために読み込みます。通常は、設定ファイルは
.Pa /etc
ディレクトリにインストールされますが、どのディレクトリにもインストール
可能です
(デーモンの
.Fl c
コマンドラインオプションを参照)。
.Pp
ファイルのフォーマットは、その他の Unix 設定ファイルと似ています。
コメントは
.Qq #
という文字からはじまり、行末まで続きます。
また、空行は無視されます。
設定コマンドは、最初にキーワードがあり、
その後に引数のリストが続きます。引数にはオプションのものもあるでしょう。
そして、各引数は空白で区切られています。
コマンドは、複数の行にまたがることはできません。
引数には、ホスト名、ドットで 4 つの部分に区切られた形式の数値で書かれた
ホストアドレス、整数、浮動小数点で表現された数値 (秒で時間を指定した場合)
そしてテキスト文字列をとることができます。
.Pp
このマニュアルページの残りでは、設定と制御オプションについて述べます。
.Qo
NTP の設定と NTP サブネットの設定に関する注意
.Qc
のページ (
.Pa /usr/share/doc/ntp
にある
HTML 文書の一部として入手可能です)
では、これらオプションをより深く議論しています。
一般的な
.Sx 設定オプション
の議論に加えて、
サポートされている機能と、その機能を制御するためのオプションについて述べた、
次のようなセクションがあります:
.Bl -bullet -offset indent
.It
.Sx 認証機能のサポート
.It
.Sx モニタ機能のサポート
.It
.Sx アクセス制御機能のサポート
.It
.Sx 参照クロック機能のサポート
.El
.Pp
これらのセクションの後に
.Sx その他のオプション
について述べたセクションもあります。
利用可能なオプションセットは豊富にありますが、
必要なオプションは、1 つ以上の
.Ic server ,
.Ic peer ,
.Ic broadcast ,
.Ic manycastclient
コマンドだけです。
.Ss 設定オプション
次に述べるのは、NTPv4 の設定コマンドについてです。
これらのコマンドは、基本的な機能は NTPv3 と同じですが、
場合によっては、新たな機能やオペランドを持ったものがあります。
コマンドのキーワードおよび必要とされる IP アドレスの種類によって、
さまざまなモードが決定されます。
アドレスは次のような種類にクラス分けされます。
(s) リモートサーバあるいは通信相手 (IP クラス A, B, C のいずれか)、
(b) ローカルインタフェースのブロードキャストアドレス、
(m) マルチキャストアドレス (IP クラス D)、
あるいは、 (r) 参照時間アドレス (127.127.x.x) です。
注意すべきこととして、
autokey および burst モードがこれらのコマンドにはサポートされていますが、
不可思議なモードと組み合わせると、その効果が意味のないものとなったり、または、
破壊的なものになってしまったりすることがあります。
.Bl -tag -width indent
.It Xo Ic peer
.Ar address
.Op autokey | key Ar key
.Op burst
.Op version Ar version
.Op prefer
.Op minpoll Ar minpoll
.Op maxpoll Ar maxpoll
.Xc
.It Xo Ic server
.Ar address
.Op autokey | key Ar key
.Op burst
.Op version Ar version
.Op prefer
.Op minpoll Ar minpoll
.Op maxpoll Ar maxpoll
.Xc
.It Xo Ic broadcast
.Ar address
.Op autokey | key Ar key
.Op burst
.Op version Ar version
.Op minpoll Ar minpoll
.Op maxpoll Ar maxpoll
.Op ttl Ar ttl
.Xc
.It Xo Ic manycastclient
.Ar address
.Op autokey | key Ar key
.Op burst
.Op version Ar version
.Op minpoll Ar minpoll
.Op maxpoll Ar maxpoll
.Op ttl Ar ttl
.Xc
これら 4 つのコマンドは、使用するタイムサーバの名前またはアドレスと、
操作を行うモードを指定するものです。
アドレスは、DNS 名でも
ドットで 4 つの部分に区切られた形式の IP アドレスでも良いです。
アソシエーションの振る舞いに関するさらなる情報は、
.Qo
アソシエーション管理
.Qc
のページにあります。
.Bl -tag -width indent
.It Ic peer
s タイプのアドレス専用です。
このコマンドは、現在の peer コマンドのように操作します。
このコマンドは、他に追加のモードが利用できる場合を除いて、
永続的に対称的アクティブ (symmetric-active) モードの
アソシエーションを導入します。
このコマンドは、タイプ b, m あるいは r のアドレスに対して
使用すべきでは
.Em ありません。
.Pp
.Ic peer
コマンドは、ローカルサーバが、リモートサーバと対称的アクティブ
(symmetric active) モードで動作するよう指示します。このモードでは、
ローカルサーバをリモートサーバに同期させるのと同時に、リモートサーバ
をローカルサーバに同期させることができます。これは、サーバの
ネットワークにおいて、さまざまな悪い状況により、
ローカルサーバとリモートサーバのどちらかがより良い時刻供給源と
なり得るような場合に役立ちます。
.It Ic server
タイプ s および r のアドレス用です。
このコマンドは、NTPv3 サーバのコマンドと同様に操作します。
このコマンドは、永続的にクライアントモードの
アソシエーションを導入します。
server コマンドは、ローカルサーバが、
指定したリモートサーバに対してクライアントモードで
動作するよう指示します。
このモードでは、ローカルサーバはリモートサーバに同期しますが、
リモートサーバがローカルサーバに同期することは決してありません。
.It Ic broadcast
タイプ b および m のアドレス専用です。
このコマンドは、現在の NTPv3 broadcast コマンドと同様に操作します。
このコマンドは、他に追加のモードが利用できる場合を除いて、
永続的にブロードキャストモードのアソシエーションを導入します。
複数のローカルブロードキャストインタフェース (サブネット)
および / あるいは、複数のマルチキャストグループを指定するため、
複数のコマンドを使用できます。
ローカルのブロードキャストメッセージは、指定されたサブネットに
関連づけられたインタフェースだけに到達するということに注意して
ください。ただし、マルチキャストメッセージは全てのインタフェースに
到達します。
現在の実装では、これらのメッセージ用に使用するソースアドレスは
Unix のホストのデフォルトアドレスです。
.Pp
ブロードキャストモードでは、ローカルサーバは、指定したアドレスに
待機しているクライアント群に対して定期的にブロードキャストメッセージを
送信します。このときのアドレスは、通常ローカルネットワーク
(の 1 つ) のブロードキャストアドレス、もしくは NTP に割り当てられた
マルチキャストアドレスです。
IANA は、NTP 専用のマルチキャストグループのアドレス 224.0.1.1 を
割り当てています。しかし、競合しないアドレスであれば、管理境界内の
メッセージを収容するために使用できます。
もともと、この仕様は、ローカルサーバが送信側として動作する時のみ
適用されるものです。ブロードキャストクライアントとして動作させたい
場合は、後に説明する
.Ic broadcastclient
もしくは
.Ic multicastclient
コマンドの項を参照してください。
.It Ic manycastclient
タイプ m のアドレス専用です。このコマンドは、指定された
マルチキャストアドレスに対してメニーキャストのクライアントモードの
アソシエーションを導入します。この場合、特別なアドレスが
割り当てられていることが必要です。そのアドレスは、指定されたメニーキャスト
サーバ用の
.Ic manycastserver
コマンドで使用するアドレスと一致することが必要です。
IANA が割り当てた 224.0.1.1 というマルチキャストアドレスは、
使用すべきでは
.Em ありません。
ただし、これらのメッセージがインターネット上の広大な領域に
撒き散らされ、それによって送り手が膨大な量のリプライを集中してもらう恐れを
生じさせてしまわないように、何か特別な手段を講じている場合は別です。
.Pp
.Ic manycastclient
コマンドは、ブロードキャスト / マルチキャストメッセージを送った結果
発見されたリモートサーバと共に、ローカルサーバがクライアントモードで
動作することを指定します。クライアントは、指定したアドレスに
関連づけられたグループアドレスへ、要求メッセージを送ります。
そして、明示的に有効化されたサーバが要求メッセージに応答します。
クライアントは、最も正確な時間を提供するサーバを選択し、
.Ic server
コマンドを使用した場合と同様に動作を継続します。
残ったサーバは、まるで応答が聞こえていないかのように切り捨てられます。
.El
.Pp
このコマンドに対して利用できるオプションには、次のようなものがあります:
.Bl -tag -width indent
.It autokey
アドレスに送られたパケットは全て autokey 方式を使用して暗号化された
認証フィールドを含むようになります。
.It burst
ポーリング間隔ごとに、通常のパケットの代わりに 8 パケット分の
スペースの空いたバーストを送ります。
.It key Ar key
アドレスに送られたパケットは全て、指定された鍵の識別子を使用して
暗号化された認証フィールドを含むようになります。鍵の識別子は、
符号無しの 32 ビット整数であり、65536 よりも小さい値です。
デフォルトでは、認証フィールドは含まれません。
.It version Ar version
送信される NTP パケットに対して使用されるバージョン番号を指定します。
1-4 までのバージョンが選択でき、バージョン 4 がデフォルトです。
.It prefer
サーバに望ましいものとしての印をつけます。その他のことで差が無ければ、
この印のついたサーバは、正しく動作しているホストの中から同期用に
選択されます。
さらなる情報が必要なら、
.Qo
緩和のルールと prefer キーワード
.Qc
のページを参照してください。
.It ttl Ar ttl
このオプションはブロードキャストモードでのみ使用します。
このオプションは、マルチキャストパケットで使用する
生存時間 (TTL) を指定します。
デフォルトの値は 127 ですが、適切な値を選択するのはちょっとした
黒魔術のようなものですので、システム管理者との間の調整が必要です。
.It minpoll Ar minpoll
.It maxpoll Ar maxpoll
これらのオプションは、NTP メッセージ用の最小および最大
ポーリング間隔を指定します。2 のべき乗で表された秒単位です。
デフォルトの範囲は、6 (64 秒) から 10 (1,024 秒) です。
許されている値の範囲は、4 (16 秒) から 17 (36.4 時間) まで
で、両端を含みます。
.El
.It Ic broadcastclient
このコマンドは、ローカルサーバに対し、任意のローカルインタフェース上で
受け取ったブロードキャストメッセージを待ち受けたり、応答したりするように
指示します。ローカルサーバは、最初のブロードキャストメッセージを
受け取る際に、リモートサーバとクライアント / サーバ間の短いやりとり
を用いて、名目上の (nominal) ネットワーク遅延を測定してから、後続の
ブロードキャストメッセージを待ち受けて、それに同期する
ブロードキャストクライアントモードに入ります
このモードで、後から続いてくるブロードキャストメッセージを待ち受け、
同期します。このモードで偶然に、あるいは故意に分裂した状態となるのを
防ぐため、ローカルサーバもリモートサーバも認証機能と、同一の信頼
できている鍵および鍵の識別子を使用して動作しなくてはならないことに
注意してください。
.It Xo Ic multicastclient
.Op Ar address
.Op ...
.Xc
このコマンドは、ローカルサーバに対して、グローバルネットワークの
グループアドレス上のマルチキャストメッセージを待ち受けるように
指示します。デフォルトのアドレスは、Numbers Czar (訳注: 番号管理者 = IANA)
が NTP に対して
割り当てたもの (224.0.1.1) です。
このコマンドは、
.Ic broadcastclient
コマンドと同じように用いられますが、IP マルチキャストを使用して動作
します。この機能をサポートするには、マルチキャストカーネルが必要です。
.It Ic driftfile Ar driftfile
このコマンドは、ローカルの時計発振子の周波数オフセットを記録するため
のファイル名を指定します。このファイルが存在すると、起動時に初期周波数
オフセットを指定するのに使用され、その後 1 時間に 1 度
その時点での周波数オフセットがデーモンにより計算されて更新されます。
ファイルが存在しないか、このコマンドが与えられていない場合、
初期周波数オフセットは 0 と仮定されます。この場合、周波数が安定し、
残った時間誤差が収まるのに数時間かかります。
.Pp
ファイルのフォーマットは、1 行に 1 つの浮動小数点数が含まれるものです。
この浮動小数点数は、100 万分の 1 (ppm) 単位での周波数オフセット値を
記録しています。最初に現在の変動値を一時ファイルに書き込み、それから
ファイルの名前を変更して古いファイルと置換えることでこのファイルは更新
されます。このことは、
.Xr ntpd 8
が、ドリフトファイルのあるディレクトリに対し書き込み権を持っている
必要があることと、シンボリックであろうとなかろうと、
ファイルシステムリンクは避けるべきことを意味しています。
.It Xo Ic manycastserver
.Ar address
.Op ...
.Xc
このコマンドは、ローカルサーバに対して、すべてのローカルインタフェース上で
ブロードキャストメッセージを待ち受け、これに応答するように指示します。
そしてさらに、サーバが指定されたマルチキャストグループアドレス
(タイプ m) に対するクライアントモードのメッセージに応答できるようにします。
少なくとも 1 つのアドレスは必要ですが、IANA が割り当てたマルチキャスト
アドレス 224.0.1.1 は使用すべきでは
.Em ありません。
ただし、応答を受ける範囲を制限し、もともとの送り手に膨大な応答が
集中するのを防ぐための特別な手段を講じているのであれば別です。
.It Xo Ic revoke
.Op Ar logsec
.Xc
autokey 機能とともに使用するプライベート値の再計算の間隔を指定します。
この値には、もともと計算量の多い公開鍵の計算が必要です。
デフォルトの値は 12 です (65,536 秒、つまり、約 18 時間です)。
指定された間隔以上のポーリング間隔に対して、
メッセージを送るごとに新しいプライベート値が再計算されます。
.It Xo Ic autokey
.Op Ar logsec
.Xc
autokey 機能のセッション鍵のリストを再生成する間隔を指定します。
各アソシエーション用の鍵のリストのサイズは、この間隔と現在の
ポーリング間隔に依るということに注意してください。
デフォルト値は 12 です (4096 秒、つまり、約 1.1 時間です)。
指定された間隔以上のポーリング間隔に対しては、
単一のエントリを持ったセッション鍵のリストは、メッセージを
送るごとに再生成されます。
.It Xo Ic enable
.Op Ar flag
.Op ...
.Xc
.It Xo Ic disable
.Op Ar flag
.Op ...
.Xc
さまざまなサーバオプションを有効にしたり無効にしたりする
手段を提供します。指定されていないフラグには影響がありません。
これらのフラグは全て
.Xr ntpdc 8
ユーティリティプログラムを使用してリモートに制御できるという
ことに注意してください。
フラグの説明は次の通りです。
.Bl -tag -width indent
.It auth
未設定の通信相手 (peer) が、信頼できる鍵と鍵の識別子を
使用して正しく認証されている場合に限って、その通信相手と
同期をとることができるようになります。デフォルトでは、この
フラグは有効です。
.It bclient
有効の場合、broadcastclient コマンドと同一の効果があります。
デフォルトでは、このフラグは無効です。
.It kernel
.Xr ntp_adjtime 2
システムコールに対し、正確に計時できる
カーネルサポートが実装されていれば、これを有効にします。
もともと、NTP デーモンが
コンパイルされるときに、このルーチンがサポートされるかどうかは
自動的に検出されるので、ユーザがこのフラグのことを気にする
必要はありません。このフラグは本来、カーネルの開発中に
このサポートを無効にできるようにするために提供されていました。
.It monitor
モニタ用機能を有効にします。さらなる情報が必要なら、
.Xr ntpdc 8
プログラムの
.Ic monlist
コマンドの項を参照してください。
デフォルトでは、このフラグは有効です。
.It ntp
サーバが、NTP を用いてローカルの時刻を調整できるようにします。
無効になっている場合は、
ローカルの時刻は、内部で持っている時刻と周波数オフセットで
自由に動きます。
ローカルの時刻は別のデバイスやプロトコルで制御され、
他のクライアント用に同期を提供するためだけに NTP を使う場合、
このフラグは有用です。この場合、ローカル時刻のドライバをこの機能や、
さらに、エラー予測やうるう秒のインジケータ (leap-indicators) を提供する
ために使用できます。さらなる情報が必要なら、
.Qo
参照時間ドライバ
.Qc
のページを参照してください。
デフォルトでは、このフラグは有効です。
.It stats
統計機能を有効にします。さらなる情報が必要なら、
.Sx モニタ用オプション
のセクションを参照してください。
デフォルトでは、このフラグは有効です。
.El
.El
.Ss 認証機能のサポート
認証機能のサポートによって、NTP クライアントは、サーバが
本当に既知で信頼できるものであり、偶然であれ意図的であれ、
サーバのふりをしてクライアントをだまそうとする侵入者ではないことを
確認できます。
NTPv3 仕様 RFC 1305 は、受け取った NTP パケットを
暗号により認証するための方式を定義しています。
もともと、この機能は、Cipher Block Chaining (CBC) モードで機能する
Data Encryption Standard (DES) を使用して (一般的に、DES-CBC と
呼ばれる方式です) 実現されていました。
後に、秘密鍵を使用した RSA Message Digest 5 (MD5) を用いて (一般的に、
keyed-MD5 と呼ばれています) 改良がなされました。
どちらのアルゴリズムもメッセージダイジェスト、つまり、片方向ハッシュ
を計算します。これは、サーバが正しい秘密鍵と鍵の識別子を持っているか
否かを検証するのに使用できます。
NTPv4 では、この方式は残っており、さらに、逆方向ハッシュと
公開鍵暗号化方式に基づいた、新しい autokey 方式を提供しています。
認証機能は、
.Sx 設定オプション
のセクションで説明されている
.Ic peer Ns ,
.Ic server Ns ,
.Ic broadcast
および
.Ic manycastclient
コマンドでの key および autokey サブコマンドを使用して、
各アソシエーションに対して別々に設定できます。
.Pp
認証オプションでは、1 組の鍵を指定し、設定された各アソシエーションに
対して鍵を選択し、次に述べるように設定操作を管理します。
これらの機能を制御する auth フラグは、
.Ic enable
および
.Ic disable
設定コマンドを使用して設定したり解除したりできます。また、他のマシンで
動作している
.Xr ntpdc 8
プログラムを使用して
リモートで設定コマンドを送ることでも可能です。
このフラグが設定されていれば、暗号によって認証されている場合に限って、
永続的な接続相手とのアソシエーションおよびリモートでの
設定コマンドが効果を持つようになります。
このフラグが無効になっていれば、暗号によって認証されていなくても
これらの操作は効果を持ちます。
後者のモードで操作を行うと、悪者ハッカー (訳注: クラッカー)
がクライアントの動作を
深刻に混乱させ得るという、重大な脆さを招く
ことは理解しておいてください。
.Pp
auth フラグは、以下に述べるような認証手続きの全てに影響を与えます。
しかし、暗号化サポート機能をこのディストリビューションに組み込まれ
ている場合には、異なった動作となります。このサポート機能が使用でき、
auth フラグが有効になっていれば、正しく認証できたときに限って
永続的なアソシエーションが導入され、またリモートでの設定コマンドが
効果を持つようになります。
このサポート機能が使用できなくて、auth フラグが有効になっていれば、
どのような状況でも永続的なアソシエーションが導入されることはなく、
リモートでの設定コマンドに応答することもありません。
auth フラグは、通常、暗号化機能がサポートされている場合はデフォルトで
設定され、サポートされていない場合はデフォルトで解除されています。
.Pp
上で述べた脆さを頭におくと、どのような場合でも auth フラグを
設定しておくのが望ましいです。ここでよく混乱する点としては、
設定ファイル中のサーバ名を IP アドレスにマップする名前解決のプロセスに
関する点です。偽物のネームサーバメッセージから守るために、
このプロセスは内部で生成された鍵を使用して認証を行っています。
この鍵は、通常、ユーザからは見えません。
しかし、暗号化機能のサポートが使用できなくて、auth フラグが有効になって
いる場合、この名前解決プロセスは失敗してしまうでしょう。
この問題の解決策は、ホスト名の代わりに IP アドレスを指定するか、または、
auth フラグを無効にしておき、名前解決のプロセスが完了してから auth
フラグを有効にすることのどちらかです。
.Pp
暗号による認証方式は、2 種類利用できます。これについて次に
説明します。
.Bl -tag -width indent
.It 秘密鍵方式
元の RFC 1305 での仕様では、65,536 個の鍵と、鍵ごとにある 32 ビットの
鍵の識別子のどれか 1 組でアソシエーションを認証できます。
ここで使われるサーバは、メッセージを認証するための鍵および鍵の識別子を
承認する必要があります。鍵およびそれに関連する情報は、鍵ファイル中で
指定されています。通常このファイルは、
.Xr ntp.keys 5
と呼ばれており、NTP プロトコル自体の範疇を超えて、安全な手続きを使用して
交換され、保存されます。本来の NTP アソシエーションに使用される鍵に
加えて、追加の鍵を
.Xr ntpq 8
および
.Xr ntpdc 8
ユーティリティプログラム用のパスワードとして使用できます。
.Pp
.Xr ntpd 8
が初めて起動すると、
ntpd は、鍵ファイルを読み込み、鍵のキャッシュに鍵を設置します。
一方、鍵は信頼されたコマンドで使用する前にアクティブになって
いることが必要です。
これにより、例えば、いくつかの鍵の束をインストールし、
.Xr ntpdc 8
を使用して鍵の束をリモートにアクティブにしたり、非アクティブに
したりできます。
また、鍵の安全性が損なわれてしまった場合に使用できる鍵の取消し機能を
提供します。
.Ic requestkey
コマンドは、
.Xr ntpdc 8
ユーティリティ用にパスワードとして使用される鍵を選択します。
それに対して、
.Ic controlkey
コマンドは、
.Xr ntpd 8
ユーティリティ用にパスワードとして使用される鍵を選択します。
.It autokey 方式
RFC 1305 で規定されているもともとの NTPv3 の認証方式は、
まだサポートされています。
NTPv4 では、
autokey と呼ばれる追加の認証方式が利用できます。
この認証機構は、セッション鍵のリストを作成し、エントリがあると
逆順に使用されるという点で S-KEY 方式ととてもよく似た動作をします。
この方式の、セキュリティに関する分かりやすい分析に沿った説明が、
IETF のウェブページ
.Li http://www.ietf.org/
から入手できる技術レポートに書かれています。
.Pp
autokey 方式は、特にマルチキャストモード用にデザインされたものです。
このモードでは、クライアントは通常、サーバにメッセージを送信しません。
このモードでは、サーバは、autokey 方式を使用して、秘密鍵の値で
繰り返しハッシュして鍵のリストを生成します。この鍵のリストを逆順に使用し、
送信された各メッセージに対して一意のセッション鍵を生成します。
クライアントは、セッション鍵を再生成し、直前のセッション鍵とハッシュが
合致するか否かを検証します。
各メッセージには、セッション鍵から秘密鍵の値を結びつける、公開値が
含まれています。しかし、公開値は、サーバが新しい鍵のリストを生成するか、
もしくはサーバのメッセージが 4 回よりも多く紛失してしまった場合に
だけ検証する必要があります。
.Pp
この方式は、クライアント / サーバおよび対称的通信モード
(symmetric-peer modes) での使用にも適しています。
これらのモードでは、
クライアントはマルチキャストモードと同様にセッション鍵を生成します。
サーバは、セッション鍵を再生成し、
この鍵を使用し、サーバ自身の公開値を使って、
応答メッセージを組み立てます。
クライアントは、
応答の鍵の識別子が要求と合致するか否かを検証し、そして公開値を
検証し、メッセージを正当なものとします。
対称的通信モードでは、各通信相手が独自に鍵のリストを生成し、
マルチキャストモードと同様に動作します。
.Pp
autokey 方式は、NTP パケットのヘッダフォーマットやヘッダに追加される
メッセージ認証コード (MAC) には何の変更も必要としません。しかし、autokey
が使用中の場合、ヘッダと MAC の間に拡張フィールドが挿入されます。
拡張フィールドにはランダムの公開値が含まれており、その値は、
revoke コマンドで
指定された間隔で更新されます。
この際、署名アルゴリズムで使用される関連の暗号の値も更新されます。
拡張フィールドのフォーマットはインターネットドラフトの
.Li draft-NTP-auth-coexist-00.txt
で定義されています。
MAC 自体は NTPv3 と同じ方法で作られますが、もともとの NTP ヘッダと
拡張フィールドを使用すると、64 ビット区切りでパディングされます。
新しい公開値は、それぞれホストの秘密鍵の値で暗号化されます。
まだ完成はしていませんが、公開値、暗号化された公開値、公開鍵、そして
証明がこの拡張フィールドの中に埋め込まれており、必要ならクライアントが
復号できるようにするというのが、このデザインの意図するところです。
しかし、比較的計算量の多い暗号化や復号化の操作は、公開値が
変更されたときのみ必要なものです。
.Pp
NTPv3 の認証方式も新しい NTPv4 autokey 方式も、それぞれについて設定された
アソシエーションに対して動作するということに注意してください。
そのため、同時に個別に操作するセッション鍵のリストがいくつかあることに
なるのかもしれません。
セッション鍵も含めて、鍵はすべて同じ鍵のキャッシュを占有してしまうので、
たまたま使われた鍵が、すでに生成されている別の鍵と衝突してしまう問題を
防ぐための準備がされました。
40 億種類程度の鍵の識別子が使用できるので、衝突する可能性は小さいです。
鍵の生成過程でもし衝突が起こってしまったら、
生成者はここで現在のセッション鍵のリストを止めます。
次にセッション鍵のリストが生成されるまでには、
衝突していた鍵は、使用期限が切れているか無効になっているかしている
ことでしょう。
.Pp
永続的な鍵は、手動で無効にしない限り使用期限が切れません。
ランダムなセッション鍵は、生成時に指定された時間だけ有効になります。
アソシエーション用の鍵のリストが生成される際には、それぞれの鍵の使用期限は、
使用する予定になった次の 1 回目のポーリングで無効になるように設定されます。
リスト中の鍵の最大使用期限は
.Ic autokey
コマンドによって指定されます。
使用期限を実行するのは、リスト中の次の鍵を使用する際に最後に使用した鍵を
無効にするという、通常の手続きのバックアップです。
.El
.Ss 認証オプション
次のような、認証用コマンドが使用できます:
.Bl -tag -width indent
.It Ic keys Ar keyfile
認証モードで動作しているときに
.Xr ntpd 8 ,
.Xr ntpq 8
および
.Xr ntpdc 8
で使用される暗号化鍵および鍵の識別子が入ったファイル名を指定します。
このファイルのフォーマットは
.Xr ntp.keys 5
マニュアルページで定義されています。
.It Xo Ic trustedkey
.Ar key
.Op ...
.Xc
同期をとるのに適した通信相手 (peer) を認証する目的で信頼する、
暗号化鍵の識別子を指定します。また
.Xr ntpq 8
および
.Xr ntpdc 8
プログラムで使用される鍵も指定します。
認証手続きには、ローカルとリモートのサーバとが認証を行うために
同じ鍵および鍵の識別子を共有していることが必要です。
異なったサーバ同士では、
異なった鍵を使用可能です。
.Ar trustedkey
引数は、65,536 よりも小さな値の 32 ビット符号なし整数です。
NTP の鍵で 0 のものは、不正な鍵および/あるいは鍵の識別子であることを
示すのに使用されることに注意してください。
そのため、0 のものは、他の用途に使用することはできません。
.It Ic requestkey Ar key
.Xr ntpdc 8
プログラムで使用する鍵の識別子を指定します。
このプログラムでは、
.Xr ntpd 8
の現在の実装に特有のプロトコルを使用します。
このプログラムは、
.Xr ntpd 8
の動作に影響を与えてしまう問題を診断・検証するのに有益です。
このコマンドの
.Ar key
引数は、以前に定義された、信頼された鍵に対する 32 ビットの鍵の識別子です。
設定ファイル中に
.Ic requestkey
コマンドが含まれていない場合、あるいは、鍵が合致しない場合は、
サーバ変数の変更要求は何であれ拒否されます。
.It Ic controlkey Ar key
.Xr ntpd 8
プログラムで使用する鍵の識別子を指定します。
このプログラムでは、RFC 1305 で定義された標準プロトコルを使用します。
このプログラムは、
.Xr ntpd 8
の動作に影響を与えてしまう問題を診断・検証するのに有益です。このコマンドの
.Ar key
引数は、鍵のキャッシュ中の信頼された鍵に対する 32 ビットの鍵の識別子です。
設定ファイル中に
.Ic controlkey
コマンドが含まれていないか、鍵が合致しない場合、
サーバ変数の変更要求は、何であれ拒否されます。
.El
.Ss モニタ機能のサポート
.Xr ntpd 8
には、サーバおよびクライアントの時間計測のパフォーマンスを長時間
連続して記録するのに適した、分かりやすいモニタ機能が含まれています。
現在サポートされている統計の種類のリストと実行例については、
後で述べる
.Ic statistics
コマンドを参照してください。
統計ファイルは、ファイル世代集合と、ソース配布物の中の
.Pa ./scripts
ディレクトリにあるスクリプトを使用して管理されています。
これらの物と、Unix の
.Xr cron 8
ジョブを使用して、
データが自動的にサマリ化され、時間を遡った分析を行うときのために
保存されます。
.Ss モニタ機能のオプション
モニタ機能用のコマンドには、次のようなものが使用できます:
.Bl -tag -width indent
.It Xo Ic statistics
.Ar name
.Op ...
.Xc
統計レコードの書き込みを有効にします。現在のところ、4 種類の
.Ar 名称
の統計がサポートされています。
.Bl -tag -width indent
.It loopstats
ループフィルタの統計情報の記録を有効にします。ローカル時計の更新を行う度に、
loopstats という名前のファイル世代集合に次の形式の行を出力します:
.Pp
.Dl 50935 75440.031 0.000006019 13.778190 0.000351733 0.013380 6
.Pp
最初の 2 つのフィールドは、日付 (ユリウス歴に修正済) と時刻 (UTC
午前 0 時からの秒数) です。次の 3 つのフィールドは、時計の更新時の、
秒単位の時間オフセット、 100 万分の 1 秒単位の周波数オフセット、
秒単位の RMS ジッタ、100 万分の 1 秒単位の Allan 偏差、
clock-discipline アルゴリズムの時定数です。
.It peerstats
通信相手に関する統計情報の記録を有効にします。
これには、存在しており設定されている NTP サーバの通信相手、および特別な
シグナルすべての統計レコードも含まれます。
有効な更新が行われる度に、peerstats という名前のファイル世代集合の
現在の要素に次の形式の行を出力します:
.Pp
.Dl 48773 10847.650 127.127.4.1 9714 -0.001605 0.00000 0.00142
.Pp
最初の 2 つのフィールドは、日付 (ユリウス暦に修正済)、時刻 (UTC で
午前 0 時からの秒数) です。次の 2 つのフィールドは、それぞれ
ドットで 4 つの部分に区切られた形式の記法で書かれた通信相手の
アドレスおよびステータスです。
ステータスフィールドは、RFC 1305 の NTP 仕様の追記 A で述べている
フォーマットを用いて、16 進数で符号化されています。
最後の 3 つのフィールドは、オフセット、遅延、RMS のジッタで、すべて秒単位です。
.It clockstats
時計ドライバの統計情報の記録を有効にします。時計ドライバからの更新を
受ける度に、clockstats という名前のファイル世代集合に、次の形式の行を追加
出力します:
.Pp
.Dl 49213 525.624 127.127.4.1 93 226 00:08:29.606 D
.Pp
最初の 2 つのフィールドは、日付 (ユリウス暦に修正済) および時刻
(UTC で午前 0 時からの秒数) です。
次のフィールドは、ドットで 4 つの部分に区切られた形式の記法で書かれた
時計のアドレスを示しています。最後のフィールドは、時計から受け取った
最後のタイムコードを意味のある ASCII フォーマットにデコードしたものです。
時計ドライバによっては、ほどほどの量の追加情報も集め、表示するものがあります。
さらなる情報については、各時計特有の情報を参照してください。
.It rawstats
そのままのタイムスタンプ (raw-timestamp) の統計情報を記録できるようにします。
これには、存在しており設定されている NTP サーバの通信相手、および特別な
シグナルすべての統計情報も含まれます。
通信相手または時計ドライバから受け取った NTP メッセージはそれぞれ、
rawstats という名前のファイル世代集合に次のような形式で 1 行付け足します:
.Pp
.Bd -ragged -offset indent
.Li 50928
.Li 2132.543
.Li 128.4.1.1
.Li 128.4.1.20
.Li 3102453281.584327000
.Li 3102453281.58622800031
.Li 02453332.540806000
.Li 3102453332.541458000
.Ed
.Pp
最初の 2 つのフィールドは、日付 (ユリウス暦に修正済) および時刻
(UTC で午前 0 時からの秒数) です。
次の 2 つのフィールドは、
通信相手あるいは時計のアドレスに、
ローカルアドレスを示しています。
これらはドットで 4 つの部分に区切られた記法で書かれています。
最後の 4 つのフィールドは、
NTP の開始、受け取り、送信、そして終了を順番に示したものです。
タイムスタンプの値は受け取ったままのものであり、さまざまなデータの
平滑化や緩和のアルゴリズムが処理する前のものです。
.El
.It Ic statsdir Ar directory_path
統計ファイルが作られるべきディレクトリのフルパスを指定します (下記参照)。
このキーワードにより、(そうでなければ定数である) filegen ファイル名の
プレフィックスを、ファイル世代集合に対して変更可能となります。
これは、統計ログを扱うのに便利です。
.It Xo Ic filegen
.Ar name
.Op file Ar filename
.Op type Ar typename
.Op link | nolink
.Op enable | disable
.Xc
ファイル世代集合の名称を設定します。ファイル世代集合は、
サーバの活動期間を通じて継続的に大きくなっていくファイルを扱う
手段を提供します。サーバの統計はこのようなファイルの典型例です。
ファイル世代集合により、実際のデータを格納するのに用いられる
ファイル集合にアクセスできます。どんな時点でも、ファイル集合の
高々 1 つの要素に対してだけ書き込みが行われます。
与えられた type は、ファイル集合の新しい要素に、データがいつ、
どのように出力されるのかを指定します。この方法で、
.Xr ntpd 8
の動作を妨げる危険を冒すことなく、
現在使用されていないファイル集合の要素に格納されている情報を、
管理操作用に使用できます。
最も重要なこととして、
これらの要素は、新たな出力データ用の空きを作るために
削除可能です。
.Pp
このコマンドは、リモートで動作している
.Xr ntpdc 8
プログラムから送信可能であることに注意してください。
.Bl -tag -width indent
.It name
これは、統計レコードのタイプです。
.Ic statistics
コマンドの項でも示されています。
.It file Ar filename
これは、統計レコード用のファイル名です。
集合のメンバのファイル名は、次の 3 つの結合された要素、
すなわちプレフィックス、ファイル名、そしてサフィックスからできています:
.Bl -tag -width indent
.It prefix
ファイル名のパスであり、定数です。
これは、
.Ic filegen
オプションを使っても変更されることはありません。
パスは、サーバが定義します。通常は、コンパイル時に
定数として指定します。
しかし、別のコマンドを使って、個々のファイル世代集合用に
設定可能でもあります。
例えば、loopstats および peerstats 生成時に使われるプレフィックスは、
前に説明した
.Ic statsdir
オプションを使用して設定可能です。
.Ar filename
この文字列は、そのまま先に述べたプレフィックスの後ろに結びつきます
(
.Qq /
(スラッシュ) が現れてはなりません)。
これは、
.Ic filegen
ステートメントに対して
.Ar filename
引数を使用することで変更できます。
この中身には、
.Qq ..
という要素を使用することはできません。それは、
プレフィックスで示されたファイルシステムの階層外を
filename が参照してしまうのを防ぐためです。
.Ic suffix
この部分は、ファイル集合の個々の要素を反映しています。
これは、ファイル集合の種類に依存して生成されます。
.El
.It type Ar typename
ファイル世代集合は、このタイプによって特徴づけされます。
次のような種類がサポートされています:
.Bl -tag -width indent
.It none
このファイル集合はごく普通のファイルです。
.It pid
.Xr ntpd 8
サーバが生成されるごとに、ファイル集合の要素が 1 つ
使用されます。
このタイプは動作中にファイル集合のメンバに何の変更も
施すことはありませんが、別の
.Xr ntpd 8
サーバの生成に属しているファイルを分けるのに簡単な方法を提供します。
ファイル集合のメンバのファイル名は、プレフィックスと
.Ar filename
文字列をつないだものに
.Qq \&.
(ドット) を付け加えたものに、
.Xr ntpd 8
サーバのプロセスのプロセス ID を 10 進数で表現したものを
付け加えたものです。
.It day
1 日ごとにファイル世代集合の要素が 1 つ生成されます。
1 日とは、UTC 時刻で 0:00 から 24:00 までの期間と定義されています。
ファイル集合メンバのサフィックスには、
.Qq \&.
(ドット) と日付を YYYYMMdd 形式で表したものが含まれています。
ここで、 YYYY は、4 桁で表した西暦年です (例えば、1992)。
MM は、2 桁の月です。
dd は、2 桁の日です。
つまり、1992 年 12 月 10 日に書かれた情報は全て、
.Pa <prefix><filename>.19921210
という名前のファイルに書かれることになります。
.It week
どの要素も 1 年の内のある週に関連するデータを含みます。ここで、
週という用語は、年の始まりからの日数の 7 の商により定義されます。
このようなファイル世代集合の要素は、ファイル集合の
.Ar filename
のベースに、次のようなサフィックスをつけることで区別されます:
ドット、4 桁の西暦年、文字 W, 2 桁の週番号です。
例えば、1992 年 1 月 10 日からの情報は、サフィックス .1992W1
を持つファイルに出力されます。
.It month
1 月に 1 つのファイル世代集合の要素が作成されます。ファイル名の
サフィックスは、ドット、4 桁の西暦年、2 桁の月からなります。
.It year
1 年に 1 つのファイル世代集合の要素が作成されます。ファイル名の
サフィックスは、ドットと 4 桁の西暦年からなります。
.It age
この型のファイル世代集合は、サーバが 24 時間活動するごとに新たな要素に
変わります。ファイル名のサフィックスは、ドット、文字 a, 8 桁の数から
なります。この数は、対応する 24 時間の始めからサーバが実行されている
秒数であるようになります。
情報は、ファイル世代集合が有効に設定されているときのみ、その集合に
書き込まれます。出力は、無効に指定することで抑制されます。
.It link | nolink
ファイル世代集合の現在の要素に、決まった名前でアクセスできると
便利です。この機能は、link を指定することで有効になり、
nolink を使用すると無効になります。
link が指定されると、現在のファイル集合の要素から、
サフィックスを持たないファイルへのハードリンクが作成されます。
すでにその名前を持つファイルが存在し、そのファイルへのリンク数が
1 であるとき、そのファイル名を、ドット、文字 C,
そして
.Xr ntpd
サーバプロセスのプロセス ID を後ろに付け加えたものに変更します。
ファイルへのリンク数が 1 よりも大きい場合は、
ファイルはアンリンクされます。これによって、現在のファイルは、
一定の名前でアクセスできます。
.It enable | disable
情報記録機能を有効または無効にします。
.El
.El
.El
.Ss アクセス制御機能のサポート
.Xr ntpd 8
は、一般的な用途のアドレスおよびマスクベースの制限リストを
実装しています。この制限リストは、アドレスおよびマスクで
ソートされており、マッチするか否かをみるのに、この順序で
探索が行われます。この結果、最後にマッチしたものが、入力パケットと
関連付けられた制限リストを定義します。
入力パケットの送り主のアドレスがマッチに使われます。32 ビットの
アドレスと、制限用のエントリに関連付けられたマスクとの AND を
とり、それからエントリのアドレスと比較をしてマッチが行われます
(エントリのアドレスもマスクと AND が取られています)。
さらなる情報や例については、
.Qo
NTP の設定と NTP サブネットの設定に関する注意
.Qc
のページにあります。
.Pp
アクセス制限機能は、オリジナルの NSFnet バックボーンの
タイムサーバについてのアクセスポリシと一致するように実装されました。
この機能は、望まないものや落ちてしまったリモートのタイムサーバが
自分のタイムサーバに影響を与えないようにするには有効かもしれませんが、
この機能が、標準の NTP 認証機能の代用であると考えるべきではありません。
送り元アドレスに基づいた制限というのは、かたく決心しているクラッカー
には簡単に出し抜かれてしまいます。
.Ss アクセス制御オプション
次のようなアクセス制御オプションが使用できます:
.Bl -tag -width indent
.It Xo Ic restrict
.Ar numeric_address
.Op mask Ar numeric_mask
.Op Ar flag
.Op ...
.Xc
.Ar numeric_address
引数は、ドットで 4 つの部分に区切られた形式で表現されます。
これは、ホストあるいはネットワークのアドレスです。
.Ar numeric_mask
引数も、ドットで 4 つの部分に区切られた形式で表現されます。
デフォルトは 255.255.255.255 です。
これは、
.Ar numeric_address
が個別のホストのアドレスとして扱われるものであることを
意味しています。
デフォルトエントリ
(アドレス 0.0.0.0, マスク 0.0.0.0)
は常に含まれており、既定のソートアルゴリズムでは、
常にリストの先頭のエントリとなります。
.Ar numeric_address
は、通常ドットで 4 つの部分に区切られた形式で与えられますが、
mask オプションを伴わないテキスト文字列 default は、
デフォルトエントリを示すために使用できることに注意して下さい。
.Pp
現在の実装では、フラグは常にアクセスを制限します。すなわち、フラグを
持たないエントリは、サーバへの自由なアクセスが与えられることを示す
ことになります。フラグは直交的ではなく、より制限の強いフラグは、より
制限の弱いフラグを冗長にします。フラグは、一般に 2 つのカテゴリに分類
されます。時間サービスを制限するものと、情報問い合わせやサーバを
実行時に再設定しようとするのを制限するものです。次のフラグの内、
1 つ以上を指定できます:
.Bl -tag -width indent
.It ignore
このエントリにマッチするホストからのすべてのパケットを無視します。
このフラグが指定されると、問い合わせも時間サーバへのポーリングも
応答されなくなります。
.It noquery
NTP のモード 6 と 7 のすべてのパケット (つまり情報問い合わせと設定要求)
を無視します。時間サービスは影響を受けません。
.It nomodify
サーバの状態を変えようとするモード 6 と 7 のすべてのパケット (つまり
実行時再設定) を無視します。情報を返す問い合わせは許されます。
.It notrap
マッチしたホストにモード 6 の制御メッセージのトラップサービスを提供
することを拒否します。トラップサービスは、モード 6 の制御メッセージ
プロトコルのサブシステムで、リモートのイベントロギングプログラムによ
る使用が意図されています。
.It lowpriotrap
マッチしたホストによるトラップセットを低い優先度として宣言します。
1 つのサーバが保持し得るトラップの数は制限されています
(現在の制限値は 3 です)。
トラップは通常、先入れ先出しベースで割り当てられ、後から来た
トラップ要求はサービスを拒否されます。このフラグは、
後から到着する要求のための通常優先度のトラップが
低い優先度のトラップを上書きできるようにすることで、
割り当てアルゴリズムを変更します。
.It noserve
モード 6 と 7 以外のすべての NTP パケットを無視します。基本的には、
時間サービスは拒否されますが、それでも問い合わせは許されています。
.It nopeer
ポーリングしているホストに、状態を持たない (stateless) 時間サービス
を与えますが、そうしなければ将来的に同期の相手として有用であるかもし
れない場合にさえ、それらに更新相手 (peer) 用のメモリ資源を割り当てません。
.It notrust
これらのホストは同期源としては決して使用されませんが、その他の点では
普通に扱われます。
.It limited
これらのホストは、同一のネットからのクライアント数の制限の対象となり
ます。ここで言うネットとは、 (class A, class B, class C 等の) ネット
の IP 表記のことです。
サーバに見えるホストで、過去
.Va client_limit_period
秒 (下記参照) の間アクティブであった、最初の
.Va client_limit
個のホスト (下記参照) のみが、受け付けられます。
同一のネットの他のクライアントからの要求は拒否されます。
時間要求パケットのみが考慮されます。
.Xr ntpq 8
および
.Xr ntpdc 8
プログラムが送信した問い合わせパケットは、この制限の影響は
受けません。クライアントの履歴は、
.Xr ntpd 8
のモニタリング機能を用いて保持されます。
そのため、limited フラグのついたアクセス制限のエントリがあれば、
モニタリング機能は常にアクティブです。
.It ntpport
実質的には、制限フラグと言うより、マッチのアルゴリズムを変更するもの
です。このフラグが存在すると、パケットのソースポートが標準の NTP の
UDP ポート (123) である場合にのみ、制限エントリにマッチします。
ntpport と non-ntpport のどちらも指定できます。
ntpport の方が限定的なものであると考えられ、リストの後ろの方に
ソートされます。
.El
.Pp
デフォルトの制限リストエントリは、フラグ
ignore および ntpport を持つ各ローカルホストの
インタフェースアドレスであり、スタートアップ時にテーブルに挿入されます。
これは、サーバが自分自身の時間に同期しないようにするためです。
他で設定されていない場合は、どのフラグもデフォルトエントリに関連づけられま
せん (すなわち、あなた自身の NTP サーバ以外のすべてが無制限になります)。
.It clientlimit Ar limit
.Va client_limit
変数を設定します。
この変数は、同時にアクセス制御されるクライアント数を制限します。
この変数のデフォルト値は 3 です。
.It clientperiod Ar period
.Va client_limit_period
変数を設定します。この変数は、クライアントが非アクティブであるとみなされ、
そのために、もはや制限されるクライアント数に数えられなくなるまでの秒数を
指定します。
この変数のデフォルト値は 3600 です。
.El
.Ss 参照クロック機能のサポート
NTP バージョン 4 デーモンは、多数の種類の電波や衛星、およびモデムを参照する
時計をサポートします。
さらに、バックアップ用およびクロック源が他に利用できなく
なったときのために、特殊な疑似クロックをサポートしています。
個別のデバイスドライバやオプションに関する詳細な説明は、
.Qo
参照クロックドライバ
.Qc
のページにあります。
さらなる情報については、そのページを参照しているページから見つかります。
それには、
.Qo
参照クロックドライバのデバッグのヒント
.Qc
および
.Qo
参照クロックドライバの書き方
.Qc
のページも含まれています。
ドライバの多くは、
PPS 信号のサポートもされており、
.Qo
1 秒間隔のパルス (PPS) 信号のインタフェース
.Qc
のページに説明があります。
ドライバの多くは、特殊な回線規約 / ストリームモジュールを
サポートしています。このモジュールを用いると、時刻の正確性が
飛躍的に向上します。
これに関しては、
.Qo
回線規約とストリームドライバ
.Qc
のページに説明があります。
.Pp
参照クロックは、一般に (常にではありませんが)、カナダの NRC や
アメリカの NIST や USNO が提供しているサービスと同様の、
標準時刻の供給源に同期している無線時刻コード受信機です。
コンピュータと時刻コード受信機との間のインタフェースは
デバイス依存ですが、多くはシリアルポートです。
それぞれの参照クロックに特有のデバイスドライバを選択し、
そのディストリビューションでコンパイルする必要がありますが、
もっとも標準の無線、衛星、そしてモデムクロックはデフォルトで
含まれています。
その時計用のドライバが入っていないか、ハードウェアのポートが
適切に設定されていないときに参照クロックを設定しようとすると、
システムのログファイルに警告がでますが、その他の障害が
起こることはありません。
.Pp
設定のために、
.Xr ntpd 8
は、参照クロックを、できる限り普通の
.Tn NTP
の交信相手にするのと同じよう
な方法で扱います。
参照クロックは、通常の NTP 通信相手と区別するため、
文法的には正しいが、無効な IP アドレスを使って認識されます。
参照クロックのアドレスは、127.127.t.u の形式です。
ここで、
.Ar t
は時計の種類を示した数値で、
.Ar u
はユニット番号を示しています。
これは、過剰に見えるかもしれませんが、
実のところ、同種類の参照クロックを複数設定するのには時として
便利です。この場合、ユニット番号は一意のものであることが必要です。
.Pp
.Ic server
コマンドは、参照クロックを設定するのに使用します。
ここで、このコマンドでの address 引数は参照クロックのアドレスです。
key, version, ttl オプションは、参照クロックのサポートには使用しません。
参照クロックをサポートするために、mode オプションが追加されています。
このオプションについては後で述べます。
prefer オプションは、サーバに、他の参照クロックや通信相手よりも
いくらか熱心に、ある参照クロックを大切に扱わせるように促すのに
有効です。
このオプションに関してのさらなる情報については、
.Qo
緩和ルールと prefer キーワード
.Qc
のページにあります。
minpoll と maxpoll オプションは、選択されたクロックドライバに
対してのみ意味があります。
さらなる情報については、別個のクロックドライバのドキュメントページを
参照してください。
.Pp
参照クロックの階層 (stratum) 番号は、デフォルトで 0 です。
.Xr ntpd 8
デーモンは各通信相手の階層に 1 を足すので、
プライマリサーバは、通常、階層 1 を示します。
巧みに運用されたバックアップを提供するため、
参照クロックの階層を 0 より大きい数に指定するのが有益な
ことが多いです。
この目的のために、stratum オプションを使用します。
参照クロックと、1 秒間隔パルス (PPS) 調整信号の両方を
含む場合、参照クロック識別子をデフォルト値以外の、ドライバに
依存したものに指定するのが有効です。
この目的のために、refid オプションを使用します。
記述がない限り、これらのオプションは、すべての時計
ドライバに適用されます。
.Ss 参照クロックのオプション
.Bl -tag -width indent
.It Xo Ic server No 127.127. Ns
.Ar t . Ns Ar u
.Op prefer
.Op mode Ar int
.Op minpoll Ar int
.Op maxpoll Ar int
.Xc
このコマンドは、参照クロックを特殊な方法で設定するのに
使用できます。
オプションは次のように解釈されます:
.Bl -tag -width indent
.It prefer
その参照クロックを優先的なものとして印をつけます。
その他の点では対等ですが、正しく動作しているホストの中から
この参照クロックが同期をとる対象として選ばれます。
さらなる情報については、
.Qo
緩和ルールと prefer キーワード
.Qc
のページを参照してください。
.It mode Ar int
モード番号を指定します。この番号は、デバイス特有のやり方で
解釈されます。例えば、モード番号は、ACTS ドライバでは
ダイヤル用のプロトコルを選択しますが、parse ドライバでは
デバイスのサブタイプを指定します。
.It minpoll Ar int
.It maxpoll Ar int
これらのオプションは、参照クロックのメッセージに対するポーリングの
最小間隔および最大間隔を 2 のべき乗での秒数で指定します。
直接接続されている参照クロックの大部分では、minpoll および maxpoll は
デフォルトで 6 (64 秒) です。
モデムの参照クロックでは、
minpoll はデフォルトで 10 (17.1 秒) で、
maxpoll はデフォルトで 14 (4.5 時間) です。
とりうる範囲は、4 (16 秒) から 17 (36.4 時間) までです。
.El
.It Xo Ic fudge No 127.127. Ns
.Ar t . Ns Ar u
.Op time1 Ar sec
.Op time2 Ar sec
.Op stratum Ar int
.Op refid Ar string
.Op mode Ar int
.Op flag1 Ar 0 Ns | Ns Ar 1
.Op flag2 Ar 0 Ns | Ns Ar 1
.Op flag3 Ar 0 Ns | Ns Ar 1
.Op flag4 Ar 0 Ns | Ns Ar 1
.Xc
このコマンドは、参照クロックを特殊な方法で設定するのに使用できます。
このコマンドは、
ドライバを設定するコマンドである
.Ic server
コマンドの直後に置かれる必要があります。
実行中に
.Xr ntpdc 8
プログラムを使用して、これと同じことができるということに注意してください。
オプションは、次のように解釈されます:
.Bl -tag -width indent
.It time1 Ar sec
ドライバが生成する時間のオフセットに追加される、秒単位で、固定小数点の
10 進数の定数を指定します。
この定数は、例えば正確な PPS 信号のような外部の標準時間に
合わせるために、特定の時計のわずかの時間オフセットを調節する
補正用定数として使われます。
また、この定数は、シリアルポートの遅延や、ケーブルの長さの違い、
あるいは、レシーバ内部の遅延による、体系的な誤差や
バイアスを補正する方法も提供します。
指定されたオフセット値は、伝播遅延に加えて、
他の手段、例えば内部ディップスイッチで提供されるものです。
個別のシステムやドライバに対する補正は使用できますが、
大まかな補正に関しては、ドライバのドキュメントページに
記載されています。
.It time2 Ar secs
秒単位の、固定小数点 10 進数を指定します。
これは、ドライバ依存の方法で解釈されます。
.Qo
参照クロック用ドライバ
.Qc
ページの各ドライバの説明を参照してください。
.It stratum Ar int
ドライバに割り当てられた階層番号を指定します。
この番号は、0 から 15 までの整数値です。
この番号は、最初にドライバ自身が割り当てていた
階層番号 (通常は 0) を上書きします。
.It refid Ar string
1 文字から 4 文字までの ASCII 文字列を指定します。
この文字列は、ドライバが使用する参照識別子を定義しています。
この文字列は、最初にドライバ自身が割り当てていた、
デフォルトの識別子を上書きします。
.It mode Ar int
mode 番号を指定します。この番号は、デバイス特有のやり方で
解釈されます。例えば、ACTS ドライバでは、ダイヤル用
プロトコルを選択しますが、parse ドライバでは、デバイスの
サブタイプを選択します。
.It flag1 flag2 flag3 flag4
これら 4 つのフラグは時計ドライバをカスタマイズするのに
使用されます。これらの値の解釈や、すべてが使用されるか
否かについては、特定の時計ドライバの機能です。
しかし慣習としては、flag4 は、モニタ対象データを、
.Ic filegen
コマンドで設定した clockstats ファイルへ記録
するのを有効にするのに使用します。
PPS 信号が利用できるときには、自動補正の特殊機能が
提供されます。
flag1 スイッチが設定されていて、
PPS 信号がシステム時間を調整している場合には、
補正値は自動的に、0 からの残差オフセットを維持
するために調整されます。
.Ic filegen
コマンドに関するさらなる情報については、
.Sx モニタ機能のオプション
セクションを参照してください。
.El
.It Ic pps device [assert|clear] [hardpps]
PPS 信号が接続されているシリアルポートデバイス用の名称と
オプションを指定します。
このコマンドは、不十分な機能しかない flag3 を置き換えるもの
だということに注意してください。flag3 は、NTPv3 では同じ
目的に使用されていました。
また、このコマンドは、同一デバイスに対する
.Ic server
および
.Ic fudge
コマンドの前におくべきであることにも注意してください。
また、assert, clear および hardpps オプションは、
ppsapi 標準 PPS インタフェースが利用できる場合のみ
使用可能であることにも注意してください。
.Bl -tag -width indent
.It device
PPS シグナルに結びつけられたデバイス名を指定します。
この名称は、ドライバのドキュメントページで指定された
リンク名と完全に一致することが必要です。
.It assert
.It clear
assert あるいは clear を使用すると、シグナルの
立ち上がり時のエッジと、立ち下がり時の
エッジのどちらを使用するかを指定できます。
デフォルトでは assert です。
.It hardpps
このフラグは、hardpps() の駆動にデバイスからの信号が必要であることを、
カーネルに通告します。
assert, clear および hardpps オプションは、PPSAPI を
使用しているときのみ利用可能です。
.El
.El
.Ss その他のオプション
その他のいろいろな設定オプションには、次のようなものが使用
できます:
.Bl -tag -width indent
.It Ic broadcastdelay Ar seconds
ブロードキャストおよびマルチキャストモードでは、特殊な補正が必要です。
これによって、ローカルサーバとリモートサーバ間の遅延を決定します。
通常、これは、ローカルサーバとリモートサーバ間の最初の
プロトコルのやりとりで自動的に行われています。
場合によっては、例えばネットワークやサーバのアクセス制御によって、
この補正の手続きが失敗してしまうこともあります。
このコマンドは、こうした状況の時に使用されるデフォルトの遅延を
指定します。
典型的には (イーサネットでは)、
0.003 から 0.007 秒までが適切です。
このコマンドを使用しない場合のデフォルト値は、0.004 秒です。
.It Xo Ic trap
.Ar host_address
.Op port Ar port_number
.Op interface Ar interface_address
.Xc
このコマンドは、指定されたローカルインタフェースアドレスを
使用して送られるメッセージに対して、与えられたホストアドレス
およびポート番号でのトラップレシーバを設定します。
ポート番号が指定されていない場合は、18447 が使用されます。
インタフェース番号が指定されていない場合は、
メッセージが通過するローカルインタフェースの送信元アドレスを
使用してメッセージが送られます。
マルチホームのホストでは、ルーティングの変更によって、
使用されるインタフェースが時々変わってしまうことがあることに
注意してください。
トラップレシーバは、一般には、イベントメッセージや
その他のサーバからの情報をログファイルに記録します。
このようなモニタプログラムは、自分自身のトラップを動的に
要求するかもしれませんが、トラップレシーバを設定すると、
サーバのスタート時にメッセージが失われないことが保証されます。
.It Ic setvar Ar variable Op default
このコマンドは、付加的なシステム変数を追加します。これらの変数は、
アクセスポリシなどの付加的な情報を配布するために使用できます。
.Va name
=
.Ar value
の形式の変数にデフォルトキーワードが続いている場合、
その変数は、デフォルトのシステム変数の一部として
リストされるようになります
(
.Xr ntpq 8
.Ic rv
コマンドを参照)。
こうした付加的な変数は、情報を与える目的だけを果たします。
リストされるということ以外に、プロトコルに関係しません。
既知のプロトコル変数は常に、
.Em setvar
の機構により定義されたいかなる変数よりも優先されます。
同じグループのすべての変数名を含んだ 3 つの特別な変数があります。
.Va sys_var_list
は、すべてのシステム変数名を保持しています。
.Va peer_var_list
は、すべての通信相手の変数名を保持しています。そして、
.Va clock_var_list
は、参照クロックの変数名を保持しています。
.It Ic logfile Ar logfile
このコマンドは、デフォルトのシステムの
.Xr syslog 3
機能の代わりに使用される、代用のログファイルの在処を指定します。
.It Ic logconfig Ar configkeyword
このコマンドは、システムの
.Xr syslog 3
機能や、代用の
.Ic logfile
ログファイルに書かれる出力の量と種類を制御します。
デフォルトでは、出力はすべて書き出されます。
.Ar configkeyword
キーワードはすべて、=, + および - を先頭につけることが
できます。ここで、= は、syslogmask を設定し、
+ はメッセージを追加し、- はメッセージを削除します。
.Xr syslog 3
メッセージは、4 つのクラス (clock, peer, sys, sync) で
制御できます。
これらのクラスの内部で、
4 種のメッセージが制御できます。
情報メッセージ (info) は設定情報を制御します。
イベントメッセージ (events) はイベントのロギング
(到達可能性、同期、アラーム状況) を制御します。
統計情報の出力は、
.Ic statistics
キーワードを使用して制御されます。
最後のメッセージグループは、ステータスメッセージです。
これは主に、同期のステータスを表します。
.Pp
設定キーワードはメッセージクラスとイベントクラスとを
そのまま結びつけた形をしています。
プレフィクス all は、メッセージクラスにかかわらず使用できます。
メッセージクラスにも、キーワード all を続けることができ、
それによって、それぞれのメッセージクラスのメッセージをすべて
有効 / 無効にできます。
このため、最低限のログの設定は次のようになるでしょう:
.Pp
.Dl logconfig = syncstatus +sysevents
.Pp
この設定では、単に
.Xr ntpd 8
の同期のステータスと重要なシステムイベントをリストします。
単純な参照サーバに対しては、
次のような最低限のメッセージの設定を行うと有益でしょう:
.Pp
.Dl logconfig = syncall +clockall
.Pp
この設定では、時計の情報すべてと同期情報をリストします。
他のイベントや通信相手に関するメッセージ、そしてシステムの
イベントなどは抑止されます。
.El
.Sh 関連ファイル
.Bl -tag -width /etc/ntp.drift -compact
.It Pa /etc/ntp.conf
デフォルトの設定ファイル名
.El
.Sh 関連項目
.Xr ntpd 8 ,
.Xr ntpdc 8 ,
.Xr ntpq 8
.Pp
提供されているマニュアルページに加えて、理解しやすいドキュメントが
world wide web 上で入手可能です。
.Li http://www.ntp.org/
から入手できます。
このドキュメントのスナップショットが HTML フォーマットで
.Pa /usr/share/doc/ntp
ディレクトリ内にあります。
.Rs
.%A David L. Mills
.%T Network Time Protocol (Version 3)
.%O RFC1305
.Re
.Sh 歴史
University of Delaware の
.An David Mills
が書きました。
.Sh バグ
.Xr ntpd 8
はかなり大きくなってしまいました。巨大とは言いませんが、
ワークステーションで実行される高優先度のデーモンとして
望ましい大きさを超えてしまいました。
特に、高い階層のワークステーションよりは、
高負荷のプライマリサーバにあわせて、
かさばる凝った特徴の多くが設計されているからです。
