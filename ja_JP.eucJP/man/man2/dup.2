.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)dup.2	8.1 (Berkeley) 6/4/93
.\" %FreeBSD: src/lib/libc/sys/dup.2,v 1.8.2.1 1999/08/29 14:49:00 peter Exp %
.\"
.Dd June 4, 1993
.Dt DUP 2
.Os BSD 4
.Sh 名称
.Nm dup ,
.Nm dup2
.Nd 既存のファイル記述子を複写する
.Sh 書式
.Fd #include <unistd.h>
.Ft int
.Fn dup "int oldd"
.Ft int
.Fn dup2 "int oldd" "int newd"
.Sh 解説
.Fn dup
は既存のオブジェクト記述子を複写し、その値を呼び出しプロセスに返します
.Fa ( newd
=
.Fn dup oldd ) 。
引数
.Fa oldd
は、プロセスごとの記述子テーブル内の小さい負でない整数インデックスです。
値はテーブルのサイズ
より小さくなければなりません。テーブルのサイズは
.Xr getdtablesize 2
によって返されます。呼び出しによって
返される記述子は、プロセスによって現時点では使用
されていない最も小さい番号の付いた記述子です。
.Pp
記述子が参照するオブジェクトは
.Fa oldd
と
.Fa newd
の間を区別しません。
このように
.Fa newd
と
.Fa oldd
が開いたファイルへの重複参照の場合、
.Xr read 2 ,
.Xr write 2
および
.Xr lseek 2
の各呼び出しはすべて 1 つのポインタをファイル内に移動、
モードを末尾に追加、ノンブロッキング入出力
および非同期入出力オプションは参照の間で共有されます。
ファイルへの別々のポインタが必要な場合は、追加の
.Xr open 2
 呼び出しを出すことによって、ファイルへの異なるオブジェクト参照
を得る必要があります。新しいファイル
上の close-on-exec フラグは設定解除されます。
.Pp
.Fn dup2
では新しい記述子
.Fa newd
の値が指定されます。この記述子が既に使用されており、しかも
.Fa oldd
!=
.Fa newd
の場合に、記述子は
.Xr close 2
呼び出しが使用されたかのように最初に割り当て解除されます。
.Fa oldd
が有効な記述子でない場合、
.Fa newd
は閉じられません。
.Fa oldd
==
.Fa newd
であり、しかも
.Fa oldd
が有効な記述子の場合、
.Fn dup2
は正常に完了し何もしません。
.Sh システムの注意事項
.Pp
ノンスレッドライブラリ
.Fn dup
は
.Va dup
システムコールとして実装されています。
.Pp
スレッドライブラリの場合、
.Va dup
システムコールが
.Fn _thread_sys_dup
にアセンブルされ、
.Fn dup
は読取りと書込み用に
.Va oldd
をロックしてから、
.Fn _thread_sys_dup
を呼び出す関数として実装されています。
戻る前に
.Fn dup
は
.Va oldd
をアンロックします。
.Pp
ノンスレッドライブラリ
.Fn dup2
は、
.Va dup2
システムコールとして実現されます。
.Pp
スレッドライブラリでは、
.Va dup2
システムコールは
.Fn _thread_sys_dup2
にアセンブルされ、
.Fn dup2
は、読取りと書込み用に
.Va oldd
と
.Va newd
の両方をロックしてから、
.Fn _thread_sys_dup2
を呼び出す関数として実現されます。戻る前に、
.Fn dup2
は
.Va oldd
と
.Va newd
をアンロックします。
.Sh 戻り値
いずれかの呼び出しでエラーが起きた場合は値 -1 が返されます。
外部変数
.Va errno
はエラーの原因を示します。
.Sh エラー
.Fn dup
と
.Fn dup2
は次の場合に処理に失敗します。
.Bl -tag -width Er
.It Bq Er EBADF
.Fa oldd
または
.Fa newd
が有効なアクティブな記述子ではありません。
.It Bq Er EMFILE
アクティブな記述子が多すぎます。
.El
.Sh 関連項目
.Xr accept 2 ,
.Xr close 2 ,
.Xr fcntl 2 ,
.Xr getdtablesize 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr socket 2 ,
.Xr socketpair 2
.Sh 規格
.Fn dup
関数と
.Fn dup2
関数は、
.St -p1003.1-90
に準拠しています。
.Sh 歴史
.Fn dup
関数と
.Fn dup2
関数は
.At v7
で登場しました。
