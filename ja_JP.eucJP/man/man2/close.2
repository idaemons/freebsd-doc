.\" Copyright (c) 1980, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)close.2	8.2 (Berkeley) 4/19/94
.\" %FreeBSD: src/lib/libc/sys/close.2,v 1.8.2.2 1999/08/29 14:48:59 peter Exp %
.\"
.Dd April 19, 1994
.Dt CLOSE 2
.Os BSD 4
.Sh 名称
.Nm close
.Nd 記述子を削除する
.Sh 書式
.Fd #include <unistd.h>
.Ft int
.Fn close "int d"
.Sh 解説
.Fn close
呼び出しはプロセスごとのオブジェクト参照テーブルから記述子を削除します。
これが下層にあるオブジェクトの最後の参照である場合、
そのオブジェクトはアクティブでなくなります。たとえば、
ファイルを最後に閉じる時点で、そのファイルに対応する現在の
.Em seek
ポインタは失われます。
.Xr socket 2
を最後に閉じる時点で、対応する命名情報と待ち行列に
入れられたデータは破棄されます。問合せ型ロックを保持している
ファイルを最後に閉じる時点で、ロックは開放されます (さらには
.Xr flock 2
を参照)。しかし、System V と
.St -p1003.1-88
では、あるプロセスがファイルに対して保持しているすべての
.Xr fcntl 2
問合せ型レコードロックが、そのファイルについてのファイル記述子の
.Em いずれか
がそのプロセスによって閉じられるときに除去されることを
規定しています。
.Pp
プロセスが終了するとき、すべての対応するファイル記述子が解放されますが、
アクティブな記述子にはプロセスごとに制限があるので、
大量のファイル記述子を処理するときは、
.Fn close
関数呼び出しが便利です。
.Pp
プロセスがフォークするとき
.Pf ( Xr fork 2
を参照)、新しい子プロセスのすべての記述子は、
フォークの前に親の記述子が参照しているのと同じオブジェクトを参照します。
次に、新しいプロセスが
.Xr execve 2
を使用して実行されることになる場合、
そのプロセスは通常これらの記述子を継承します。
ほとんどの記述子が、
.Xr execve 2
を試みる前に
.Xr dup2 2
で再配置されるか、または
.Fn close
で削除され得ますが、もし execve が処理に失敗する場合にこれらの記述子の
いくつかが必要だとすると、
execve が成功した場合にそれらが閉じるように手配する必要があります。
この理由から、呼び出し
.Dq Li fcntl(d, F_SETFD, 1)
が準備されています。これは execve が成功した後で、
記述子が閉じるように手配します。呼び出し
.Dq Li fcntl(d, F_SETFD, 0)
はデフォルトを復元します。デフォルトは、記述子を閉じないというものです。
.Sh システムの注意事項
.Pp
ノンスレッドライブラリでは、
.Fn close
は
.Va close
システムコールとして実装されています。
.Pp
スレッドライブラリでは、
.Va close
システムコールは、
.Fn _thread_sys_close
にアセンブルされ、
.Fn close
は、読取りと書込みについて
.Va d
をロックしてから、
.Fn _thread_sys_close
を呼び出す関数として実装されています。戻る前に、
.Fn close
は
.Va d
をアンロックします。
.Sh 戻り値
処理が正常に完了すると、値 0 が返されます。そうでない場合は、
値 -1 が返され、エラーを示すために
グローバル整数変数
.Va errno
が設定されます。
.Sh エラー
.Fn close
は次の場合に失敗します:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa d
がアクティブな記述子でありません。
.It Bq Er EINTR
割り込みが受信されました。
.El
.Sh 関連項目
.Xr accept 2 ,
.Xr execve 2 ,
.Xr fcntl 2 ,
.Xr flock 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr socket 2 ,
.Xr socketpair 2
.Sh 規格
.Fn close
関数は
.St -p1003.1-90
に準拠しています。
.Sh 歴史
.Fn close
関数は
.At v7
で登場しました。
