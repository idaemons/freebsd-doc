.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)getlogin.2	8.1 (Berkeley) 6/9/93
.\" %FreeBSD: src/lib/libc/sys/getlogin.2,v 1.14.2.3 2001/03/06 16:46:06 ru Exp %
.\"
.\" $FreeBSD$
.Dd June 9, 1993
.Dt GETLOGIN 2
.Os BSD 4.4
.Sh 名称
.Nm getlogin ,
.Nm getlogin_r ,
.Nm setlogin
.Nd ログイン名を取得 / 設定
.Sh ライブラリ
.Lb libc
.Sh 書式
.Fd #include <unistd.h>
.Ft char *
.Fn getlogin void
.Fd #include <sys/param.h>
.Ft int
.Fn getlogin_r "char *name" "int len"
.Ft int
.Fn setlogin "const char *name"
.Sh 解説
.Fn getlogin
ルーチンは、
.Fn setlogin
で設定した現在のセッションに対応する
ユーザのログイン名を返します。
通常、名前はセッションが作成された時点でログインシェルに対応し、
ログインシェルから派生する全てのプロセスに継承されます
(これらのプロセスが別のユーザ ID を想定している場合、たとえば、
.Xr su 1
が使用されるときでも該当します)。
.Pp
.Fn getlogin_r
は
.Fn getlogin
と同様のサービスを提供しますが、
呼び出し側は結果を保持するための長さ
.Fa len
バイトのバッファ
.Fa name
を用意しなければなりません。バッファは少なくとも
.Dv MAXLOGNAME
バイトの長さがあるべきです。
.Pp
.Fn setlogin
は、現在のセッションに対応するユーザのログイン名を
.Fa name
に対応させます。
この呼び出しはスーパユーザに制限されており、
新しいセッションがユーザのために
作成されるときにだけ使用されるのが普通です
(たとえば、ログイン時、またはリモートシェルが
起動されるときです)。
.Pp
.Em 注釈 :
セッションごとに 1 つのログイン名しかありません。
.Pp
プロセスが、確実に親のセッションから切り離されるような
適切なステップを取った後にのみ、
.Fn setlogin
が呼び出されるようにすることは
.Em 非常に
重要です。
.Fn setsid
システムコール
を行なうのがこれをする
.Em 唯一の
方法です。
.Fn daemon
ライブラリは
.Fn setsid
を呼び出しますが、これは制御端末を切り離して
フォークでバックグラウンドに入る理想的な方法です。
.Pp
特に、
.Fn ioctl ttyfd TIOCNOTTY ...\&
または
.Fn setpgrp ...\&
では十分では
.Em ありません。
.Pp
親プロセスがいったん
.Fn setsid
呼び出しを行なえば、セッションリーダでない
そのプロセスの子が
.Fn setlogin
を行なうことも受け入れられますが、親を含めてセッション内のすべての
プロセスが同時にログイン名を変更されることに注意してください。
.Pp
これは特権を継承する従来の UNIX の動作と同じではありません。
.Pp
.Fn setlogin
システムコールはスーパユーザに制限されているので、セキュリティ侵犯を
防止するために (他の特権のあるすべてのプログラムと同じように)
プログラマが適切な注意を払うものだと仮定しています。
.Sh 戻り値
.Fn getlogin
の呼び出しが成功すると、静的バッファ内のヌルで終端された文字列への
ポインタが返されます。
名前が設定されていない場合は、
.Dv NULL
が返されます。
.Fn getlogin_r
の呼び出しが成功すると、0 が返されます。失敗するとエラー番号
が返されます。
.Pp
.Fn setlogin
の呼び出しが成功すると
値 0 が返されます。
.Fn setlogin
が処理を失敗すると値 -1 が返され、エラーコードがグローバル変数
.Va errno
に設定されます。
.Sh エラー
これらの呼び出しによって以下のエラーが返される可能性があります。
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa name
パラメータで無効なアドレスを与えました。
.It Bq Er EINVAL
.Fa name
パラメータが長すぎる文字列を指しています。ログイン名は
.Pf ( Ao Pa sys/param.h Ac の )
.Dv MAXLOGNAME
文字までに制限されます。現時点ではヌルを含めて 17 文字です。
.It Bq Er EPERM
ログイン名を設定しようとした呼び出し元が
スーパユーザではありませんでした。
.It Bq Er ERANGE
返される結果よりバッファのサイズが小さすぎます。
.El
.Sh 関連項目
.Xr setsid 2 ,
.Xr daemon 3
.Sh バグ
システムの以前のバージョンでは、
.Fn getlogin
はプロセスがログイン端末に対応していない限り
処理に失敗しました。現在では、
.Pf ( Fn setlogin
を使用して) プロセスに制御端末がないときでも
getlogin は正常に完了します。初期のバージョンでは、
.Fn getlogin
が返す値はユーザ ID をチェックせずには
信頼することができませんでした。
移植性の高いプログラムはおそらくまだこのチェックを行なっているはずです。
.Sh 歴史
.Fn getlogin
関数は
.Bx 4.4
ではじめて登場しました。
.Fn getlogin_r
の戻り値は
.St -p1003.1-96
に準拠するために
.Fx
の初期のバージョンから変更されました。
.Sh 規格
.Fn getlogin
と
.Fn getlogin_r
は
.St -p1003.1-96
に準拠しています。
