.\"	$OpenBSD: clock_gettime.2,v 1.4 1997/05/08 20:21:16 kstailey Exp $
.\" %FreeBSD: src/lib/libc/sys/clock_gettime.2,v 1.2.2.1 1999/08/29 14:48:59 peter Exp %
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd May 8, 1997
.Dt CLOCK_GETTIME 2
.Os BSD 4
.Sh 名称
.Nm clock_gettime ,
.Nm clock_settime ,
.Nm clock_getres
.Nd 日付と時刻を取得/設定/キャリブレートする
.Sh 書式
.Fd #include <sys/time.h>
.Ft int
.Fn clock_gettime "clockid_t clock_id" "struct timespec *tp"
.Ft int
.Fn clock_settime "clockid_t clock_id" "const struct timespec *tp"
.Ft int
.Fn clock_getres "clockid_t clock_id" "struct timespec *tp"
.Sh 解説
.Fn clock_gettime
と
.Fn clock_settime
によって呼び出し側プロセスは、
.Fa clock_id
によって
指定されるクロックが使用する値を取り出したり、設定することができます。
.Pp
.Fa clock_id
は、次の 3 つの値のうちの 1 つにできます。
CLOCK_REALTIME は、普通の時計のように時間を進めます。
CLOCK_VIRTUAL は、プロセスを呼び出す代わりに CPU がユーザモードで
実行されるときにだけ進む時間用です。
CLOCK_PROF は、CPU がユーザモードまたはカーネルモードで実行される
ときに進む時間用です。
.Pp
.Fa tp
によって指される構造体は
.Ao Pa sys/time.h Ac
内に次のように示されます。
.Pp
.Bd -literal
struct timespec {
	time_t	tv_sec;		/* 秒 */
	long	tv_nsec;	/* ナノ秒 */
};
.Ed
.Pp
スーパーユーザだけが時刻を設定できます。
システム安全性レベルが 1 より大きい場合
.Pf ( Xr init 8
を参照)
に、時間を進めることができます。この制限は、
悪意のあるスーパーユーザがファイルに
任意のタイムスタンプを設定するのを防止するために課せられています。
システムが安全モードの時でも、
.Xr adjtime 2
システムコールを使用して後方に調整できます。
.Pp
クロックの精度 (細かさ) は、
.Fn clock_getres
呼び出しによって返されます。この値は、
(非NULLポインタ)
.Fa *tp
内に配置されます。
.Sh 戻り
戻り値 0 は呼び出しが正常に完了したことを示します。戻り値 -1 は
エラーが起こったことを示し、
この場合、エラーコードはグローバル変数
.Va errno
に保存されます。
.Sh エラー
次のエラーコードが
.Va errno
に設定できます。
.Bl -tag -width [EFAULT]
.It Bq Er EINVAL
.Fa clock_id
が有効な値ではありませんでした。
.It Bq Er EFAULT
.Fa *tp
引数アドレスが無効なメモリを参照しました。
.It Bq Er EPERM
スーパユーザ以外のユーザが時刻を設定しようとしました。
.El
.Sh 関連項目
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr ctime 3 ,
.Xr timed 8
.Sh 規格
.Fn clock_gettime
等の関数は
.St -p1003.1b-93
に準拠しています。
