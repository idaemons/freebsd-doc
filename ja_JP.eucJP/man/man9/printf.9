.\"
.\" Copyright (c) 2001 Andrew R. Reiter
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" %FreeBSD: src/share/man/man9/printf.9,v 1.3 2001/10/01 16:09:25 ru Exp %
.\"
.\" $FreeBSD$
.Dd April 25, 2001
.Dt PRINTF 9
.Os
.Sh 名称
.Nm printf , uprintf , tprintf
.Nd フォーマットされた出力の変換
.Sh 書式
.In sys/types.h
.In sys/systm.h
.Ft int
.Fn printf "const char *fmt" "..."
.Ft void
.Fn tprintf "struct proc *p" "int pri" "const char *fmt" "..."
.Ft int
.Fn uprintf "const char *fmt" "..."
.Sh 解説
.Xr printf 9
ファミリの関数は
.Xr printf 3
ファミリの関数と類似しています。
この 3 つの関数はそれぞれ異なった出力ストリームを使用します。
.Fn uprintf
関数は現在のプロセスが制御している tty に出力しますが、
.Fn printf
はロギングファシリティおよびコンソールに出力します。
.Fn tprintf
関数は
.Fa pri
が \&-1 でない場合には、プロセス
.Fa p
に関連づけられた tty およびロギングファシリティに出力します。
.Pp
これらそれぞれの関連した関数は、
.Xr printf 3
と同じ方法で
.Fa fmt
パラメータを使用します。
しかしながら、
.Xr printf 9
は 2 つの他の変換指定子を追加しています。
.Pp
.Cm \&%b
識別子は 2 つの引数を期待します。
.Vt int
および
.Vt "char *"
です。
これらはビットマスクのデコードのため、
レジスタ値と印字マスクとして使用されます。
この印字マスクは 2 つの部分で構成されます。基数と引数です。
基数値は整数値として表現される出力の基数です。
例えば、\\10 は 8 進数を \\20 は 16 進数を与えます。
引数はビット識別子の並びとして構成されます。
個々のビット識別子はこの識別子が表すビット番号の整数値で始まります。
識別子の残り部分はそのビットの名前を含む文字列です。
この文字列は次のビット識別子の始まりのビット番号、
または最後のビット識別子のために
.Dv NUL
で終端されます。
.Pp
.Cm \&%D
識別子は 16 進ダンプを補助することを意図されています。
.Cm \&%D
これは 2 つの引数を要求します。
.Vt "u_char *"
ポインタおよび
.Vt "char *"
文字列です。
ポインタが指しているメモリは、16 進数で一度に 1 バイト出力されます。
文字列は個々のバイトの間のデリミタとして使用されます。
もし存在すれば、幅ディレクティブが表示するバイト数を指定します。
デフォルトでは、16 バイトのデータが出力されます。
.Sh 戻り値
.Fn printf
および
.Fn uprintf
関数は表示された文字数を返します。
.Sh 使用例
この使用例は \&%b および \&%D 変換指定子の使用方法を示しています。
関数
.Bd -literal -offset indent
void
printf_test(void)
{

	printf("reg=%b\\n", 3, "\\10\\2BITTWO\\1BITONE\\n");
	printf("out: %4D\\n", "AAAA", ":");
}
.Ed
.Pp
は下記の出力を発生させます。
.Bd -literal -offset indent
reg=3<BITTWO,BITONE>
out: 41:41:41:41
.Ed
.Sh 関連項目
.Xr printf 3
