.\" Copyright (c) 1999 Whistle Communications, Inc.
.\" All rights reserved.
.\" 
.\" Subject to the following obligations and disclaimer of warranty, use and
.\" redistribution of this software, in source or object code forms, with or
.\" without modifications are expressly permitted by Whistle Communications;
.\" provided, however, that:
.\" 1. Any and all reproductions of the source or object code must include the
.\"    copyright notice above and the following disclaimer of warranties; and
.\" 2. No rights are granted, in any manner or form, to use Whistle
.\"    Communications, Inc. trademarks, including the mark "WHISTLE
.\"    COMMUNICATIONS" on advertising, endorsements, or otherwise except as
.\"    such appears in the above copyright notice or in the software.
.\" 
.\" THIS SOFTWARE IS BEING PROVIDED BY WHISTLE COMMUNICATIONS "AS IS", AND
.\" TO THE MAXIMUM EXTENT PERMITTED BY LAW, WHISTLE COMMUNICATIONS MAKES NO
.\" REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, REGARDING THIS SOFTWARE,
.\" INCLUDING WITHOUT LIMITATION, ANY AND ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.
.\" WHISTLE COMMUNICATIONS DOES NOT WARRANT, GUARANTEE, OR MAKE ANY
.\" REPRESENTATIONS REGARDING THE USE OF, OR THE RESULTS OF THE USE OF THIS
.\" SOFTWARE IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY OR OTHERWISE.
.\" IN NO EVENT SHALL WHISTLE COMMUNICATIONS BE LIABLE FOR ANY DAMAGES
.\" RESULTING FROM OR ARISING OUT OF ANY USE OF THIS SOFTWARE, INCLUDING
.\" WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
.\" PUNITIVE, OR CONSEQUENTIAL DAMAGES, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES, LOSS OF USE, DATA OR PROFITS, HOWEVER CAUSED AND UNDER ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF WHISTLE COMMUNICATIONS IS ADVISED OF THE POSSIBILITY
.\" OF SUCH DAMAGE.
.\" 
.\" Author: Archie Cobbs <archie@whistle.com>
.\"
.\" %FreeBSD: src/sys/modules/netgraph/ksocket/ng_ksocket.8,v 1.4 2000/01/17 20:10:39 archie Exp %
.\"
.Dd November 15, 1999
.\" jpman %Id: ng_ksocket.8,v 1.3 1999/12/19 08:54:33 horikawa Stab %
.Dt NG_KSOCKET 8
.Os FreeBSD
.Sh 名称
.Nm ng_ksocket
.Nd カーネルソケット netgraph ノードタイプ
.Sh 書式
.Fd #include <netgraph/ng_ksocket.h>
.Sh 解説
.Nm
ノードは netgraph ノードと BSD ソケットの双方を兼ね備えています。
.Nm
ノードタイプによりカーネル内部にソケットを開くことができます。
また、このソケットは netgraph ノードとして出現します。
.Nm
ノードタイプはソケットノードタイプの逆にあたります (
.Xr ng_socket 8 
を参照してください): 
通常はカーネルレベルによる構成要素 (関連した netgraph ノード) を、
ソケットノードタイプがユーザレベルで (ソケットを通して) 処理可能に
しているのに対して、
通常はユーザレベルによる構成要素 (関連したソケット) を、
.Nm
ノードタイプがカーネルレベルで (netgraph ノードを通して) 処理可能にします。
.Pp
.Nm
ノードは、最高で 1 つのフック接続を許します。ノードに接続することと、
関連したソケットを開くことは同じです。
フックに与えられる名前は、
ノードがどのような種類のソケットとして開くかを決定します (下記参照) 。
フックが切断されたり、ノードがシャットダウンされたとき、
関連したソケットは閉じられます。
.Sh フック
本ノードタイプは、一度に 1 つだけのフック接続をサポートします。
フックの名称は
.Dv Em <family>/<type>/<proto> 
といった形式に従う必要があります。
ここで、
.Dv Em family ,
.Dv Em type 
及び
.Dv Em proto
は
.Xr socket 2 
の引数と同じく 10 進数となります。
あるいは、よく用いられる値のエイリアスも、同様に受付けます。
例えば、
.Dv inet/dgram/udp
は
.Dv 2/2/17 
と同じ意味ですが、より読み易くなった例です。
.Sh 制御メッセージ
本ノードタイプは、汎用制御メッセージに加え、
次に挙げるメッセージをサポートします:
.Bl -tag -width foo
.It Dv NGM_KSOCKET_BIND
このメッセージは
.Xr bind 2
システムコールと全く同じ機能を持ちます。
.Dv "struct sockaddr"
ソケットアドレスパラメータを引数として指定する必要があります。
.It Dv NGM_KSOCKET_LISTEN
このメッセージは
.Xr listen 2
システムコールと全く同じ機能を持ちます。
値 backlog (32 ビット
.Dv int
型 1 個) を引数として指定する必要があります。
.It Dv NGM_KSOCKET_CONNECT
このメッセージは
.Xr connect 2
システムコールと全く同じ機能を持ちます。
.Dv "struct sockaddr"
宛先アドレスを引数として指定する必要があります。
.It Dv NGM_KSOCKET_ACCEPT
現時点では実装されていません。
.It Dv NGM_KSOCKET_GETNAME
このメッセージは
.Xr getname 2
システムコールと全く同じ機能を持ちます。
応答の引数フィールド中の
.Dv "struct sockaddr"
として、名前が返されます。
.It Dv NGM_KSOCKET_GETPEERNAME
このメッセージは
.Xr getpeername 2
システムコールと全く同じ機能を持ちます。
応答の引数フィールド中の
.Dv "struct sockaddr"
として、名前が返されます。
.It Dv NGM_KSOCKET_SETOPT
このメッセージは
.Xr setsockopt 2
システムコールと全く同じ機能を持ちます。
ただしオプション名、レベル、値は
.Dv "struct ng_ksocket_sockopt"
に入れて渡されます。
.It Dv NGM_KSOCKET_GETOPT
このメッセージは
.Xr getsockopt 2
システムコールと全く同じ機能を持ちます。
ただしオプションは
.Dv "struct ng_ksocket_sockopt"
に入れて渡されます。
本コマンドを送るとき、
.Dv value
フィールドは空であるべきです。戻るときに、ここに取り出した値を入れます。
.El
.Pp
.Sh ASCII 形式の制御メッセージ
引数フィールドで
.Dv "struct sockaddr"
を渡す制御メッセージでは、
この C 構造を
.Tn ASCII 
で通常の相当形式にしたものは、受け付けられる書式です。
.Dv PF_INET
と
.Dv PF_LOCAL
のアドレスファミリでは、より便利な書式もまた使用可能です。
それはプロトコルファミリ名、続いてスラッシュ、続いて実際の番号です。
.Dv PF_INET
では、アドレスは IP アドレス、続いてオプションのコロンとポート番号です。
.Dv PF_LOCAL
では、アドレスはダブルクォートで括られたパス名です。
.Pp
使用例:
.Bl -tag -width XXXXXXXXXX
.It Dv PF_LOCAL
inet/192.168.1.1:1234
.It Dv PF_INET
local/"/tmp/foo.socket"
.It Other
.Dv "{ family=16 len=16 data=[0x70 0x00 0x01 0x23] }"
.El
.Pp
.Dv "struct ng_ksocket_sockopt"
を渡す制御メッセージでは、通常の
.Tn ASCII
形式がこの構造体に使用されます。
将来、より一般的なソケットオプションのより便利なエンコーディングが
サポートされるかもしれません。
.Pp
.Sh シャットダウン
本ノードは、
.Dv NGM_SHUTDOWN
制御メッセージの受信時か、フックが切断されたときに、シャットダウンします。
ノードがシャットダウンされると、関連したソケットも閉じられます。
.Sh 関連項目
.Xr socket 2 ,
.Xr netgraph 4 ,
.Xr ng_socket 8 ,
.Xr ngctl 8 
.Sh 歴史
.Nm
ノードタイプは
.Fx 4.0
で実装されました。
.Sh 作者
.An Archie Cobbs Aq archie@whistle.com
