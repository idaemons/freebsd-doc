.\" -*- nroff-fill -*-
.\" %FreeBSD: src/share/man/man8/picobsd.8,v 1.1.2.8 2001/07/22 11:02:04 dd Exp %
.\"
.\" $FreeBSD: doc/ja_JP.eucJP/man/man8/picobsd.8,v 1.7 2001/07/29 05:15:29 horikawa Exp $
.Dd June 20, 2001
.Os
.Dt PICOBSD 8
.Sh 名称
.Nm picobsd
.Nd フロッピディスクベースの FreeBSD システム
.Sh 書式
.Nm
.Op options
.Op Ar floppy-type Op Ar site-name
.Sh 解説
.Nm
スクリプトは、最小実装の
.Fx
(歴史的に
.Nm PicoBSD
と呼ばれます) の生成に使用可能です。
生成物は、典型的には 1 枚のフロッピディスクに収まるか、
CDROM やフラッシュメモリや
.Xr etherboot
経由といった様々なメディアからダウンロード可能となります。
.Pp
ブートメディア (典型的にはフロッピディスク) は、
ブートローダと、メモリファイルシステムを含む圧縮カーネルを含みます。
メディアに依存し、多数の追加ファイルを含むかもしれません。
これらは、実行時に更新可能であり、
メモリファイルシステム中のファイルの書き換え/更新に使用されます。
.Pp
システムは、カーネルを通常の方法でロードし、
メモリファイルシステムを伸長し、これをルートとしてマウントします。
その後、メモリファイルシステムを、ブートメディアからのファイルで更新し
(存在する場合のみ)、特別な
.Pa /etc/rc
を実行します。
ブートメディア (フロッピ等) は、ロードのためだけに必要であり、
典型的には読み取り専用で使用されます。
ブートフェーズ後は、システムは完全に RAM で実行されます。
.Pp
次のオプションが使用可能です (詳細は
.Nm
も参照してください):
.Pp
.Bl -tag -width "--floppy_size" -compact
.It Fl c
.It Fl clean
以前の構築における生成物を除去します。
.It Fl n
スクリプトを、非対話的にします。
最初のメニューを表示せず、ユーザの入力を要せずに構築処理に進みます。
.It Fl v
スクリプトを冗長表示にし、実行する様々なコマンドを表示し、
それらの実行前にユーザの入力を待ちます。
デバッグ時に有用です。
.It Fl -floppy_size Ar size
フロッピイメージの大きさを設定します。
CDROM に焼いたり
.Xr etherboot
からダウンロードするイメージ用に、1440 以外の値を使用可能です。
.It Fl -src Ar pathname
標準の
.Ar /usr/src
の代りに、
.Ar pathname
を、ソースツリーとして使用します。
フロッピイメージをクロス構築する場合に有用かもしれませんが、
.Xr config 8
プログラムおよびインクルードファイルとライブラリへの依存があることに
注意してください。
.El
.Sh 環境
サイズ制限が極めて厳しいため、
.Nm
の環境は通常の
.Fx
といくつかの点で異なっています:
.Bl -bullet
.It
ダイナミックライブラリはなく、
.Pa /usr/lib
ディレクトリもありません。
そのため、スタティックリンクした実行体のみ実行可能です。
.It
実行体のサイズを減らすため、特定のフロッピ内のすべての実行体は、
.Xr crunchgen 1
を利用して単一の実行体にまとめられています。
.It
プログラムによっては最小限のバージョンが提供されています。
.Nm ns
は
.Xr netstat 1
の機能限定版であり、
.Nm vm
は
.Xr vmstat 8
の機能限定版です。
.El
.Sh picobsd の構築
.Nm
のソースはディレクトリ
.Pa /usr/src/release/picobsd
の下にあります。
以下では、相対パス名はすべてこのディレクトリからの相対位置です。
.Nm
の構築過程は、時とともに少し変化しました。
コード量の不可避な増加に対応するために、
なるべく多くをフロッピに詰め込むための沢山のからくりが必要となったからです。
.Fx 4.3
では、サポートされている構築スクリプトは
.Pa /usr/src/release/picobsd/build/picobsd
であり、どこからでも実行可能です。
この対話的なスクリプトは、いくつかパラメータを尋ねた後、
適切な単一フロッピ版を構築します。
次の種類のフロッピが想定されています:
.Bl -hang -width "install  "
.It bridge
はブリッジ、ルータ、ファイアウォールに適したコンフィギュレーションです。
.It dial
はダイヤルアウト (ppp) ネットワーキングに適したコンフィギュレーションです。
.It install
はソフトウェアインストールに適したコンフィギュレーションです。
.It isp
はダイヤルイン (ppp) ネットワーキングに適したコンフィギュレーションです。
.It net
は一般的なネットワーキングに適したコンフィギュレーションです。
.It router
はルータとして使う場合に適したコンフィギュレーションです。
この特別なコンフィギュレーションは、最小限のハードウェアで動作することを
目標としています。
.El
.Pp
これらのコンフィギュレーションは、
あなた自身による構築の参考のためだけにあります。
すべてがテストされたわけではありませんし、
動かすため、もしくはコード量増加時に空きディスク空間に納めるために、
コンフィギュレーションファイルにちょっとした修正が必要となるかもしれません。
.Pp
あなた自身のフロッピタイプを定義可能であり、
このためには次のものを含む好み (例 FOO) のディレクトリを作成します。
.Pp
.Bl -tag -width "floppy.tree.exclude" -compact
.It Pa PICOBSD
カーネルコンフィギュレーションファイル (必須)。
.It Pa crunch.conf
crunchgen コンフィギュレーションファイル (必須)。
.It Pa config
.Pa picobsd
スクリプトが読み取るシェル変数 (省略可能)。
.It Pa floppy.tree.exclude
標準フロッピツリーから得る、必須ではないファイル (省略可能)。
.It Pa floppy.tree/
標準フロッピツリーへの、ローカルな追加 (省略可能)。
.It Pa floppy.tree.${site}
上と同じですが、サイト固有です (省略可能)。
.El
.Pp
構築過程に関する更なる情報は、
.Pa picobsd
スクリプトに記述されています。
サンプルのコンフィギュレーションは
.Pa /usr/src/release/picobsd/ Ns ${type} Ns /
にあります。
.Sh 別のソースツリーの使用
構築スクリプトは、別のソースツリーを使用するよう、
.Fl -src Ar pathname
オプションで指示可能です。
指定するツリーは、カーネルおよびイメージに含める全プログラムの
ソースすべてを含む必要があります。
このオプションは非常に注意して指定する必要があります。
なぜならば、別のインクルードファイル、
別のライブラリ、または別バージョンの
.Xr config 8
プログラムを、この別のソースツリーが参照するかもしれないためです
.Sh PicoBSD のブート
.Nm
をブートするには、フロッピを挿入してマシンをリセットします。
ブート手順は標準の
.Fx
ブートと似ていますが、
非常にゆっくりと進みます。
POST (BIOS の Power On Self Test) が終ってから
システムが立ち上がって走行するまで 1 〜 3 分かかります。
.Pp
ブートを高速化するには、
.Xr etherboot
を使用して、ロード済みで圧縮を伸長したカーネルイメージをロードしてください。
このイメージは、
.Nm
構築過程で生成されます。
この場合、10Mbit/s イーサネットでさえ、ロード時間は数秒になります、
.Ss スワップ空間
ブート後は、
.Nm
は完全にメモリファイルシステム上で走ります。
もはやフロッピは不要ですし、
たとえ
.Nm
カーネルにハードディスクドライバが含まれていても、
.Nm
はハードディスクにアクセスしません。
特に、スワップ空間もありませんので、
メモリ不足の際には予期できない事態が発生し得ます。
.Pp
もしディスクドライバがあって、
スワップパーティションを含むディスクがあり、
しかもそのスワップパーティションに
保存しておきたいダンプが含まれていないなら、
そのスワップを
.Nm PicoBSD
で使用することも可能です。
.Xr swapon 8
コマンドを使って下さい。
.Sh 関連項目
.Xr crunchgen 1 ,
.Xr swapon 8 ,
.Xr vnconfig 8
.Sh 作者
.An -nosplit
.An Andrzej Bialecki Aq abial@FreeBSD.org
です。
スクリプト関連の仕事を
.An Luigi Rizzo Aq luigi@iet.unipi.it
等が引き継ぎました。
マニュアルページと
.Pa Makefile
の作成は
.An Greg Lehey Aq grog@lemis.com
が行いました。
.Sh バグ
.Nm
を構築する際、
構築作業を行うシステムのカーネルには
.Xr vn 4
ドライバがインストールされていなければなりません。
.Pp
構築の過程は
.Dq root
で実行しなければなりません。
.Xr vnconfig 8
と
.Xr mount 8
を実行する必要があるためです。
.Pp
.Nm
の構築には、依然、中身の見えにくいところがあります。
最大の問題は、
どういうふうにすればフロッピにぴったり詰め込むことができるかを
判断することです。
現実的な方法は試行錯誤しかありません。
