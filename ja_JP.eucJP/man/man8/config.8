.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)config.8	8.2 (Berkeley) 4/19/94
.\" %FreeBSD: src/usr.sbin/config/config.8,v 1.21.2.2 2000/12/11 10:23:46 ben Exp %
.\"
.\" jpman %Id: config.8,v 1.2 1997/03/31 13:33:05 horikawa Stab %
.\"
.Dd April 19, 1994
.Dt CONFIG 8
.Os BSD 4
.Sh 名称
.Nm config
.Nd システムを構築するために必要なファイルの作成
.Sh 書式
.Nm
.Op Fl gpr
.Op Fl d Ar destdir
.Ar SYSTEM_NAME
.Sh 解説
これは古いバージョンの
.Nm
プログラムです。
このプログラムは、古いオートコンフィギュレーションスキームを理解します。
このスキームは HP300, i386, DECstation やその派生プラットフォームにて
使用されます。
新しいバージョンの config は SPARC プラットフォームで使用されます。
あなたが使用しているアーキテクチャに適合したバージョンの
.Nm
のみがあなたのマシンにインストールされているでしょう。
.Pp
.Nm
は、システムの構成を記述した設定ファイル
.Ar SYSTEM_NAME
にもとづいてシステムを構築するために必要なファイルを作成します。
別のファイルが、
.Nm
に対し、
システム生成に必要なファイルと、
構成依存ファイルセットにより追加されるファイルとを指示します。
構成依存ファイルセットは、固有マシン用代替ファイルを指定します
(以降に示す
.Sx 関連ファイル
を参照)。
.Pp
オプションとオペランドしては以下のものがあります:
.Bl -tag -width SYSTEM_NAME
.It Fl d Ar destdir
デフォルトの出力ディレクトリの代わりに、
.Ar destdir
に出力します。config は与えられたディレクトリに
.Ar SYSTEM_NAME
を追加しないことに注意してください。
.It Fl g
システムのデバッグのための設定をします。
.It Fl p
プロファイリングを行うシステムを構築します。プロファイルを行うものは例えば
.Xr kgmon 8
や
.Xr gprof 1 などです。
.Fl p
オプションを 2 度以上指定すると、
.Nm
より詳細なプロファイリングを行うシステムを構築します。
.It Fl r
以前のコンパイル用ディレクトリを削除します (以降参照)。
.It Ar SYSTEM_NAME
.Ar SYSTEM_NAME
はシステム設定ファイルの名前であり、システム設定ファイル
にはデバイスの仕様、構築するシステムのオプション、
その他のシステムパラメータの記述をします。
.El
.Pp
.Nm
はシステムソースの
.Pa conf
サブディレクトリで起動します (通常
.Pa /sys/ARCH/conf
),
ただし
.Pa ARCH
には FreeBSD がサポートしているアーキテクチャの一つが入ります。
.Nm
は必要により
.Pa ../../compile/SYSTEM_NAME
か、または
.Fl d
オプションで指定されたディレクトリ
を作成し、そこにすべての出力ファイルを置きます。
出力ディレクトリが既に存在し、
.Fl r
オプションが指定されている場合、
ディレクトリがまず削除されます。
.Nm
の出力は多くのファイルです;
.Tn i386
の場合は次のようなファイルになります:
.Pa ioconf.c
はシステムに接続された I/O デバイスの記述です;
.Pa Makefile
は
.Xr make 1
がシステム構築に使用するファイルです;
ヘッダファイルはシステムに組み込まれる多くのデバイスに関する定義です。
.Pp
.Nm
の実行後は、
.Dq Li make depend
を Makefile が作成されたディレクトリで実行する必要があります。
.Nm
は正常終了すると、これを促すメッセージ表示を行います。
.Pp
.Nm
が、これとは異なるエラーメッセージ表示を行った場合には、
設定ファイルの記述の誤りを修正し、再度 
.Nm
を実行する必要があります。
コンフィギュレーションでエラーとなったシステムをコンパイルしようとしても、
おそらく失敗するでしょう。
.Pp
設定ファイル中に
オプション "INCLUDE_CONFIG_FILE" を指定した場合、
該ファイル全体が作成されるカーネルに埋め込まれます。
これは、
.Xr strings 1
によって該ファイルをカーネルから引き出す事が出来ることを意味します:
構成情報を抽出するには以下のコマンドを使用してください:
.Bd -literal
strings kernel | grep ___
.Ed
.Sh デバッグカーネル
.Dq デバッグ
カーネルをコンパイルすることはシステムにひどく負荷を掛けるため、
伝統的な BSD カーネルはシンボルを除いてコンパイルされてきました。
デバッグカーネルは全てのソースファイルの完全なシンボルを持っているため、
経験を積んだカーネルプログラマが問題の原因を解析できるようになります。
4.4BSD-Lite 以前からあったデバッガは通常のカーネルからはあまり情報を
見つけられませんでした;
.Xr gdb 1
は通常のカーネルからはほとんど情報を得ることはできず、
意義のある解析を行なうには、デバッグカーネルが必要です。
.Pp
歴史と時間、スペースの問題で、
.Fx
はデフォルトではデバッグカーネルを
構築しません。デバッグカーネルは構築に 30% 近く長く掛かり、
デバッグ用でないカーネルでは約 6 MB で済むところを、
構築用ディレクトリに約 30 MB のディスク容量を必要とします。
デバッグカーネルはデバッグ用でないカーネルが約 2MB であるのに対して、
約 11 MB のサイズになります。このスペースはルートファイルシステムと
動作時のメモリの両方に効いてきます。
デバッグカーネルを作るには
.Fl g
オプションを使います。このオプションを用いると、
.Nm
はカーネル構築ディレクトリに 2 つのファイルを構築します:
.Bl -bullet
.It
.Nm kernel.debug
が完全なデバッグカーネルです。
.It
.Nm kernel
はカーネルのデバッグシンボルを削除したコピーです。
このカーネルは通常のデバッグ用でないカーネルと同じ物です。
.El
.Pp
現在はデバッグカーネルをインストールしてブートする意義はあまりありません。
なぜならシンボルを利用できるツールはオンラインでは動かないためです。
それゆえ、デバッグカーネルをインストールするには 2 つのオプションがあります。
.Bl -bullet
.It
.Nm make
.Ar install
.Nm kernel
をルートファイルシステムにインストールします。
.It
.Nm make
.Ar install.debug
.Nm kernel.debug
をルートファイルシステムにインストールします。
.El
.Sh 関連ファイル
.Bl -tag -width /sys/i386/conf/Makefile.i386 -compact
.It Pa /sys/conf/files
システム生成に必要な共通のファイルのリスト
.It Pa /sys/i386/conf/Makefile.i386
.Tn i386
用の一般的な makefile
.It Pa /sys/i386/conf/files.i386
.Tn i386
特有のファイルのリスト
.It Pa /sys/i386/conf/files. Ns Em ERNIE
.Em ERNIE
システム特有のファイルのリスト
.It Pa /sys/compile/SYSTEM_NAME
.Pa SYSTEM_NAME
システム用のデフォルトカーネル構築ディレクトリ
.El
.Sh 関連項目
セクション 4 にある、デバイスのマニュアルの
.Sx 書式
の部分。
.Rs
.%T "Building 4.3 BSD UNIX System with Config"
.Re
.Sh バグ
エラーメッセージにおいて報告される行番号は1行ずれます。
.Sh 歴史
.Nm
コマンドは
.Bx 4.1
から登場しました。
