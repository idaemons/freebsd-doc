.\" Copyright (c) 1980, 1988, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)bad144.8	8.1 (Berkeley) 6/6/93
.\" jpman %Id: bad144.8,v 1.4 1997/08/28 12:10:14 horikawa Stab %
.\"
.Dd May 13, 1995
.Dt BAD144 8
.Os BSD 4
.Sh 名称
.Nm bad144
.Nd DEC スタンダード 144 形式のバッドセクタ情報を読み書きする
.Sh 書式
.Nm bad144
.Op Fl c
.Op Fl f
.Op Fl v
.Ar disk
.Oo
.Ar sno
.Op Ar bad ...
.Oc
.Nm bad144
.Fl a
.Op Fl c
.Op Fl f
.Op Fl v
.Ar disk
.Op Ar bad ...
.Nm bad144
.Op Fl s
.Op Fl v
.Ar disk
.Sh 解説
.Nm Bad144
は、バッドセクタの置きかえを実現するためにディスクドライバが使用する、
ディスク上の情報を調べるのに使えます。
.Pp
使用可能なオプション:
.Pp
.Bl -tag -width Ds
.It Fl a
既存のリストに追加したい、新しいバッドセクタからなる引数リスト。
ディスク上のリストは昇順にソートされている必要があるため、
新しいセクタは既存のリストとともにソートされます。
追加に対応するため、代替セクタの移動がおこなわれます。
新しい代替セクタはクリアされます。
.It Fl c
古いセクタから代替セクタへのコピーを試みます。
不安定なセクタを置きかえるために使えるでしょう。
.It Fl f
.Fl f
オプションは RP06, RM03, RM05, 富士通の Eagle, または Massbus 上の
.Tn SMD
ディスクにおいて、新しいバッドセクタを使用不可セクタとして
再フォーマットすることで「バッド」セクタとしてマークするために使えます。
このオプションは、そのセクタがまだバッドセクタとしてマークされていないか、
あるいはシステムが代替セクタを使うように指示されていない場合に必要です。
このオプションはマルチユーザモードでの動作中にも使うことができます。
フォーマット操作をおこなうためにシングルユーザモードに
移行する必要はなくなりました。
.It Fl s
ディスク全体をスキャンしてバッドブロックを探します。
.It Fl v
.Fl v
(verbose) が指定されると、処理過程の全体を詳細に表示します。
.El
.Pp
この情報のフォーマットは、
.Tn DEC
スタンダード 144 で以下のように定義されています。
バッドセクタ情報は、ディスクパックの最終トラックの最初の
偶数番号のセクタ五つに置かれます。
.Ar dkbad
構造体で記述される情報の、同一のコピーが五つあります。
.Pp
代替セクタはバッドセクタ情報の直前のセクタから始まり、
ディスクの先頭に向かって逆向きに割り当てられます。
最大で 126 個のバッドセクタがサポートされます。
対応する代替セクタは、バッドセクタテーブル中での
バッドセクタの位置から計算されます。
バッドセクタは昇順に並んでいなければなりません。
.Pp
バッドセクタ情報と代替セクタは、伝統的に
ディスクの ``c'' ファイルシステムパーティションを通してのみアクセス可能です。
もしも このパーティションをファイルシステムとして使用している場合、
それがバッドセクタ情報や代替セクタとオーバーラップしないことを
保証するのはユーザの責任です。
したがって、バッドセクタ代替機能を完全に使用するためには、
1 トラックと 126 セクタを予約しておかなければなりません。
.Pp
バッドセクタ構造体は以下のようになっています。
.Bd -literal
struct dkbad {
	long	bt_csn;		 /* カートリッジのシリアルナンバ */
	u_short	bt_mbz;		 /* 未使用; 0 であるべき */
	u_short	bt_flag;	 /* -1 => アラインメント カートリッジ */
	struct bt_bad {
	      u_short bt_cyl;    /* バッドセクタのシリンダ番号 */
	      u_short bt_trksec; /* トラック番号とセクタ番号 */
	} bt_bad[126];
};
.Ed
.Pp
配列
.Ar bt_bad
中の未使用のスロットは全ビットがセットされ、
不正な値として未使用であることを示しています。
.Pp
.Nm Bad144
はデバイス名 (例えば hk0, hp1, 等) を指定して実行します。
オプションの引数が指定されていない場合、指定されたディスクの最終トラックの
最初のセクタを読んで、バッドセクタ情報を出力します。
もしもバッドセクタ情報が破壊されていると、警告が表示されます。
ディスクパックのシリアル番号とバッドセクタのリストを与えて
.Nm Bad144
を呼び出すこともできます。
これは既存の情報にかわり、与えられた情報を
バッドセクタファイルのすべてのコピーに書き込みます。
しかし、この場合には
.Nm bad144
は指定されたセクタを bad としてマークしないことに注意してください。
この手続きは、破壊された既知のバッドセクタ情報を復旧するためだけに
使用するべきです。
.Pp
カーネルにドライブからバッドセクタを読み直させるために
リブートする必要はなくなりました。
.Sh 関連項目
.Xr badsect 8
.Sh バグ
.Tn UNIX
の動作中に、オンラインでディスクをフォーマットできるようにするべきです。
.Pp
すべてのタイプのドライブのバッドセクタをマークできるようにするべきです。
.Pp
11/750 (訳注: VAX のモデル名) では、システムのブートに使われる
標準のブートストラップドライバはバッドセクタ情報を理解しませんし、
.Tn ECC
エラーや RM80 タイプのディスクの特殊な
.Tn SSE
(スキップセクタ) エラーを処理しません。
これはブートのためにファイル
.Pa /kernel
を読んでいる時には、これらのエラーが起きてはならないということです。
また、ディスクドライブのセクタ 0-15 には、これらのいかなる障害も
存在してはいけません。
.Pp
クラッシュ後にディスクにシステムコアイメージを書くドライバは、
これらのエラーを処理しません。
したがって、クラッシュダンプエリアは これらのエラーもバッドセクタもない
状態でなければなりません。
.Sh 歴史
.Nm
コマンドは
.Bx 4.1
から現われました。
