.\" Copyright (c) 1996-1999 Whistle Communications, Inc.
.\" All rights reserved.
.\" 
.\" Subject to the following obligations and disclaimer of warranty, use and
.\" redistribution of this software, in source or object code forms, with or
.\" without modifications are expressly permitted by Whistle Communications;
.\" provided, however, that:
.\" 1. Any and all reproductions of the source or object code must include the
.\"    copyright notice above and the following disclaimer of warranties; and
.\" 2. No rights are granted, in any manner or form, to use Whistle
.\"    Communications, Inc. trademarks, including the mark "WHISTLE
.\"    COMMUNICATIONS" on advertising, endorsements, or otherwise except as
.\"    such appears in the above copyright notice or in the software.
.\" 
.\" THIS SOFTWARE IS BEING PROVIDED BY WHISTLE COMMUNICATIONS "AS IS", AND
.\" TO THE MAXIMUM EXTENT PERMITTED BY LAW, WHISTLE COMMUNICATIONS MAKES NO
.\" REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, REGARDING THIS SOFTWARE,
.\" INCLUDING WITHOUT LIMITATION, ANY AND ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.
.\" WHISTLE COMMUNICATIONS DOES NOT WARRANT, GUARANTEE, OR MAKE ANY
.\" REPRESENTATIONS REGARDING THE USE OF, OR THE RESULTS OF THE USE OF THIS
.\" SOFTWARE IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY OR OTHERWISE.
.\" IN NO EVENT SHALL WHISTLE COMMUNICATIONS BE LIABLE FOR ANY DAMAGES
.\" RESULTING FROM OR ARISING OUT OF ANY USE OF THIS SOFTWARE, INCLUDING
.\" WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
.\" PUNITIVE, OR CONSEQUENTIAL DAMAGES, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES, LOSS OF USE, DATA OR PROFITS, HOWEVER CAUSED AND UNDER ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF WHISTLE COMMUNICATIONS IS ADVISED OF THE POSSIBILITY
.\" OF SUCH DAMAGE.
.\" 
.\" Author: Archie Cobbs <archie@whistle.com>
.\"
.\" %FreeBSD: src/sys/modules/netgraph/async/ng_async.8,v 1.6 1999/12/21 01:25:05 julian Exp %
.\" $Whistle: ng_async.8,v 1.6 1999/01/25 23:46:25 archie Exp $
.\"
.\" jpman %Id: ng_async.8,v 1.3 1999/12/17 05:27:16 mitchy Stab %
.Dd January 19, 1999
.Dt NG_ASYNC 8
.Os FreeBSD
.Sh 名称
.Nm ng_async
.Nd 非同期フレーム化 netgraph ノードタイプ
.Sh 書式
.Fd #include <netgraph/ng_async.h>
.Sh 解説
.Nm async
ノードタイプは、RFC 1662 で PPP プロトコル用に定義されるように、
同期フレームと非同期フレームの間の変換を行います。
非同期フレーム化は、フラグバイトとオクテットの詰め物を使用し、
オクテット指向の非同期シリアル回線上で、
フレーム指向の接続をシミュレートします。
.Pp
本ノードは、
.Dv async
フック上で、非同期データを送受信します。
到着データの mbuf 境界は無視されます。
完全なパケットが受信されると、デコードが行われ、
フレーム化の全バイトが除去され、
単一フレームとして
.Dv sync
フックに送り出されます。
.Pp
同期フレームは
.Dv sync
フック上で送受信されます。
本フック上で受信されたパケットは非同期フレームとしてエンコードされ、
.Dv async
上に送り出されます。
受信パケットは、
アドレスと制御のフィールドから開始しているか、
アドレスと制御のフィールドが圧縮されている場合には
PPP プロトコルフィールドから開始しているはずであり、
チェックサムを持ちません。
最初の 4 バイトが
.Dv "0xff 0x03 0xc0 0x21"
(LCP プロトコルフレーム) の場合、
このフレームに対しては
完全な制御文字エスケープ化を行います
(PPP では、LCP パケットは常にアドレスと制御のフィールドを圧縮せず、
全ての制御文字がエスケープされ送出されます)。
.Pp
本ノードは、
.Dv async
上で送出されるパケットに対する
.Dq フラグ共有
をサポートします。
この最適化は、あるフレームの末尾のフラグバイトを
次のフレームの開始フラグバイトと共有するというものです。
フレーム間のフラグ共有は、送出アイドル時間を 1 秒以上過ぎると行われません。
.Sh フック
本ノードタイプは次のフックをサポートします:
.Pp
.Bl -tag -width foobar
.It Dv async
非同期接続。
典型的には、このフックは
.Xr ng_tty 8
ノードへ接続されます。
.Xr ng_tty 8
は、tty デバイス上のシリアルデータ転送を扱います。
.It Dv sync
同期接続。
このフックは同期フレームを送受信します。
PPP では、このフレームはアドレスと制御、プロトコルフィールドを含むはずですが、
チェックサムフィールドは含まないはずです。
典型的には、このフックは
.Xr ng_ppp 8
タイプノードの独立したリンクフックへ接続されます。
.El
.Sh 制御メッセージ
本ノードタイプは、汎用制御メッセージをサポートし、
更に次のものもサポートします:
.Bl -tag -width foo
.It Dv NGM_ASYNC_CMD_GET_STATS
本コマンドは
.Dv "struct ng_async_stat"
を返します。
これには、
パケットとオクテットとエラーの数に関するノードの統計情報が含まれます。
.It Dv NGM_ASYNC_CMD_CLR_STATS
ノードの統計情報をクリアします。
.It Dv NGM_ASYNC_CMD_SET_CONFIG
ノード構成を設定します。これは次の
.Dv "struct ng_async_cfg"
で記述します:
.Bd -literal -offset 4n
struct ng_async_cfg {
  u_char    enabled;  /* エンコーディングのオン/オフ */
  u_int16_t amru;     /* 最大受信非同期フレーム長 */
  u_int16_t smru;     /* 最大受信同期フレーム長 */
  u_int32_t accm;     /* ACCM エンコーディング */
};
.Ed
.Pp
.Dv enabled
フィールドは、
すべてのエンコード/デコードの機能の有効化または無効化を行います
(デフォルトは無効)。
無効時には、ノードは単純
.Dq 通過
モードで動作します。
.Dv amru
および
.Dv smru
のフィールドは、それぞれ同期および非同期の MRU (最大受信単位) 値です。
どちらもデフォルト値は 1600 です。
非同期 MRU は、
非同期のデコード処理後の入力フレーム長に適用されることに注意してください。
.Dv accm
フィールド
は非同期文字制御マップ (asynchronous character control map) であり、
文字 0x00 から 0x1f の文字のエスケープを制御します 
(デフォルト値は 0xffffffff)。
.It Dv NGM_ASYNC_CMD_GET_CONFIG
本コマンドは、現在の設定の構造体を返します。
.El
.Sh シャットダウン
本ノードは、
.Dv NGM_SHUTDOWN
制御メッセージの受信時か、全フックが切断されたときに、シャットダウンします。
.Sh 関連項目
.Xr netgraph 4 ,
.Xr ng_ppp 8 ,
.Xr ng_tty 8 ,
.Xr ngctl 8
.Rs
.%A W. Simpson
.%T "PPP in HDLC-link Framing"
.%O RFC 1662
.Re
.Rs
.%A W. Simpson
.%T "The Point-to-Point Protocol (PPP)"
.%O RFC 1661
.Re
.Sh 歴史
.Nm
ノードタイプは
.Fx 4.0
で実装されました。
.Sh 作者
.An Archie Cobbs Aq archie@whistle.com
