.\" Copyright (c) 1996 John Birrell <jb@cimlogic.com.au>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by John Birrell.
.\" 4. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY JOHN BIRRELL AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 4, 1996
.Dt PTHREAD_KEY_DELETE 3
.Os BSD 4
.Sh 名称
.Nm pthread_key_delete
.Nd スレッドに固有なデータキーの削除
.Sh 書式
.Fd #include <pthread.h>
.Ft int
.Fn pthread_key_delete "pthread_key_t key"
.Sh 解説
.Fn pthread_key_delete
関数は、
.Fn pthread_key_create
で以前に戻された、スレッドに固有なデータキーを削除します。
.Fa key
に関連する、スレッドに固有なデータ値は、
.Fn pthread_key_delete
を呼び出す時点で
NULL
になっている必要はありません。アプリケーションの記憶域の解放、
削除されるキーに関係のあるデータ構造や任意のスレッドでの関連する
スレッド固有データのクリーンアップアクションの実行は、
アプリケーションで行なってください。このクリーンアップは、
.Fn pthread_key_delete
の呼び出しの前後で実行できます。
.Fn pthread_key_delete
を呼び出した後で
.Fa key
を使用しようとすると、結果は不定になります。
.Pp
.Fn pthread_key_delete
関数は、破壊関数から呼び出されることがあります。
.Fn pthread_key_delete
が破壊関数を呼び出すことはありません。
.Fa key
に関連していた破壊関数は、スレッドの終了時に呼び出されません。
.Sh 戻り値
問題がない場合、
.Fn pthread_key_delete
関数は
0
を戻します。問題がある場合は、そのエラーを示すエラー番号を戻します。
.Sh エラー
.Fn pthread_key_delete
は、以下のような場合にエラーとなります。
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa key
の値が正しくない場合
.El
.Pp
.Sh 関連項目
.Xr pthread_getspecific 3 ,
.Xr pthread_key_create 3 ,
.Xr pthread_setspecific 3
.Sh 規格
.Fn pthread_key_delete
は、
ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12
に準拠しています。
