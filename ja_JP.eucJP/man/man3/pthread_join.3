.\" Copyright (c) 1996-1998 John Birrell <jb@cimlogic.com.au>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by John Birrell.
.\" 4. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY JOHN BIRRELL AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 4, 1996
.Dt PTHREAD_JOIN 3
.Os BSD 4
.Sh 名称
.Nm pthread_join
.Nd スレッドの終了を待機
.Sh 書式
.Fd #include <pthread.h>
.Ft int
.Fn pthread_join "pthread_t thread" "void **value_ptr"
.Sh 解説
.Fn pthread_join
関数は、
.Fa thread
が終了していない場合、
.Fa thread
が終了するまで呼び出しスレッドの実行を保留します。
.Pp
非
NULL
な
.Fa value_ptr
引数での
.Fn pthread_join
の呼び出しから正常に復帰すると、終了するスレッドが
.Fn pthread_exit
に渡した値は
.Fa value_ptr
が参照する場所に保存されます。
.Fn pthread_join
が正常に復帰する場合、対象スレッドは終了しています。
同じ対象スレッドを指定して
.Fn pthread_join
を同時に複数回呼び出す結果は未定義です。
.Fn pthread_join
を呼び出したスレッドがキャンセルされた場合、
対象スレッドは切り離されません。
.Pp
終了したが結合していないスレッドは、
[_POSIX_THREAD_THREADS_MAX]
にカウントされます。
.Pp
.Sh 戻り値
問題がない場合、
.Fn pthread_join
関数は
0
を戻します。問題がある場合は、そのエラーを示すエラー番号を戻します。
.Sh エラー
.Fn pthread_join
は、以下のような場合にエラーとなります。
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa thread
で指定された値が、結合可能スレッドを参照していないことを
実装が検出した場合
.It Bq Er ESRCH
指定されたスレッド
ID
.Fa thread
に対応するスレッドが見つからない場合
.It Bq Er EDEADLK
デッドロックが検出された場合、または
.Fa thread
の値が呼び出しスレッドを指定している場合
.El
.Pp
.Sh 関連項目
.Xr wait 2 ,
.Xr pthread_create 3
.Sh 規格
.Fn pthread_join
は、
ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12
に準拠しています。
