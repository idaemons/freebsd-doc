.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)find.1	8.7 (Berkeley) 5/9/95
.\" %FreeBSD: src/usr.bin/find/find.1,v 1.23.2.12 2001/08/31 15:56:48 ru Exp %
.\"
.\" $FreeBSD: doc/ja_JP.eucJP/man/man1/find.1,v 1.24 2001/07/22 23:09:20 horikawa Exp $
.Dd May 3, 2001
.Dt FIND 1
.Os
.Sh 名称
.Nm find
.Nd ディレクトリツリーを再帰的に下ってファイルを捜す
.Sh 書式
.Nm find
.Op Fl H | Fl L | Fl P
.Op Fl EXdsx
.Op Fl f Ar pathname
.Op Ar pathname ...
.Ar expression
.Sh 解説
.Nm
は、
.Ar pathname
に対してディレクトリツリーを再帰的に下って、
ツリー上の各ファイルについて
.Ar expression
(後に示す
.Dq プライマリ
と
.Dq 演算子
から構成されます)
で指定された処理を実行します。
.Pp
オプションとしては以下のものがあります:
.Bl -tag -width indent
.It Fl E
.Ic -regex
および
.Ic -iregex
のオプションの後の正規表現を、
基本正規表現 (BRE) の代りに拡張 (最近の) 正規表現として解釈します。
.Xr re_format 7
マニュアルページは、両方のフォーマットを完全に解説しています。
.It Fl H
.Ar file
で指定したファイルがシンボリックリンクファイルだった場合、シンボリックリンク
自体ではなく、リンク先のファイルに関してファイル情報とファイルタイプ (
.Xr stat 2
参照) を使って
.Ar expression
の処理をするように指定します。
もしリンク先のファイルがなければ、
シンボリックリンク自体を処理の対象とします。
コマンドラインからの
.Ar file
で直接指定されたのではなく、
ディレクトリツリー上で見つかったシンボリックリンクファイルに関しては、
シンボリックリンク自体を処理の対象とします。
.It Fl L
.Ar file
で指定したファイルがシンボリックリンクファイルだった場合、シンボリックリンク
自体ではなく、リンク先のファイルに関してファイル情報とファイルタイプ (
.Xr stat 2
参照) を使って
.Ar expression
の処理をするように指定します。もしリンク先のファイルがな
ければ、シンボリックリンク自体を処理の対象とします。
.It Fl P
シンボリックリンク自体に関して
ファイル情報とファイルタイプ (
.Xr stat 2
参照) を使って
.Ar expression
の処理をするように指定します。
これがデフォルトです。
.It Fl X
.Xr xargs 1
と組み合わせて使うときのため、より安全に動作するようにします。もし
.Xr xargs 1
によりデリミタ文字 (シングルクォート
.Pq Dq Li " ' "
、ダブルクォート
.Pq Dq Li " \*q "
、バックスラッシュ
.Pq Dq Li \e
、スペース、タブ、改行)
が含まれるファイル名
が使われた場合、診断メッセージを標準エラー出力に表示して、
そのファイル名をスキップします。
.It Fl d
ファイルに対する処理順序を深さ優先の探索方式にします。
すなわち、ディレクトリ自体に
対する処理を行う前に、ディレクトリ内の個々のファイルに対して処理を
実行します。デフォルトでは、ディレクトリは最初に処理されます。
(デフォルトの方式は幅優先探索方式では
.Em ない
です。)
.It Fl f Ar file
明示的にファイルを指定します。ファイル名の先頭が
.Dq \-
で始まっていたり、
あとで述べる
.Ar expression
の指定と混同してしまうようなファイル名を指定したりするときに使用します。
(ファイルはオプション直後のオペランドとしても指定可能です。)
.It Fl s
.Fl s
オプションは、辞書編集上の順に、
すなわち各ディレクトリ内においてアルファベット順に、
ファイル階層を
.Nm
に辿らせます。
注:
.Ql find -s
と
.Ql "find | sort"
は異なった結果となる場合があります。
.It Fl x
ディレクトリツリーを下って行くとき、最初に file のあったファイルシステムとは
異なるファイルシステム上のファイルに対する処理になる場合は、実行しないように
します。
.El
.Sh プライマリ
.Bl -tag -width indent
.It Ic -amin Ar n
最後にファイルがアクセスされた時刻と、
.Nm
を起動した時刻との差 (1 分単位で切り上げます) が
.Ar n
分であれば、真とします。
.It Ic -anewer Ar file
.Ic -neweram
と同じです。
.It Ic -atime Ar n
最後にファイルがアクセスされた時刻と、
.Nm
を起動した時刻との差 (24 時間単位で切り上げます) が
.Ar n
日であれば、真とします。
.It Ic -cnewer Ar file
.Ic -newercm
と同じです。
.It Ic -ctime Ar n
最後にファイルのステータスが変更された時刻と、
.Nm
を起動した時刻の差 (24 時間単位で切り上げます) が
.Ar n
日であれば、真とします。
.It Ic -delete
見付けたファイルやディレクトリを消去します。常に真を返します。
現在の作業ディレクトリから
.Nm
は再帰的にディレクトリツリーを下ります。
セキュリティ上の理由から、
.Dq Pa \&.
からの相対パス名に
.Dq Pa /
文字を含むファイル名のファイルを
消去しようとはしません。
このオプションにより暗示的に深さ優先の処理が指定されます。
.It Ic -empty
現在のファイルまたはディレクトリが空の場合、真となります。
.It Ic -exec Ar utility Op Ar argument ... ;
.Ar utility
で指定した名前のプログラムを実行し、終了コードが 0
の場合、真とします。
.Ar argument
は、utility への引数として渡されます。
この指定は、最後に必ずセミコロン
.Pq Dq Li \&;
をつけてください。
utility もしくは argument の指定
のなかで
.Dq Li {}
が使われていた場合は、その部分が、現在
.Nm
が対象としているファイルのパス名に置き換えられます。ただし、
.Ar utility
が実行されるときのカレントディレクトリは、
.Nm
が起動されたディレクトリのままです。
.Ar utility
と
.Ar arguments
は、シェルのパターンと構造の更なる展開対象とはなりません。
.It Ic -execdir Ar utility Op Ar argument ... ;
.Ic -execdir
プライマリは
.Ic -exec
プライマリと同様ですが、
.Ar utility
が現在のファイルを持つディレクトリにおいて実行される点が異なります。
文字列
.Dq Li {}
に対して置換されるファイル名は適切ではありません。
.It Ic -flags Op Fl Ns Ar flags
このプライマリは、ファイルのフラグが指定された
.Ar flags
と完全に同じに設定されている場合 (ダッシュ
.Pq Dq Li -
が前に付かない場合) か、
指定されたフラグにマッチする場合 (ダッシュが前に付く場合) に真になります。
.Ar flags
はシンボル名 (
.Xr chflags 1
参照) で指定可能です。
これは、設定されたフラグの指定のみを許す
.Ic -perm
とは違うことに注意してください。
.It Ic -fstype Ar type
対象ファイルが格納されているファイルシステムのタイプが、
.Ar type
で指定されたものである場合に真となります。
.Xr sysctl 8
コマンドを使用して、
システム上で利用可能なファイルシステムタイプを調べることができます:
.Pp
.Dl "sysctl vfs"
.Pp
さらに、2 つの 擬似タイプ
.Dq Li local
と
.Dq Li rdonly
があります。
前者は、
.Nm
を実行しているシステム上に物理的にマウントされているファイルシステムです。
後者は、読み取り専用でマウントされているファイルシステムです。
.It Ic -group Ar gname
ファイルが
.Ar gname
で指定したグループに属している場合、真になります。
.Ar gname
が数字で、そのようなグループ名がない場合は、
.Ar gname
をグループ ID として扱います。
.It Ic -iname Ar pattern
.Ic -name
に似ていますが、大文字小文字を区別せずにマッチします。
.It Ic -inum Ar n
ファイルの i ノード番号が
.Ar n
なら、真になります。
.It Ic -ipath Ar pattern
.Ic -path
に似ていますが、大文字小文字を区別せずにマッチします。
.It Ic -iregex Ar pattern
.Ic -regex
に似ていますが、大文字小文字を区別せずにマッチします。
.It Ic -links Ar n
ファイルのリンク数が
.Ar n
なら、真になります。
.It Ic -ls
このプライマリは常に真になります。対象となっているファイルの情報を
標準出力に出力します。出力する内容は i ノード番号、
512 バイトブロックでのファイルの大きさ、
ファイルのパーミッション、ハードリンクの数、所有者、グループ、
バイトで表したファイルの大きさ、最後にファイルが修正された時刻、パス名です。
ファイルがブロック型もしくはキャラクタ型の特殊ファイルならば、
バイトで表したファイルの大きさの代わりにメジャー番号とマイナー番号を
出力します。ファイルがシンボリックリンクならば、
.Dq Li ->
の後にリンク先のファイルのパス名を表示します。
フォーマットは
.Bk -words
.Nm ls Fl dgils
.Ek
の出力結果と同じです。
.It Ic -maxdepth Ar n
現在のファイルのツリーにおける深さが
.Ar n
以下である場合、真になります。
.It Ic -mindepth Ar n
現在のファイルのツリーにおける深さが
.Ar n
以上である場合、真になります。
.It Ic -mmin Ar n
最後にファイルが修正された時刻と、
.Nm
を起動した時刻との差 (1 分単位で切り上げます) が
.Ar n
分であれば、真とします。
.It Ic -mnewer Ar file
.Ic -newer
と同じです。
.It Ic -mtime Ar n
最後にファイルが修正された時刻と、
.Nm
を起動した時刻との差(24 時間単位で切り上げます)が
.Ar n
日であれば、真とします。
.It Ic -name Ar pattern
対象ファイルのパス名の最後のファイル名部分が
.Ar pattern
で指定したものとマッチするかどうかを調べ、マッチした場合は真になります。
.Ar pattern
としては、シェルで使われるパターンマッチ
指定 (
.Dq Li \&[ ,
.Dq Li \&] ,
.Dq Li * ,
.Dq Li \&? )
を使用することができます。これらの文字は
バックスラッシュ
.Pq Dq Li \e
を前において、パターンマッチ指定ではなく文字として
扱う事を明示することができます。
.It Ic -newer Ar file
対象ファイルの修正日付が、
.Ar file
で指定したファイルのものより新しい場合は、真になります。
.It Ic -newer Ns Ar X Ns Ar Y Ar file
現在のファイルの最終アクセス時刻
.Ar ( X Ns = Ns Cm a )
・ステータス修正時刻
.Ar ( X Ns = Ns Cm c )
・内容修正時刻
.Ar ( X Ns = Ns Cm m )
が、
.Ar file
の最終アクセス時刻
.Ar ( Y Ns = Ns Cm a )
・ステータス修正時刻
.Ar ( Y Ns = Ns Cm c )
・内容修正時刻
.Ar ( Y Ns = Ns Cm m )
より新しい場合は、真となります。
さらに
.Ar Y Ns = Ns Cm t
の場合、
.Ar file
は代りに、
.Xr cvs 1
が理解する直接的な時刻指定として解釈されます。
.Ic -newermm
は
.Ic -newer
と同じであることに注意してください。
.It Ic -nogroup
対象ファイルのグループが unknown の場合、真になります。
.It Ic -nouser
対象ファイルの所有者が unknown の場合、真になります。
.It Ic -ok Ar utility Op Ar argument ... ;
.Ic -ok
プライマリは
.Ic exec
とほぼ同じですが、
.Ar utility
を実行するかどうかの確認をユーザに求め、端末にメッセージを出力します。
.Dq Li y
以外の返答をした場合は、
コマンドは実行されず、
.Ic -ok
式の値は偽になります。
.It Ic -okdir Ar utility Op Ar argument ... ;
.Ic -okdir
プライマリは、
.Ic -execdir
プライマリと同様ですが、
.Ic -ok
プライマリの解説に該当する部分が異なります。
.It Ic -path Ar pattern
対象ファイルのパス名が、
.Ar pattern
で指定したものとマッチす
るかどうかを調べます、マッチした場合は真になります。
.Ar pattern
としては、シェルで使われるパターンマッチ指定 (
.Dq Li \&[ ,
.Dq Li \&] ,
.Dq Li * ,
.Dq Li \&? )
を使用することができます。これらの文字は
バックスラッシュ
.Pq Dq Li \e
を前において、パターンマッチ指定ではなく文字として
扱う事を明示することができます。
.Pq Dq Li /
は、そのままパスのディレクトリの区切りにマッチします。
.\" .It Ic -perm Oo Fl Oc Ns Ar mode
.\" ja-groff-0.100_3 で整形できないためマクロ使用方法を変えています
.\" 2001/05/25 horikawa@jp.FreeBSD.org
.It Xo
.Ic -perm
.Oo Fl Oc Ns Ar mode
.Xc
ファイルのモードを、
.Ar mode
と比較します。
.Ar mode
は、シンボル
形式 (
.Xr chmod 1
参照) もしくは 8 進数形式で指定します。シンボル形式の場合は、
00000 から開始してパーミッションのセットとクリアを行います。
(プロセスのファイル生成マスクとは無関係です。)
8 進数形式の場合は、
ファイルのモードビットのうち、07777
.\" .Pq Dv S_ISUID | S_ISGID | S_ISTXT | S_IRWXU | S_IRWXG | S_IRWXO
.\" ja-groff-0.100_3 で整形できないためマクロ使用方法を変えています
.\" 2001/05/25 horikawa@jp.FreeBSD.org
.Pf ( Dv S_ISUID
|
.Dv S_ISGID
|
.Dv S_ISTXT
|
.Dv S_IRWXU
|
.Dv S_IRWXG
|
.Dv S_IRWXO )
の部分が比較対象になります。
.Ar mode
の最初にダッシュ
.Pq Dq Li -
を指定した場合は、
.Ar mode
でセットされているすべてのビットが
ファイルのモードでもセットされていれば、このプライマリは真となります。
.Ar mode
の最初にプラス
.Pq Dq Li +
を指定した場合は、
.Ar mode
でセットされているビットのどれかがファイルのモードでもセットされていれば、
このプライマリは真となります。
どちらでもない場合、ファイルのモードと
.Ar mode
が完全に一致した場合にのみ真となります。
なお、
シンボル形式でモード指定をする場合は、少なくとも最初がダッシュ
.Pq Dq Li -
にならない
ようにする必要があります。
.It Ic -print
このプライマリは常に真になります。
対象となっているファイルのパス名を標準出力に出力して改行します。
.Ic -exec , -ls , -print0 ,
.Ic -ok
のどのプライマリも指定されなかった場合は、
与えられた式 given expression は
.Cm \&( Ar "given expression" Cm \&) Ic -print
で置き換えられます。
.It Ic -print0
.Ic -print
とほぼ同じですが、標準出力に対象となっているファイルのパス名を出力
したあと、改行ではなく、
.Tn ASCII NUL
文字 (文字コード 0) を出力します。
.It Ic -prune
このプライマリは常に真になります。
対象となっているファイル配下のディレクトリに下りないようにします。
.Fl d
オプションが指定されている場合は、
.Ic -prune
の指定は無効になります。
.It Ic -regex Ar pattern
ファイルのパス全体が、正規表現
.Ar pattern
にマッチする場合、真になります。
ファイル名
.Dq Pa ./foo/xyzzy
にマッチさせるには、
正規表現
.Dq Li ".*/[xyz]*"
や
.Dq Li ".*/foo/.*"
が使えますが、
.Dq Li xyzzy
や
.Dq Li /foo/
は使えません。
.It Ic -size Ar n Ns Op Cm c
ファイルサイズを 512 バイトのブロック単位で数えたとき (端数は切り上げ)、
.Ar n
ブロックであれば真になります。
.Ar n
のあとに
.Cm c
が指定されていた場合は、ファイルサイズが
.Ar n
バイト (文字) であれば真になります。
.It Ic -type Ar t
ファイルタイプが
.Ar t
で指定されたタイプに一致すれば真になります。
タイプとして、次のような指定が可能です:
.Pp
.Bl -tag -width indent -compact
.\" jpman project では special file を「特殊ファイル」と訳している。
.\" これにあわせて block special を「ブロックスペシャル」ではなく
.\" 「ブロック特殊」とするのは違和感があるので、「ファイル」を補った。
.\" Kazuo Horikawa 1999/03/10
.It Cm b
ブロック型特殊ファイル
.It Cm c
キャラクタ型特殊ファイル
.It Cm d
ディレクトリ
.It Cm f
普通のファイル
.It Cm l
シンボリックリンク
.It Cm p
FIFO
.It Cm s
ソケット
.El
.It Ic -user Ar uname
ファイルの所有者が、
.Ar uname
で指定されたユーザと一致すれば真になります。もし
.Ar uname
が数字で、そのようなユーザ名がなければ、
ユーザ ID が指定されたものとして扱います。
.El
.Pp
なお、数字を引数にとるプライマリは、
数字の前にプラス
.Pq Dq Li +
およびマイナス
.Pq Dq Li \-
をつけることができます。
それぞれ
.Dq n より大
および
.Dq n より小
の意味になり、
.Dq 正確に n
という意味ではなくなります。
.Sh 演算子
以下の演算子を使って、プライマリを組み合わせることができます。
演算子は優先度が下がる順番で示されています。
.Pp
.Bl -tag -width "( expression )" -compact
.It Cm \&( Ar expression Cm \&)
もし、括弧内の
.Ar expression
が真なら、真になります。
.Pp
.It Cm \&! Ar expression
単項否定演算子 (
.Tn NOT
) です。
.Ar expression
が偽なら、真となります。
.Pp
.It Ar expression1 Cm -and Ar expression2
.It Ar expression1 expression2
論理積 (
.Tn AND
) 演算子です。
.Ar expression1
と
.Ar expression2
の両方とも真のとき、真になります。
もし
.Ar expression1
が偽なら、
.Ar expression2
は実行されません。
.Ic -and
を書かずに、単に 2 つの expression を並べて
.Pp
.Ar expression1 expression2
.Pp
と書いても同じです。
.Pp
.It Ar expression1 Cm -or Ar expression2
論理和 (
.Tn OR
) 演算子です。
.Ar expression1
か
.Ar expression2
のどちらか一方でも真であれば、真になります。もし
.Ar expression1
が真なら、
.Ar expression2
は実行されません。
.El
.Sh 使用例
コマンドラインからのタイプ例です。
.Bl -tag -width indent
.It Li "find / \e! -name \*q*.c\*q -print"
ファイル名の終わりが
.Pa \&.c
でない全ファイルを表示します。
.It Li "find / -newer ttt -user wnj -print"
.Pa ttt
というファイルより新しく
所有者が
.Dq wnj
である全ファイルを表示します。
.It Li "find / \e! \e( -newer ttt -user wnj \e) -print"
.Pa ttt
というファイルより古く所有者が
.Dq wnj
であるという条件が成立しない、全ファイルを表示します。
.It Li "find / \e( -newer ttt -or -user wnj \e) -print"
.Pa ttt
というファイルより新しいか、
所有者が
.Dq wnj
である、全ファイルを表示します。
.It Li "find . -newerct '1 minute ago' -print"
inode 修正時刻が現在から 1 分以内の全ファイルを表示します。
.El
.Sh 関連項目
.Xr chflags 1 ,
.Xr chmod 1 ,
.Xr cvs 1 ,
.Xr locate 1 ,
.Xr whereis 1 ,
.Xr which 1 ,
.Xr stat 2 ,
.Xr fts 3 ,
.Xr getgrent 3 ,
.Xr getpwent 3 ,
.Xr strmode 3 ,
.Xr re_format 7 ,
.Xr symlink 7
.Sh 規格
.Nm
ユーティリティの文法は
.St -p1003.2
の仕様で決められた文法のスーパセットです。
全 1 文字オプションと
.\" .Ic -iname , -inum , -iregex , -print0 , -delete , -ls ,
.\" ja-groff-0.100_3 で整形できないためマクロ使用方法を変えています
.Ic -iname ,
.Ic -inum ,
.Ic -print0 ,
.Ic -delete ,
.Ic -ls ,
.Ic -regex
のプライマリは
.St -p1003.2
の拡張です。
.Pp
昔は
.Fl d , h , x
のオプションは
それぞれ
.Ic -depth , -follow , -xdev
のプライマリを
用いて実装されていました。
これらのプライマリは常に真に評価されていました。
これらのプライマリは
探索が始まる前に効果を与える本当のグローバル変数であったので、
いくつかの合法的な expression が予期しない結果となりました。
一例として
.Ic -print Cm -o Ic -depth
の expression があります。
.Ic -print
が常に真に評価されるため
標準の評価の順番では
.Ic -depth
は決して評価されないはずですが、
そうではありませんでした。
.Pp
演算子の
.Cm -or
は
.Cm -o
として実装されていました。
演算子の
.Cm -and
は
.Cm -a
として実装されていました。
.Pp
昔の実装では
.Ic exec
と
.Ic -ok
のプライマリでは、
tility 名やその引数中において、
空白以外の文字が前後に続く
.Dq Li {}
を置き換えませんでした。
このバージョンでは utility 名やその引数のどの場所に
.Dq Li {}
が現れても
置き換えます。
.Pp
.Fl E
オプションは、
.Xr grep 1
および
.Xr sed 1
の類推から実装されました。
.Sh バグ
.Nm
によって使われる特殊文字は多くのシェルにとっても
特殊文字です。
特に
.Dq Li * ,
.Dq Li \&[ ,
.Dq Li \&] ,
.Dq Li \&? ,
.Dq Li \&( ,
.Dq Li \&) ,
.Dq Li \&! ,
.Dq Li \e ,
.Dq Li \&;
は、
シェルからエスケープされなくてはならないでしょう。
.Pp
オプションとファイル名との間および
ファイル名と
.Ar expression
との間を区切るデリミタが存在しませんので、
ファイル名にオプションと間違えるようなもの (
.Pa -xdev
のようなもの) や、
.Ar expression
と間違えるようなもの (
.Pa \&!
のようなもの) を指定することは難しいです。
このようなファイル名を指定する場合は
.Fl f
オプションを使うか、
.Xr getopt 3
で使われるオプション指定の終了記号
.Dq Fl Fl
を使用します。
.Pp
.Ic -delete
プライマリは、ファイルシステムツリーの検索順序に影響する
他のオプションとは十分には連係しません。
.Sh 歴史
.Nm
コマンドは
.At v1
から登場しました。
