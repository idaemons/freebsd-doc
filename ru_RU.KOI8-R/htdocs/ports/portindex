#!/usr/bin/perl

# convert a ports INDEX file to HTML
#
# by John Fieber <jfieber@freebsd.org>
# Mon May 13 10:31:58 EST 1996

#
# The FreeBSD Russian Documentation Project
#
# $FreeBSD$
# $FreeBSDru: frdp/www/ru/ports/portindex,v 1.14 2004/03/23 21:10:07 phantom Exp $
#
# Original revision: 1.49
#

############################################################

# Load local config file. You can override in portindex.conf
# the variables for the default web and the ftp server. This
# make it easy to maintain a local web mirror and let the
# URL point to yourself and not to the standard FreeBSD FTP server.
$config = $0 . '.' . 'conf';
do $config if -f $config;

# This is the base of where we ftp stuff from
if ($ENV{'MASTER_FTP_SERVER'}) {
    $ftpserver = $ENV{'MASTER_FTP_SERVER'};
} else {
    $ftpserver = 'ftp://ftp.FreeBSD.org' if !$ftpserver;
}
$base = "" if !$base;
$baseHTTP = $base if !$baseHTTP;
$baseFTP = "$ftpserver/pub/FreeBSD/ports/ports";
$baseCVSWEB = 'http://www.FreeBSD.org/cgi/cvsweb.cgi/';
$urlcgi = 'http://www.freebsd.org/cgi/url.cgi' if !$urlcgi;
$packagesURL = "$ftpserver/pub/FreeBSD/ports/i386/packages-stable/All/"
    if !$packagesURL;
# support tar on the fly or gzip'ed tar on the fly
$ftparchive = '';
$ftparchive = 'tar' if !defined $ftparchive;


# ports download sources script
$pds = 'http://www.FreeBSD.org/cgi/pds.cgi';

# better layout and link to the sources
if ($urlcgi) {
    $baseHTTP = $urlcgi . '?' . $baseHTTP;
}

$today = &getdate;

&packages_exist('packages.exists', *packages);
&category_description(($ARGV[1] || '.') . '/categories', *category_description);
&main;

sub getdate {
    @months = ("Января", "Февраля", "Марта", "Апреля", "Мая","Июня",
	       "Июля", "Августа", "Сентября", "Октября", "Ноября", "Декабря");
    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
    $year += 1900;
    return "$mday $months[$mon], $year";
}

sub header {
    local ($fh, $htext) = @_;
    print $fh "<?xml version=\"1.0\" encoding=\"koi8-r\"?>\n";
    print $fh "<!DOCTYPE html PUBLIC \"-//FreeBSD//DTD XHTML 1.0 Transitional-Based Extension//EN\"\n";
    print $fh "\"http://www.FreeBSD.org/XML/doc/share/xml/xhtml10-freebsd.dtd\" [\n";
    print $fh "<!ENTITY base '..'>\n";
    print $fh "<!ENTITY blurb  SYSTEM \"ports.inc\">\n";
    print $fh "<!ENTITY % navinclude.ports \"INCLUDE\">\n";
    print $fh "<!ENTITY email 'ports'>\n";
    print $fh "]>\n";

    print $fh "<html xmlns=\"http://www.w3.org/1999/xhtml\">";
    print $fh "<head><title>$htext</title>";
    print $fh "<cvs:keyword xmlns:cvs=\"http://www.FreeBSD.org/XML/CVS\">x x x $today x x x</cvs:keyword>";
    print $fh "</head>";

    print $fh "<body class=\"navinclude.about\">";
}

sub footer {
    local ($fh, $ftext) = @_;
    print $fh "\n$ftext\n";
    print $fh "</body>\n</html>\n";
}

sub packages_exist {
    local($file, *p) = @_;

    open(P, $file) || do {
	warn "open $file: $!\n";
	warn "Cannot create packages links\n";
	return 1;
    };

    while(<P>) {
	chop;
	$p{$_} = 1;
    }
    close P;
    return 0;
}

sub category_description {
    local($file, *p) = @_;

    open(P, $file) || do {
	warn "open $file: $!\n";
	warn "Cannot find category description\n";
	return 1;
    };

    local($category, $description);
    while(<P>) {
	# ignore comments
	next if /^\s*#/;

       ($category, $description) = /^\s*"([^"]+)",\s*"([^"]+)/;
	$p{$category} = $description;
    }
    close P;
    return 0;
}

sub main {

    $sep = "<b>:</b>";

    open(INDEX, $ARGV[0]);
    while (<INDEX>) {
	chop;
	s/&/&amp;/g;
    	s/</&lt;/g;
    	s/>/&gt;/g;

    	# Read a record
	($name, $loc, $prefix, $desc, $ldesc, $owner, $cats, 
	    $bdep, $rdep, $www) = split('\|');

	# Check for double hyphens in the name (--).
	$name =~ s/--/-/g;

    	# Split the categories into an array
	@cat = split("[ \t]+", $cats);

    	$catkey{$name} = $cat[0];

	local($sourcepath) = $loc;
	$sourcepath =~ s%/usr/%%;

	foreach $i (@cat) {

	    $stats{$i}++;

    	    # figure out the FTP url
	    $loc =~ s/\/usr\//$baseCVSWEB/;
	    $ldesc =~ s/\/usr/$baseHTTP/;

    	    # The name description and maintainer
	    $name =~ s/,.*//g;
	    $name =~ s/\++//g;
	    $data{$i} .= "<dt><b><a name=\"$name\"></a><a href=\"$loc$ftparchive\">$name</a></b></dt>";
     

	    $data{$i} .= "<dd>$desc<br/><a href=\"$ldesc\">Полное описание</a>";
	    if ($packages{"$name.tbz"}) { 
		$data{$i} .= qq{ | <a href="$packagesURL$name.tbz">Пакет</a>};
	    } elsif ($packages{"$name.tgz"}) { 
		$data{$i} .= qq{ | <a href="$packagesURL$name.tgz">Пакет</a>};
	    }

	    $data{$i} .= qq{ | <a href="$pds?$sourcepath">Исходные тексты</a>};

            if ($www ne "") {
		$data{$i} .= qq{ | <a href="$www">Основной Web сайт</a>};
            }

    	    $ownerurl = $owner;
    	    $ownerurl =~ s/&lt;/</g;
    	    $owenrurl =~ s/&gt;/>/g;
	    $data{$i} .= 
		"<br/><i>Поддержкой занимается:</i> <a href=\"mailto:$ownerurl\">$owner</a>";

    	    # If there are any dependencies, list them
    	    if ($bdep ne "" || $rdep ne "") {
    	    	$data{$i} .= "<br/><i>Требует:</i> ";
    	    	@dep = split(/ /, "$bdep $rdep");
		local($last) = '';
    	    	foreach $j (sort @dep) {
		    next if $j eq $last;
		    $last = $j;
    	    	    $data{$i} .= " <a href=\"##$j##.html#$j\">$j</a>,";
    	    	}
    	    	# remove the trailing comma
    	    	chop $data{$i};
    	    }

    	    # If the port is listed in more than one category, throw
    	    # in some cross references
    	    if ($#cat > 0) {
    	    	$data{$i} .= "<br/><em>Также присутствует в:</em> ";
    	    	foreach $j (@cat) {
    	    	    if ($j ne $i) {
			if ($j eq $cat[0]) {
			    $data{$i} .= " <strong><a href=\"$j.html#$name\">\u$j</a></strong>,";
			}
			else {
			    $data{$i} .= " <a href=\"$j.html#$name\">\u$j</a>,";
			}
    	    	    }
    	    	}
    	    	# remove the trailing comma
    	    	chop($data{$i});
    	    }
    	    $data{$i} .= "<p></p></dd>\n"
	}

        # Add an entry to the master index

        # workaround for SGML bug, `--' is not allowed in comments
	local ($sname) = $name; 
	$sname =~ s/--/-=/g;
    	$master[$portnumber] = 
    	    "<!-- $sname --><strong><a href=\"$cat[0].html#$name\">$name</a></strong> " .
    	    " -- <em>$desc</em><br/>\n";
	$portnumber++;
    }

    open(MOUTF, ">index.xml");

    &header(MOUTF, "Порты FreeBSD");
#    print MOUTF "<!--#include virtual=\"./ports.inc\" -->\n";
    print MOUTF "&blurb;";
    print MOUTF "<hr/><p>В списке Коллекции Портов FreeBSD на данный момент
присутствуют $portnumber портированных на FreeBSD программ.<br/>
<a href=\"$baseFTP/ports.tar.gz\">Сгрузите gzip-архив, содержащий все
$portnumber портов</a> (около 21 Мбайта) или просмотрите следующие
категории:</p>\n";

    print MOUTF "<ul>\n";

    @foos = sort(keys %stats);
    foreach $key  (@foos) {
	# For the master file...
	print MOUTF 
	    "<li><a href=\"$key.html\">\u$key</a> <em>($stats{$key})</em>";
	if ($category_description{$key}) {
	    print MOUTF " -- " . $category_description{$key};
	}

	# Someone forgot to add a category to the description file
	# or there is a typo in the category field.
	else {
	   warn "No description found for category: ``$key''!\n";
	   warn "Please fix me or send an E-Mail to doc\@FreeBSD.org\a\n";
	   sleep(3);
	}
 
	print MOUTF "</li>\n";

	# Create the category file
	open(OUTF, ">$key.xml");
	&header(OUTF, "Порты FreeBSD: \u$key");
	if ($category_description{$key}) {
	    print OUTF "<h3>", $category_description{$key}, "</h3>\n";
	}
	print OUTF "<dl>\n";
	$d = join("\n", sort(split(/\n/, $data{$key})));
    	$d =~ s/##([^#]*)##/$catkey{$1}/g;
	print OUTF $d;
	print OUTF "</dl>\n";
	&footer(OUTF, "<p></p><a href=\"index.html\">Категории Портов</a>" .
	    " -- <a href=\"master-index.html\">Индекс</a>");
	close(OUTF);

    }
    print MOUTF "</ul>\n";
    print MOUTF 
    	"<ul><li><a href=\"master-index.html\">Алфавитный список всех $portnumber портов</a></li></ul>\n";
    &footer(MOUTF, "");
    close(MOUTF);

    # Create the master index file
    open(MINDEX, ">master-index.xml");
    &header(MINDEX, "Индекс Коллекции Портов FreeBSD");
    print MINDEX "<p>\n";
    print MINDEX sort @master;
    print MINDEX "</p>";
    &footer(MINDEX, "<a href=\"index.html\">Категории Портов</a>");
    close(MINDEX);
    close(INDEX);
}
