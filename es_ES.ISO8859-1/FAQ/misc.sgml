<!-- $Id: misc.sgml,v 1.1.1.1 1998-07-20 17:09:45 nik Exp $ -->
<!-- The FreeBSD Documentation Spanish Project -->
  <sect>
    <heading>Preguntas varias<label id="misc"></heading>

    <sect1>
      <heading>FreeBSD usa mas espacio de swap que Linux. Porque?</heading>

      <p>No lo hace. Deberias pensar "Porque mi swap parece lleno?". Si
      esto es lo que realmente querias decir, es por que poniendo los
      datos en swap en luar de descartarlos, hace que sea mas rapido
      recuperarlos que si el paginador tuviese que ir a traves del
      sistema de ficheros y usar bloques sin modificar desde un ejecutable.

      <p>La cantidad actual de paginas que puedes tener en el core en una
      sola vez no es reducida; las paginas sin usar son desplazadas como
      sea necesario.

    <sect1>
      <heading>Por que usar (que son) a.out y ELF como formatos ejecutables?</heading>

      <p>Para entender por que FreeBSD usa el formato <tt>a.out</tt>, debes
      saber primero un poco sobre los tres formatos dominantes actualmente
      en UNIX:

      <itemize>
        <item><htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
        name="a.out">

        <p>El antiguo y clasico formato de objeto. Usa una corta y compacta
        cabecera con un numero magico en el inicio que es usado para
        caracterizar el formato (mira en
        <htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
        name="a.out(5)"> para mas detalles). Contiene tres segmentos
        cargados: .text, .data y .bss mas una tabla de simbolos y una
        tabla de cadenas de caracteres.</item>


        <item><bf>COFF</bf>
        <p>El formato de objeto SVR3. La cabecera comprime una seccion de
        tablas, de manera que puedas tener mas de una sola seccion .test,
        .data y .bss</item>
        
        <item><bf>ELF</bf>
        <p>El sucesor de <tt/COFF/, ofreciendo multiples secciones y
        valores posibles de 32 o 64 bits. Un problema importante: <tt/ELF/
        fue disenyado con la presuncion de que solo existiria un unico
        ABI por arquitectura de sistema. Esta presuncion actualmente es
        incorrecta, incluso en el mundo comercial (el cual tiene al menos
        tres ABIs: SVR4, Solaris y SCO).

        <p>FreeBSD intenta solucionar este problema de manera que provee
        de una utilidad para <em>marcar</em> un ejecutable <tt/ELF/ con
        informacion sobre el ABI con el que es compatible. Para mas
        informacion, mira el man de
        <htmlurl url="http://www.freebsd.org/cgi/man.cgi?brandelf"
        name="brandelf">.
      </itemize>

      <p>FreeBSD viene del sistema clasico y tradicionalmente a utilizado
      el formato <htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
      name="a.out">, una tecnologia probada y testeada a traves de muchas
      generaciones de releases de BSD. Tambien es posible construir y
      ejecutar binarios nativos <tt/ELF/ (y kernels) en sistemas FreeBSD.
      FreeBSD inicialmente se resistio al salto de cambiar a <tt/ELF/ como
      su formato por defecto. Por que?, bien, cuando el mundo Linux hizo su
      transicion a <tt/ELF/ no era nada facil abandonar el formato ejecutable
      <tt/a.out/ debido a su inflexible mecanismo de tablas basadas en
      librerias compartidas. Esto hizo muy dificil para los fabricantes y
      desarrolladores la creacion de librerias compartidas. A partir del
      momento en el que se ofrecieron una serie de herramientas que
      ofrecian la solucion al problema de las librerias compartidas, el
      coste de la migracion fue aceptado como necesario y la transicion
      se hizo.

      <p>En el caso de FreeBSD, el mecanismo de librerias compartidas esta
      mas basado en el estilo de SunOS, mucho mas sencillo de usar.
      De todas maneras, empezando con la version 3.0, FreeBSD soportara
      oficialmente binarios <tt/ELF/ como el formato por defecto. Aunque
      pensamos que el formato ejecutable <tt/a.out/ nos ha servidor muy
      bien, la gente de GNU, que hacen las herramientas de compilacion que
      usamos, ha dejado de dar soporte para el formato <tt/a.out/. Esto nos
      ha forzado a mantener dos versiones divergentes del compilador y
      lincador.

    <sect1>
      <heading>Por que chmod no cambiar los permisos de los symlinks?</heading>

      <p>Tienes que usar <tt/-H/ o <tt/-L/ junto con la opcion <tt/-R/ para
      que funcione. Para mas informacion, mira la pagina de <htmlurl
      url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod"> y de
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?symlink" name="symlink">.

      <p><bf/CUIDADO/ la opcion <tt/-R/ hace un <tt/chmod/ <bf/RECURSIVO/.
      Ten cuidado al especificar directorios o symlinks con <tt/chmod/. Si
      quieres cambiar los permisos de un directorio referenciado por un
      symlink, usa
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod">
      sin ninguna opcion y sigue el symlink con una barra <tt>/</tt>. Por
      ejemplo, si <tt/foo/ es un symlink al directorio <tt/bar/, y quieres
      cambiar los permisos de <tt/foo/ /actualmente <tt/bar/), deberias
      hacer algo como esto:

      <verb>
        chmod 555 foo/
      </verb>

      <p>Con la barra, <htmlurl
      url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod"> seguira
      el symlink, <tt/foo/, para cambiar los permisos del directorio
      <tt/bar/.

    <sect1>
      <heading>Por que estan los nombres de usuario restringidos a 8 caracteres?</heading>

      <p>Pensaras que es facil y suficiente con cambiar <bf/UT_NAMESIZE/ y
      reconstruir el kernel, y todo volvera a funcionar. Desafortunadamente
      hay aplicaciones y programas (incluyendo herramientas de sistema) que
      tienen en el propio codigo (no siempre 8 o 9, pero si 15 o 20) en
      estructuras, buffers... y romperia los clientes de NIS de Sun y sin
      duda existirian otros problemas interactuando con otros sistemas UNIX.

    <sect1>
      <heading>Puedo ejecutar binarios DOS bajo FreeBSD?</heading>

      <p>Si, empezando en la version 3.0 puedes usar la emulacion DOS
      <tt/rundos/ de BSDI, la cual ha sido integrada y mejorada. Envia un
      mail a la <url url="mailto:emulation@freebsd.org"
      name="Lista de discusion de emulacion en FreeBSD"> si estas interesado en
      participar en la evolucion de esta caracteristica.

      <p>Para sistemas pre-3.0 hay una pequenya utilidad llamada
      <htmlurl url="http://www.freebsd.org/cgi/ports.cgi?^pcemu" name="pcemu">
      en la coleccion de puertos que emula un 8088 y suficientes servicios
      de BIOS para ejecutar aplicaciones de modo texto. Requiere el sistema
      de X Window.

    <sect1>
      <heading>Que es <tt/sup/, y como lo uso?</heading>

      <p><htmlurl url="http://www.freebsd.org/cgi/ports.cgi?^sup" name="SUP">
      significa Software Update Protocol, y fue desarrollado por CMU para
      mantener sus arboles de desarrollo sincronizados. Nosotros lo
      usabamos para manternet el servidor centrar sincronizado con otros
      servidores remotos.

      <p>SUP no es amigo del ancho de banda, y ha sido retirado. El metodo
      actual recomendado para mantener tus fuentes actualizados es
      <url url="../../handbook/cvsup.html" name="CVSup">

    <sect1>
      <heading>Es "cool" (moderno) FreeBSD?</heading>

      <p>FreeBSD usar la instruccion <tt/HLT/ (halt) cuando el sistema
      esta idle (sin usar) para reducir el consumo de energia. Si tienes
      la opcion APM (Automatic Power Management) configurado, FreeBSD puede
      poner la cpu en modo de baja energia.

