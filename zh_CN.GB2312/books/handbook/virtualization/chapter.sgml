<!--
     The FreeBSD Documentation Project
     The FreeBSD Simplified Chinese Project

     Original Revision: 1.8
     $FreeBSD$
-->

<chapter id="virtualization">
  <chapterinfo>
    <authorgroup>
      <author>
        <firstname>Murray</firstname>
	<surname>Stokely</surname>
	<contrib>原作 </contrib>
      </author>
    </authorgroup>
    <!-- Mar 2007 -->
  </chapterinfo>

  <title>虚拟化</title>
  
  <sect1 id="virtualization-synopsis">
    <title>概述</title>
    
    <para>虚拟化软件能够让同一台机器上同时运行多个操作系统。
      在 PC 上， 这种系统通常由一个运行虚拟化软件的宿主操作系统，
      以及一系列客户操作系统组成。</para>
    
    <para>读完这章， 您将了解：</para>

    <itemizedlist>
      <listitem>
	<para>宿主操作系统与客户操作系统的区别。</para>
      </listitem>

      <listitem>
	<para>如何在包含 <application>&xen;</application> 的 Linux 上安装 FreeBSD。</para>
      </listitem>

      <listitem>
	<para>如何在采用  &intel; 处理器的 &apple; &macintosh;
	  计算机上安装 FreeBSD。</para>
      </listitem>

      <listitem>
	<para>如何为虚拟化对 FreeBSD 系统进行性能调优。</para>
      </listitem>

    </itemizedlist>

    <para>在阅读这章之前， 您应：</para>

    <itemizedlist>
      <listitem>
	<para>理解 &unix; 和 FreeBSD 的基础知识 (<xref
	    linkend="basics">)。</para>
      </listitem>

      <listitem><para>了解如何安装 FreeBSD (<xref
      linkend="install">)。</para></listitem>

      <listitem><para>了解如何配置网络连接 (<xref
      linkend="advanced-networking">)。</para></listitem>

      <listitem><para>了解如何安装第三方软件
        (<xref linkend="ports">).</para></listitem>
    </itemizedlist>

  </sect1>



  <sect1 id="virtualization-guest">
    <title>作为客户 OS 的 FreeBSD</title>

    <sect2 id="virtualization-guest-parallels">
      <title>MacOS 上的 Parallels</title>

      <para>为 &mac; 设计的 <application>Parallels Desktop</application> 是一种可用于采用  &intel;  处理器， 并运行 &macos;
        10.4.6 或更高版本的 &apple; &mac; 计算机的商业软件。 在 &macos;
        X 上安装了这个软件之后， 用户需要配置虚拟机并安装所需的客户操作系统。</para>

	<sect3 id="virtualization-guest-parallels-install">
	  <title>在 Parallels/&macos; X 上安装 FreeBSD</title>

	  <para>在 &macos;
	    X/<application>Parallels</application> 上安装 FreeBSD 的第一步是创建一个新的虚拟机。
	    在系统提示选择客户 OS 类型 (<guimenu>Guest OS Type</guimenu>) 时选择 <guimenuitem>FreeBSD</guimenuitem>，
	    并根据您使用 FreeBSD 虚拟实例的需要分配磁盘和内存。 对多数在 <application>Parallels</application> 上使用
	    FreeBSD 的情形而言， 4GB 磁盘空间和 512MB 的 RAM 就够用了。</para>

	  <para>在创建了 FreeBSD 虚拟机之后， 还需要在其中安装 FreeBSD。
	    最好的做法是使用官方的 FreeBSD CDROM 或从官方 FTP 站点下载的 ISO 镜像来完成这个任务。
	    如果您的本地 &mac; 文件系统中有 ISO 映像文件， 或您的 &mac; 的 CD 驱动器中有
	    CDROM， 就可以在 FreeBSD <application>Parallels</application> 窗口的右下角点击光盘图标。
	    之后， 系统将给出一个窗口， 供您完成将虚拟机中的
	    CDROM 驱动器连接到本地的 ISO 文件或真正的 CDROM 驱动器上。</para>

	  <para>在完成了将 CDROM 与您的安装源完成关联之后，
	    就可以按重启 (reboot) 图标来重启 FreeBSD 虚拟机了。 <application>Parallels</application> 将配合一个特殊的
	    BIOS 启动， 后者能够像普通的 BIOS 一样检查系统中是否有 CDROM 驱动器。
	    此时， 它就能够找到 FreeBSD 安装介质并开始 <xref linkend="install">
	    中所介绍的标准的基于  <application>sysinstall</application> 安装的过程。 此时您可以安装 X11，
	    但暂时不要对它进行配置。 在完成安装之后， 重启并进入新安装的 FreeBSD 虚拟机。</para>

	</sect3>

	<sect3 id="virtualization-guest-parallels-configure">
	  <title>在 &macos; X/Parallels 上配置 FreeBSD</title>

	  <para>在您将 FreeBSD 安装到 &macos;
	    X 的 <application>Parallels</application> 上之后， 还需要进行一系列的配置，
	    以便为系统的虚拟化操作进行优化。</para>

          <procedure>
	    <step>
	      <title>配置引导加载器变量</title>

	      <para>最重要的一步是通过调低
	        <option>kern.hz</option> 变量来降低 <application>Parallels</application> 环境中的 FreeBSD
		对 CPU 的使用。 这可以通过在
		<filename>/boot/loader.conf</filename> 中增加下述配置来完成：</para>

	  	<programlisting>kern.hz=100</programlisting>

	      <para>如果不使用这个配置， 闲置的 FreeBSD <application>Parallels</application> 客户
		OS 会在单处理器的 &imac; 上使用大约 15% 的 CPU。 如此修改之后，
		空闲时的使用量就减少到大约 5% 了。</para>
	    </step>

	    <step>
	      <title>创建新的内核配置文件</title>

	      <para>您可以删去全部 SCSI、 FireWire， 以及 USB
	        设备驱动程序。 <application>Parallels</application> 提供了一个由 &man.ed.4; 驱动的虚拟网卡，
	        因此， 除了
	        &man.ed.4; 和 &man.miibus.4;
	        之外的其他网络接口驱动都可以从内核中删去。</para>
	    </step>

	    <step>
	      <title>配置网络</title>

	      <para>最基本的网络配置， 是通过使用 DHCP 来将您的虚拟机与宿主 &mac;
	        接入同一个局域网。 这可以通过在
	        <filename>/etc/rc.conf</filename> 中加入
	        <literal>ifconfig_ed0="DHCP"</literal> 来完成。
		更高级一些的网络配置方法， 请参见 <xref
		linkend="advanced-networking"> 中的介绍。</para>
	    </step>
          </procedure>

      </sect3>

    </sect2>

    <sect2 id="virtualization-guest-xen">
      <sect2info>
	<authorgroup>
	  <author>
            <firstname>福康</firstname>
	    <surname>陈 (Loader)</surname>
	    <contrib>原作 </contrib>
          </author>
        </authorgroup>
        <!-- Mar/Apr 2007 -->
      </sect2info>

      <title>在 Linux 上通过 &xen; 运行 FreeBSD</title>

	<para><application>&xen;</application> hypervisor 是一个开放源代码的并行虚拟化产品，
	  并由商业的 XenSource 公司提供支持。 在这种系统中， 客户操作系统称为 domU 域，
	  而宿主系统则称为 dom0。 在 Linux 上运行 FreeBSD 虚拟机实例的第一步， 是安装用于
	  Linux dom0 的
	  <application>&xen;</application>。 在这个例子中，
	  宿主系统采用的发行版本是 Slackware Linux。</para>

	<sect3 id="xen-slackware-dom0">
	  <title>在 Linux dom0 上安装 &xen; 3</title>

	  <procedure>
	    <step>
	      <title>从 XenSource 下载 &xen; 3.0</title>

	      <para>从 <ulink url="http://www.xensource.com/"></ulink> 下载 <ulink
	        url="http://bits.xensource.com/oss-xen/release/3.0.4-1/src.tgz/xen-3.0.4_1-src.tgz">xen-3.0.4_1-src.tgz</ulink>。</para>

	    </step>

	    <step>
	      <title>解压缩源代码包</title>

              <screen>&prompt.root; <userinput>cd xen-3.0.4_1-src</userinput>
&prompt.root; <userinput>KERNELS="linux-2.6-xen0 linux-2.6-xenU" make world</userinput>
&prompt.root; <userinput>make install</userinput></screen>

            <note>
	      <para>为 dom0 重新编译内核：</para>

	      <screen>&prompt.root; <userinput>cd xen-3.0.4_1-src/linux-2.6.16.33-xen0</userinput>
&prompt.root; <userinput>make menuconfig</userinput>
&prompt.root; <userinput>make</userinput>
&prompt.root; <userinput>make install</userinput></screen>

	      <para>对于较早版本的 <application>&xen;</application>， 可能需要指定
	        <command>make ARCH=xen menuconfig</command></para>
	    </note>
	    </step>

	    <step>
	      <title>在 Grub 的 menu.lst 中增加一个对应的菜单项</title>

	      <para>编辑 <filename>/boot/grub/menu.lst</filename>
		并在其中增加下列配置：</para>

	      <programlisting>title Xen-3.0.4
root (hd0,0)
kernel /boot/xen-3.0.4-1.gz dom0_mem=262144
module /boot/vmlinuz-2.6.16.33-xen0 root=/dev/hda1 ro</programlisting>
            </step>

            <step>
              <title>重新启动计算机并进入 &xen;</title>

	      <para>首先， 编辑
		<filename>/etc/xen/xend-config.sxp</filename>，
		并在其中增加下列配置：</para>

	      <programlisting>(network-script 'network-bridge netdev=eth0')</programlisting>

	      <para>接下来就可以运行
		<application>&xen;</application> 了：</para>

              <screen>&prompt.root; <userinput>/etc/init.d/xend start</userinput>
&prompt.root; <userinput>/etc/init.d/xendomains start</userinput></screen>

	      <para>现在 dom0 已经开始运行：</para>

              <screen>&prompt.root; <userinput>xm list</userinput>
Name                                      ID   Mem VCPUs      State   Time(s)
Domain-0                                   0   256     1     r-----  54452.9</screen>
            </step>
          </procedure>
        </sect3>

        <sect3>
          <title>FreeBSD 7-CURRENT domU</title>

          <para>从 <ulink
            url="http://www.fsmware.com/">http://www.fsmware.com/</ulink>
	    下载用于 <application>&xen; 3.0</application> 的 FreeBSD domU 内核。</para>

      <itemizedlist>
	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/kernel-current">kernel-current</ulink></para>
	</listitem>

	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/mdroot-7.0.bz2">mdroot-7.0.bz2</ulink></para>
	</listitem>

	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/config/xmexample1.bsd">xmexample1.bsd</ulink></para>
	</listitem>
      </itemizedlist>

      <para>将配置文件 <filename>xmexample1.bsd</filename>
	放到 <filename>/etc/xen/</filename> 并修改与内核及磁盘映像位置有关的配置项。
	下面是一个示范的例子：</para>

      <programlisting>kernel = "/opt/kernel-current"
memory = 256
name = "freebsd"
vif = [ '' ]
disk = [ 'file:/opt/mdroot-7.0,hda1,w' ]
#on_crash    = 'preserve'
extra = "boot_verbose"
extra += ",boot_single"
extra += ",kern.hz=100"
extra += ",vfs.root.mountfrom=ufs:/dev/xbd769a"</programlisting>

      <para>其中， <filename>mdroot-7.0.bz2</filename> 应是未压缩的。</para>

      <para>接下来， 您需要修改 <filename>kernel-current</filename> 中的 __xen_guest
	小节， 并加入 <application>&xen; 3.0.3</application> 所需要的 VIRT_BASE：</para>

      <screen>&prompt.root; <userinput>objcopy kernel-current -R __xen_guest</userinput>
&prompt.root; <userinput>perl -e 'print "LOADER=generic,GUEST_OS=freebsd,GUEST_VER=7.0,XEN_VER=xen-3.0,BSD_SYMTAB,VIRT_BASE=0xC0000000\x00"' &gt; tmp</userinput>
&prompt.root; <userinput>objcopy kernel-current --add-section __xen_guest=tmp</userinput></screen>

      <screen>&prompt.root; <userinput>objdump -j __xen_guest -s kernel-current</userinput>

kernel-current:     file format elf32-i386

Contents of section __xen_guest:
 0000 4c4f4144 45523d67 656e6572 69632c47  LOADER=generic,G
 0010 55455354 5f4f533d 66726565 6273642c  UEST_OS=freebsd,
 0020 47554553 545f5645 523d372e 302c5845  GUEST_VER=7.0,XE
 0030 4e5f5645 523d7865 6e2d332e 302c4253  N_VER=xen-3.0,BS
 0040 445f5359 4d544142 2c564952 545f4241  D_SYMTAB,VIRT_BA
 0050 53453d30 78433030 30303030 3000      SE=0xC0000000. </screen>

      <para>现在可以创建并运行 domU 了：</para>

      <screen>&prompt.root; <userinput>xm create /etc/xen/xmexample1.bsd -c</userinput>
Using config file "/etc/xen/xmexample1.bsd".
Started domain freebsd
WARNING: loader(8) metadata is missing!
Copyright (c) 1992-2006 The FreeBSD Project.
Copyright (c) 1979, 1980, 1983, 1986, 1988, 1989, 1991, 1992, 1993, 1994
The Regents of the University of California. All rights reserved.
FreeBSD 7.0-CURRENT #113: Wed Jan  4 06:25:43 UTC 2006
    kmacy@freebsd7.gateway.2wire.net:/usr/home/kmacy/p4/freebsd7_xen3/src/sys/i386-xen/compile/XENCONF
WARNING: DIAGNOSTIC option enabled, expect reduced performance.
Xen reported: 1796.927 MHz processor.
Timecounter "ixen" frequency 1796927000 Hz quality 0
CPU: Intel(R) Pentium(R) 4 CPU 1.80GHz (1796.93-MHz 686-class CPU)
  Origin = "GenuineIntel"  Id = 0xf29  Stepping = 9
  Features=0xbfebfbff&lt;FPU,VME,DE,PSE,TSC,MSR,PAE,MCE,CX8,APIC,SEP,MTRR,PGE,MCA,CMOV,PAT,PSE36,CLFLUSH,
  DTS,ACPI,MMX,FXSR,SSE,SSE2,SS,HTT,TM,PBE&gt;
  Features2=0x4400&lt;CNTX-ID,&lt;b14&gt;&gt;
real memory  = 265244672 (252 MB)
avail memory = 255963136 (244 MB)
xc0: &lt;Xen Console&gt; on motherboard
cpu0 on motherboard
Timecounters tick every 10.000 msec
[XEN] Initialising virtual ethernet driver.
xn0: Ethernet address: 00:16:3e:6b:de:3a
[XEN] 
Trying to mount root from ufs:/dev/xbd769a
WARNING: / was not properly dismounted
Loading configuration files.
No suitable dump device was found.
Entropy harvesting: interrupts ethernet point_to_point kickstart.
Starting file system checks:
/dev/xbd769a: 18859 files, 140370 used, 113473 free (10769 frags, 12838 blocks, 4.2% fragmentation)
Setting hostname: demo.freebsd.org.
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384
	  inet6 ::1 prefixlen 128 
	  inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2 
	  inet 127.0.0.1 netmask 0xff000000 
Additional routing options:.
Mounting NFS file systems:.
Starting syslogd.
/etc/rc: WARNING: Dump device does not exist.  Savecore not run.
ELF ldconfig path: /lib /usr/lib /usr/lib/compat /usr/X11R6/lib /usr/local/lib
a.out ldconfig path: /usr/lib/aout /usr/lib/compat/aout /usr/X11R6/lib/aout
Starting usbd.
usb: Kernel module not available: No such file or directory
Starting local daemons:.
Updating motd.
Starting sshd.
Initial i386 initialization:.
Additional ABI support: linux.
Starting cron.
Local package initialization:.
Additional TCP options:.
Starting background file system checks in 60 seconds.

Sun Apr  1 02:11:43 UTC 2007

FreeBSD/i386 (demo.freebsd.org) (xc0)

login: </screen>

      <para>现在 domU 应该能运行 &os;&nbsp;7.0-CURRENT
	内核了：</para>

      <screen>&prompt.root; <userinput>uname -a</userinput>
FreeBSD demo.freebsd.org 7.0-CURRENT FreeBSD 7.0-CURRENT #113: Wed Jan  4 06:25:43 UTC 2006     
kmacy@freebsd7.gateway.2wire.net:/usr/home/kmacy/p4/freebsd7_xen3/src/sys/i386-xen/compile/XENCONF  i386</screen>

      <para>接下来可以在 domU 中配置网络了。 &os;
	domU 会使用一种称做
	<devicename>xn0</devicename> 的专用网络接口：</para>

      <screen>&prompt.root; <userinput>ifconfig xn0 10.10.10.200 netmask 255.0.0.0</userinput>
&prompt.root; <userinput>ifconfig</userinput>
xn0: flags=843&lt;UP,BROADCAST,RUNNING,SIMPLEX&gt; mtu 1500
    inet 10.10.10.200 netmask 0xff000000 broadcast 10.255.255.255
    ether 00:16:3e:6b:de:3a
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384
      inet6 ::1 prefixlen 128 
      inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2 
      inet 127.0.0.1 netmask 0xff000000 </screen>

      <para>在 dom0 Slackware 上 会出现一些 <application>&xen;</application>
	专用的网络接口：</para>

      <screen>&prompt.root; <userinput>ifconfig</userinput>
eth0      Link encap:Ethernet  HWaddr 00:07:E9:A0:02:C2  
          inet addr:10.10.10.130  Bcast:0.0.0.0  Mask:255.0.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:815 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1400 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:204857 (200.0 KiB)  TX bytes:129915 (126.8 KiB)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:99 errors:0 dropped:0 overruns:0 frame:0
          TX packets:99 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:9744 (9.5 KiB)  TX bytes:9744 (9.5 KiB)

peth0     Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:1853349 errors:0 dropped:0 overruns:0 frame:0
          TX packets:952923 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:2432115831 (2.2 GiB)  TX bytes:86528526 (82.5 MiB)
          Base address:0xc000 Memory:ef020000-ef040000 

vif0.1    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:1400 errors:0 dropped:0 overruns:0 frame:0
          TX packets:815 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:129915 (126.8 KiB)  TX bytes:204857 (200.0 KiB)

vif1.0    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:3 errors:0 dropped:0 overruns:0 frame:0
          TX packets:2 errors:0 dropped:157 overruns:0 carrier:0
          collisions:0 txqueuelen:1 
          RX bytes:140 (140.0 b)  TX bytes:158 (158.0 b)

xenbr1    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:4 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:112 (112.0 b)  TX bytes:0 (0.0 b)</screen>

      <screen>&prompt.root; <userinput>brctl show</userinput>
bridge name     bridge id           STP enabled         interfaces
xenbr1          8000.feffffffffff   no                  vif0.1
                                                        peth0
                                                        vif1.0</screen>
      </sect3>

    </sect2>

    <sect2 id="virtualization-guest-vmware">
      <title>运行于 &windows;/&mac;/&linux; 的 VMware</title>

      <para>本节尚未开始撰写。</para>

    </sect2>

  </sect1>

  <sect1 id="virtualization-host">
    <title>作为宿主 OS 的 FreeBSD</title>

    <para>目前， 还没有任何一种虚拟化软件包官方支持 FreeBSD 作为宿主操作系统，
      但很多人使用较早版本的 <application>VMware</application> 提供的这项能力。 目前，
      已经有人在为让 <application>&xen;</application> 能够在 FreeBSD 上作为宿主环境而进行相关的开发工作。</para>

  </sect1>

</chapter>

<!-- 
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
