<!-- $Id: misc.sgml,v 1.6 1999-04-10 20:41:17 jesusr Exp $ -->
<!-- The FreeBSD Documentation Spanish Project -->
  <sect>
    <heading>Preguntas varias<label id="misc"></heading>

    <sect1>
      <heading>FreeBSD usa m&aacute;s espacio de swap que Linux. Porqu&eacute;?</heading>

      <p>No lo hace. Deber&iacute;as pensar "Porque mi swap parece lleno?". Si
      esto es lo que realmente quer&iacute;as decir, es por que poniendo los
      datos en swap en luar de descartarlos, hace que sea m&aacute;s 
      r&aacute;pido recuperarlos que si el paginador tuviese que ir a 
      trav&eacute;s del sistema de ficheros y usar bloques sin modificar desde 
      un ejecutable.

      <p>La cantidad actual de p&aacute;ginas que puedes tener en el core en una
      sola vez no es reducida; las p&aacute;ginas sin usar son desplazadas como
      sea necesario.

    <sect1>
      <heading>Porqu&eacute; usar (que son) a.out y ELF como formatos ejecutables?</heading>

      <p>Para entender por que FreeBSD usa el formato <tt>a.out</tt>, debes
      saber primero un poco sobre los tres formatos dominantes actualmente
      en UNIX:

      <itemize>
        <item><htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
        name="a.out">

        <p>El antiguo y cl&aacute;sico formato de objeto. Usa una corta y 
        compacta cabecera con un n&uacute;mero m&aacute;gico en el inicio que 
        es usado para caracterizar el formato (mira en
        <htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
        name="a.out(5)"> para m&aacute;s detalles). Contiene tres segmentos
        cargados: .text, .data y .bss m&aacute;s una tabla de s&iacute;mbolos 
        y una tabla de cadenas de car&aacute;cteres.</item>


        <item><bf>COFF</bf>
        <p>El formato de objeto SVR3. La cabecera comprime una secci&oacute;n de
        tablas, de manera que puedas tener m&aacute;s de una sola 
        secci&oacute;n .test, .data y .bss</item>
        
        <item><bf>ELF</bf>
        <p>El sucesor de <tt/COFF/, ofreciendo m&uacute;ltiples secciones y
        valores posibles de 32 o 64 bits. Un problema importante: <tt/ELF/
        fue dise&ntilde;ado con la presunci&oacute;n de que solo 
        existir&iacute;a un &uacute;nico ABI por arquitectura de sistema. 
        Esta presunci&oacute;n actualmente es incorrecta, incluso en el 
        mundo comercial (el cual tiene al menos tres ABIs: SVR4, Solaris y SCO).

        <p>FreeBSD intenta solucionar este problema de manera que provee
        de una utilidad para <em>marcar</em> un ejecutable <tt/ELF/ con
        informaci&oacute;n sobre el ABI con el que es compatible. Para                  m&aacute;s informaci&oacute;n, mira el man de <htmlurl 
        url="http://www.freebsd.org/cgi/man.cgi?brandelf" name="brandelf">.
      </itemize>

      <p>FreeBSD viene del sistema cl&aacute;sico y tradicionalmente ha 
      utilizado el formato 
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?a.out(5)"
      name="a.out">, una tecnolog&iacute;a probada y testeada a trav&eacute;s 
      de muchas generaciones de releases de BSD. Tambi&eacute;n es posible 
      construir y ejecutar binarios nativos <tt/ELF/ (y kernels) en sistemas 
      FreeBSD. FreeBSD inicialmente se resisti&oacute; al salto de cambiar a 
      <tt/ELF/ como su formato por defecto. Porqu&eacute;?, bien, cuando el 
      mundo Linux hizo su transici&oacute;n a <tt/ELF/ no era nada f&aacute;cil
      abandonar el formato ejecutable <tt/a.out/ debido a su inflexible 
      mecanismo de tablas basadas en librer&iacute;as compartidas. Esto hizo 
      muy dif&iacute;cil para los fabricantes y desarrolladores la 
      creaci&oacute;n de librer&iacute;as compartidas. A partir del momento en 
      el que se ofrecieron una serie de herramientas que ofrec&iacute;an la 
      soluci&oacute;n al problema de las librer&iacute;as compartidas, el
      coste de la migraci&oacute;n fue aceptado como necesario y la 
      transici&oacute;n se hizo.

      <p>En el caso de FreeBSD, el mecanismo de librer&iacute;as compartidas 
      esta m&aacute;s basado en el estilo de SunOS, mucho m&aacute;s sencillo 
      de usar. De todas maneras, empezando con la version 3.0, FreeBSD 
      soportar&aacute; oficialmente binarios <tt/ELF/ como el formato por 
      defecto. Aunque pensamos que el formato ejecutable <tt/a.out/ nos ha 
      servidor muy bi&eacute;n, la gente de GNU, que hacen las herramientas de 
      compilaci&oacute;n que usamos, ha dejado de dar soporte para el formato 
      <tt/a.out/. Esto nos ha forzado a mantener dos versiones divergentes del 
      compilador y lincador.

    <sect1>
      <heading>Porqu&eacute; chmod no puede cambiar los permisos de los links?</heading>

      <p>Tienes que usar <tt/-H/ o <tt/-L/ junto con la opci&oacute;n <tt/-R/ 
      para que funcione. Para m&aacute;s informaci&oacute;n, mira la 
      p&aacute;gina de <htmlurl
      url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod"> y de
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?symlink" name="symlink">.

      <p><bf/CUIDADO/ la opci&oacute;n <tt/-R/ hace un <tt/chmod/ 
      <bf/RECURSIVO/. Ten cuidado al especificar directorios o symlinks con 
      <tt/chmod/. Si quieres cambiar los permisos de un directorio referenciado
      por un symlink, usa
      <htmlurl url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod">
      sin ninguna opci&oacute;n y sigue el symlink con una barra <tt>/</tt>. Por
      ejemplo, si <tt/foo/ es un symlink al directorio <tt/bar/, y quieres
      cambiar los permisos de <tt/foo/ /actualmente <tt/bar/), deber&iacute;as
      hacer algo como esto:

      <verb>
        chmod 555 foo/
      </verb>

      <p>Con la barra, <htmlurl
      url="http://www.freebsd.org/cgi/man.cgi?chmod" name="chmod"> seguira
      el symlink, <tt/foo/, para cambiar los permisos del directorio
      <tt/bar/.

    <sect1>
      <heading>Porqu&eacute; est&aacute;n los nombres de usuario restringidos a 8 caracteres?</heading>

      <p>Pensar&aacute;s que es f&aacute;cil y suficiente con cambiar 
      <bf/UT_NAMESIZE/ y reconstruir el kernel, y todo volver&aacute; a 
      funcionar. Desafortunadamente hay aplicaciones y programas (incluyendo 
      herramientas de sistema) que tienen en el propio c&oacute;digo (no 
      siempre 8 o 9, pero si 15 o 20) en estructuras, buffers... y 
      romper&iacute;a los clientes de NIS de Sun y sin duda existir&iacute;an 
      otros problemas interactuando con otros sistemas UNIX.

    <sect1>
      <heading>Puedo ejecutar binarios DOS bajo FreeBSD?</heading>

      <p>S&iacute;, empezando en la versi&oacute;n 3.0 puedes usar la 
      emulaci&oacute;n DOS <tt/rundos/ de BSDI, la cual ha sido integrada y 
      mejorada. Env&iacute;a un mail a la 
      <url url="mailto:emulation@freebsd.org"
      name="Lista de discusi&oacute;n de emulaci&oacute;n en FreeBSD"> si 
      est&aacute;s interesado en participar en la evoluci&oacute;n de esta 
      caracter&iacute;stica.

      <p>Para sistemas pre-3.0 hay una peque&ntilde;a utilidad llamada
      <htmlurl url="http://www.freebsd.org/cgi/ports.cgi?^pcemu" name="pcemu">
      en la colecci&oacute;n de puertos que emula un 8088 y suficientes 
      servicios de BIOS para ejecutar aplicaciones de modo texto. Requiere el 
      sistema de X Window.

    <sect1>
      <heading>Qu&eacute; es <tt/sup/, y como lo uso?</heading>

      <p><htmlurl url="http://www.freebsd.org/cgi/ports.cgi?^sup" name="SUP">
      significa Software Update Protocol, y fue desarrollado por CMU para
      mantener sus &aacute;rboles de desarrollo sincronizados. Nosotros lo
      usabamos para manterner el servidor central sincronizado con otros
      servidores remotos.

      <p>SUP no es amigo del ancho de banda, y ha sido retirado. El 
      m&eacute;todo actual recomendado para mantener tus fuentes actualizados 
      es <url url="../../handbook/synching.html#CVSUP" name="CVSup">

    <sect1>
      <heading>Existen herramientas de ahorro de energ&iacute;a en FreeBSD?</heading>

      <p>FreeBSD usar la instrucci&oacute;n <tt/HLT/ (halt) cuando el sistema
      esta idle (sin usar) para reducir el consumo de energ&iacute;a. Si tienes
      la opci&oacute;n APM (Automatic Power Management) configurado, FreeBSD 
      puede poner la cpu en modo de baja energ&iacute;a.

    <sect1>
     <heading>Qu&eacute; significa MFC?</heading>

     <p>MFC es un acr&oacute;nimo para "Merges From -CURRENT". Es usado en los
     logs de CVS para indicar que un cambio se ha migrado de la rama CURRENT
     a la rama STABLE.
