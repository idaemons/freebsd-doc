<!--
     The FreeBSD Dutch Documentation Project

     $FreeBSD$
     $FreeBSDnl: doc/nl_NL.ISO8859-1/books/handbook/mac/chapter.sgml,v 1.22 2006/01/05 21:13:23 siebrand Exp $
     Gebaseerd op: 1.49
-->

<chapter id="mac">
  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Tom</firstname>
	<surname>Rhodes</surname>
	<contrib>Geschreven door </contrib>
      </author>
    </authorgroup>
  </chapterinfo>

  <title>Verplichte Toegangscontrole (MAC)</title>

  <sect1 id="mac-synopsis">
    <title>Overzicht</title>

    <indexterm><primary>MAC</primary></indexterm>

    <indexterm>
      <primary>verplichte toegangscontrole</primary>

      <see>MAC</see>
    </indexterm>

    <indexterm><primary>mandatory access control</primary></indexterm>

    <para>In &os;&nbsp;5.X worden nieuwe beveiligingsuitbreidingen
      ge&iuml;ntroduceerd uit het TrustedBSD project, dat is gebaseerd
      op de &posix;.1e draft.  Twee van de meest significante nieuwe
      beveiligingsmechanismen zijn bestandssysteem
      Toegangscontrolelijsten (<acronym>ACL's</acronym>) en
      Verplichte Toegangscontrole (Mandatory Access Control of
      <acronym>MAC</acronym>) facilities.  Met Verplichte
      Toegangscontrole kunnen nieuwe toegangscontrolemodules geladen
      worden, waarmee nieuw beveiligingsbeleid opgelegd kan worden.
      Een aantal daarvan bieden beveiliging aan hele kleine onderdelen
      van het systeem, waardoor een bepaalde dienst weerbaarder wordt,
      terwijl andere allesomvattende gelabelde beveiliging bieden op
      alle vlakken en objecten.  Het verplichte deel van de definitie
      komt van het feit dat het opleggen van de controle wordt gedaan
      door beheerders en het systeem en niet wordt overgelaten aan
      de nukken van gebruikers, zoals wel wordt gedaan met
      toegangscontrole naar goeddunken (discretionary access control of
      <acronym>DAC</acronym>, de standaard bestands- en System V
      <acronym>IPC</acronym> rechten in &os;).</para>

    <para>In dit hoofdstuk wordt de nadruk gelegd op het
      Verplichte Toegangscontrole Framework (MAC Framework) en een set
      van te activeren beveiligingsbeleidsmodules waarmee verschillende
      soorten beveiligingmechanismen wordt ingeschakeld.</para>

    <para>Na het lezen van dit hoofdstuk weet de lezer:</para>

    <itemizedlist>
      <listitem>
	<para>Welke <acronym>MAC</acronym> beveiligingsbeleidsmodules
	  op dit moment in &os; beschikbaar zijn en welke mechanismen
	  daarbij horen;</para>
      </listitem>

      <listitem>
	<para>Wat <acronym>MAC</acronym> beveiligingsbeleidsmodules
	  implementeren en het verschil tussen gelabeld en
	  niet-gelabeld beleid;</para>
      </listitem>

      <listitem>
	<para>Hoe een systeem effici&euml;nt ingesteld kan worden om
	  met het <acronym>MAC</acronym> framework te werken;</para>
      </listitem>

      <listitem>
	<para>Hoe het beleid van de verschillende
	  beveiligingsbeleidsmodules die in het <acronym>MAC</acronym>
	  framework zitten ingesteld kunnen worden;</para>
      </listitem>

      <listitem>
	<para>Hoe een veiliger omgeving gemaakt kan worden met het
	  <acronym>MAC</acronym> framework en de getoonde
	  voorbeelden;</para>
      </listitem>

      <listitem>
	<para>Hoe de <acronym>MAC</acronym> instellingen getest
	  kunnen worden om er zeker van te zijn dat het framework juist
	  is ge&iuml;mplementeerd.</para>
      </listitem>
    </itemizedlist>

    <para>Aangeraden voorkennis:</para>

    <itemizedlist>
      <listitem>
	<para>Begrip van &unix; en &os; basiskennis (<xref
	    linkend="basics">);</para>
      </listitem>

      <listitem>
	<para>Bekend zijn met de beginselen van het instellen en
	  compileren van de kernel (<xref
	    linkend="kernelconfig">);</para>
      </listitem>

      <listitem>
	<para>Enigszins bekend zijn met beveiliging en wat dat te maken
	  heeft met &os; (<xref linkend="security">).</para>
      </listitem>
    </itemizedlist>

    <warning>
      <para>Het verkeerd gebruiken van de informatie in dit hoofdstuk
	kan leiden tot het niet langer toegang hebben tot een systeem,
	grote ergernis bij gebruikers of het niet langer kunnen
	gebruiken van de mogelijkheden die X11 biedt.  Nog belangrijker
	is dat niet alleen op <acronym>MAC</acronym> vertrouwd moet
	worden voor de beveiliging van een systeem.  Het
	<acronym>MAC</acronym> framework vergroot alleen het bestaande
	beveiligingsbeleid. Zonder goede beveiligingsprocedures en
	regelmatige beveiligingscontroles is een systeem nooit helemaal
	veilig.</para>

      <para>Het is ook van belang op te merken dat de voorbeelden in
	dit hoofdstuk alleen voorbeelden zijn.  Het is niet aan te
	raden ze uit te rollen op een productiesysteem.  Het
	implementeren van de verschillende beveiligingsbeleidmodules
	dient goed overdacht te worden.  Iemand die niet helemaal
	begrijpt hoe alles werkt, komt er waarschijnlijk achter dat die
	het complete systeem van voor naar achter en weer terug
	doorloopt en heel erg veel bestanden en mappen opnieuw moet
	instellen.</para>
    </warning>

    <sect2>
      <title>Wat niet wordt behandeld</title>

      <para>In dit hoofdstuk wordt een brede reeks
	beveiligingsonderwerpen met betrekking tot het
	<acronym>MAC</acronym> framework behandeld.  De ontwikkeling
	van nieuwe <acronym>MAC</acronym> beveiligingsbeleidmodules
	wordt niet behandeld.  Een aantal modules die bij het
	<acronym>MAC</acronym> framework zitten hebben specifieke
	eigenschappen voor het testen en ontwikkelen van (nieuwe)
	modules.  Daaronder vallen &man.mac.test.4;, &man.mac.stub.4;
	en &man.mac.none.4;.  Meer informatie over deze
	beveiligingsbeleidsmodules en de mogelijkheden die ze bieden
	staan in de hulppagina's.</para>
    </sect2>
  </sect1>

  <sect1 id="mac-inline-glossary">
    <title>Sleuteltermen in dit hoofdstuk</title>

    <para>Voordat het lezen van dit hoofdstuk zonder voorkennis
      mogelijk is, moeten er eerst een aantal sleuteltermen toegelicht
      worden.  Hiermee wordt hopelijk mogelijke verwarring en de
      abrupte introductie van nieuwe termen en informatie
      voorkomen.</para>

    <itemizedlist>
      <listitem>
	<para><emphasis>compartiment</emphasis>: een compartiment is
	  een verzameling van programma's en data die gepartitioneerd
	  of gescheiden dient te worden en waartoe gebruikers expliciet
	  toegang moeten krijgen op een systeem.  Een compartiment
	  staat ook voor een groep - werkgroep, afdeling, project of
	  onderwerp.  Door gebruik te maken van compartimenten is het
	  mogelijk om <quote>need-to-know</quote> beveiligingsbeleid in
	  te stellen.</para>
      </listitem>

      <listitem>
	<para><emphasis>integriteit</emphasis>: integriteit, als
	  sleutelconcept, is het niveau van vertrouwen dat in data
	  gesteld kan worden.  Als de integriteit van data wordt
	  vergroot, dan geldt dat ook voor het vertrouwen dat in die
	  data gesteld kan worden.</para>
      </listitem>

      <listitem>
	<para><emphasis>label</emphasis>: een label is een
	  beveiligingsattribuut dat toegepast kan worden op bestanden,
	  mappen of andere onderdelen van een systeem.  Het kan gezien
	  worden als een vertrouwelijkheidsstempel: als er een label op
	  een bestand is geplaatst, beschrijft dat de
	  beveiligingseigenschappen voor dat specifieke bestand en is
	  daarop alleen toegang voor bestanden, gebruikers, bronnen,
	  enzovoort, met gelijke beveiligingsinstellingen.  De
	  betekenis en interpretatie van labelwaarden hangt af van de
	  instelling van de beleidseeneheid: hoewel sommige
	  beleidseenheden een label beschouwen als representatie van de
	  integriteit of het geheimhoudingsniveau van een object,
	  kunnen andere beleidseenheden label gebruik om regels voor
	  toegang in op te slaan.</para>
      </listitem>

      <listitem>
	<para><emphasis>niveau</emphasis>: de verhoogde of verlaagde
	  instelling van een beveiligingsattribuut.  Met het stijgen
	  van het niveau wordt ook aangenomen dat de veiligheid
	  stijgt.</para>
      </listitem>

      <listitem>
	<para><emphasis>meervoudig label</emphasis>: de eigenschap
	  <option>multilabel</option> is een optie van het
	  bestandssysteem die in single user modus met &man.tunefs.8;,
	  tijdens het opstarten via het bestand &man.fstab.5; of
	  tijdens het maken van een nieuw bestandssysteem ingesteld kan
	  worden.  Met deze optie wordt het voor een beheerder mogelijk
	  om verschillende <acronym>MAC</acronym> labels op
	  verschillende objecten toe te passen.  Deze optie is alleen
	  van toepassing op beveiligingsbeleidsmodules die labels
	  ondersteunen.</para>
      </listitem>

      <listitem>
	<para><emphasis>object</emphasis>: een object of systeemobject
	  is een entiteit waar informatie doorheen stroomt op
	  aanwijzing van een <emphasis>subject</emphasis>.  Hieronder
	  valleen mappen, bestanden, velden, schermen, toetsenborden,
	  geheugen, maganetische opslag, printers en alle andere
	  denkbare apparaten waarmee data kan worden vervoerd of data
	  op kan worden opgeslagen.  In de basis is een object een
	  opslageenheid voor data of een systeembron; toegang tot een
	  <emphasis>object</emphasis> betekent in feite toegang tot de
	  data.</para>
      </listitem>

      <listitem>
	<para><emphasis>beleidseenheid</emphasis>: een verzameling van
	  regels die aangeven hoe doelstellingen bereikt moeten worden.
	  In een <emphasis>beleidseenheid</emphasis> staat meestal
	  beschreven hoe bepaalde eenheden behandeld dienen te worden.
	  In dit hoofdstuk wordt de term
	  <emphasis>beleidseenheid</emphasis> in deze context gezien
	  als een <emphasis>beveiligingsbeleidseenheid</emphasis>, wat
	  zoveel wil zeggen als een verzameling regels die bepaalt hoe
	  data en informatie stroomt en aangeeft wie toegang tot welke
	  data en informatie heeft.</para>
      </listitem>

      <listitem>
	<para><emphasis>gevoeligheid</emphasis>: meestal gebruikt bij
	  het bespreken vna <acronym>MLS</acronym>.  Een
	  gevoeligheidsniveau is een term die gebruikt wordt om te
	  beschrijven hoe belangrijk of geheim de data hoort te zijn.
	  Met het stijgen van het gevoeligheidsniveau stijgt ook het
	  belang van de geheimhouding of de confidentialiteit van de
	  data.</para>
      </listitem>

      <listitem>
	<para><emphasis>enkelvoudig label</emphasis>: een enkelvoudig
	  label wordt gebruikt als een heel bestandssysteem gebruik
	  maakt van &eacute;&eacute;n label om het toegangsbeleid over
	  de datastromen af te dwingen.  Als dit voor een
	  bestandssysteem is ingesteld, wat geldt als er geen gebruik
	  gemaakt wordt van de optie <option>multilabel</option>, dan
	  gehoorzamen alle bestanden aan dezelfde
	  labelinstelling.</para>
      </listitem>

      <listitem>
	<para><emphasis>subject</emphasis>: een subject is een gegeven
	  actieve entiteit die het stromen van informatie tussen
	  <emphasis>objects</emphasis> veroorzaakt, bijvoorbeekd een
	  gebruiker, gebruikersprocessortijd, systeemproces, enzovoort.
	  Op &os; is dit bijna altijd een thread die in een proces
	  namens een gebruiker optreedt.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="mac-initial">
    <title>Uitleg over MAC</title>

    <para>Met al deze nieuwe termen in gedachten, kan overdacht worden
      het <acronym>MAC</acronym> framework de complete beveiliging van
      een systeem kan vergroten.  De verschillende
      beveiligingsbeleidsmodules die het <acronym>MAC</acronym>
      framework biedt zouden gebruikt kunnen worden om het netwerk en
      bestandssystemen te beschermen, gebruikers toegang tot bepaalde
      poorten en sockets kunnen ontzeggen en nog veel meer.  Misschien
      kunnen de beleidsmodules het beste gebruikt worden door ze samen
      in te zetten, door meerdere beveiligingsbeleidsmodules te laden
      om te komen tot een omgeving waarin de beveiliging uit meerdere
      lagen is opgebouwd.  In een omgeving waarin de beveiliging uit
      meerdere lagen is opgebouwd zijn meedere beleidsmodules actief
      om de beveiliging in de hand te houden.  Deze aanpak is anders
      dan een beleid om de beveiliging sec beter te maken, omdat
      daarmee in het algemeen elementen in een systeem beveiligd worden
      dat voor een specifiek doel wordt gebruikt.  Het enige nadeel is
      het benodigde beheer in het geval van meervoudige
      bestandssysteemlabels, het instellen van toegang tot het netwerk
      per gebruiker, enzovoort.</para>

    <para>De nadelen zijn wel minimaal als ze worden vergeleken met
      het immer durende effect van het framework.  Zo zorgt
      bijvoorbeeld de mogelijkheid om te kiezen welke beleidseenheden
      voor een specifiek gebruik nodig zijn voor het zo laag mogelijk
      houden van de beheerslast.  Het terugdringen van ondersteuning
      voor onnodige beleidseenheden kan de beschikbaarheid van systemen
      verhogen en ook de keuzevrijheid vergroten.  Voor een goede
      implementatie worden alle beveiligingseisen in beschouwing
      genomen en daarna worden de verschillende
      beveiligingsbeleidsmodules effectief door het framework
      ge&iuml;mplementeerd.</para>

    <para>Een systeem dat gebruik maakt van de mogelijkheden van
      <acronym>MAC</acronym> dient dus tenminste de garantie te hebben
      dat een gebruiker niet de mogelijkheid heeft naar eigen inzicht
      beveiligingsattributen te wijzigen.  Alle gebruikersprogramma's
      en scripts moeten werken binnen de beperkingen die de
      toegangsregels voorschrijven volgens de geselecteerde
      beveiligingsbeleidsmodules.  Het voorgaande impliceert ook dat de
      volledige controle over de <acronym>MAC</acronym> toegangsregels
      bij de systeembeheerder ligt.</para>

    <para>Het is de taak van de systeembeheerder om zorgvuldig de
      juiste beveiligingsbeleidsmodules te kiezen.  Voor sommige
      omgevingen kan het nodig zijn dat de toegang tot het netwerk
      wordt beperkt.  In dat soort gevallen zijn de beleidsmodules
      &man.mac.portacl.4;, &man.mac.ifoff.4; en zelfs &man.mac.biba.4;
      goede startpunten.  In andere gevallen kan het nodig zijn dat
      alleen de vertrouwelijkheid van bestandssysteemobjecten van
      belang is.  Dan zijn beleidsmodules zoals &man.mac.bsdextended.4;
      en &man.mac.mls.4; voor dit doel gemaakt.</para>

    <para>Beslissingen over beleid zouden gemaakt kunnen worden op
      basis van het netwerkontwerp.  Wellicht wordt alleen bepaalde
      gebruikers toegestaan gebruik te maken van de mogelijkheden van
      &man.ssh.1; om toegang te krijgen tot het netwerk of internet.
      In dat geval is de juiste beleidsmodule &man.mac.portacl.4;.
      Maar wat te doen voor bestandssystemen?  Moet alle toegang tot
      bepaalde mappen worden afgesneeden van andere gebruikersgroepen
      of specifieke gebruikers, of moeten de toegang voor gebruikers
      of programma's tot bespaalde bestanden worden ingesteld door
      bepaalde objecten als geheim te bestempelen?</para>

    <para>In het geval van het bestandssysteem, kan ervoor gekozen
      worden om de toegang voor sommige objecten voor bepaalde
      gebruikers als geheim te bestempelen, maar voor andere niet.
      Bijvoorbeeld: een groot ontwikkelteam wordt opgedeeld in
      kleinere eenheden individuen.  Ontwikkelaars in project A horen
      geen toegang te hebben tot objecten die zijn geschreven door
      ontwikkelaars in project B.  Maar misschien moeten ze wel toegang
      hebben tot objecten die zijn geschreven door ontwikkelaars in
      project C.  Dat is nogal wat.  Door gebruik te maken van de
      verschillende beveiligingsbeleidsmodules in het
      <acronym>MAC</acronym> framework kunnen gebruikers in hun groepen
      worden opgedeeld en kan ze toegang gegeven worden tot de juiste
      locaties zonder dat er angst hoeft te zijn voor het lekken van
      informatie.</para>

    <para>Zo heeft dus iedere beveiligingsbeleidsmodule een unieke
      wijze om om te gaan met de totale beveiliging van een systeem.
      Het kiezen van modules hoort gebaseerd te zijn op een zorgvuldig
      uitgedacht beveiligingsbeleid.  In veel gevallen wordt het totale
      beveiligingsbeleid aangepast en opnieuw toegepast op een systeem.
      Een goed begrip van de verschillende beveiligingsbeleidsmodules
      die het <acronym>MAC</acronym> framework biedt helpt beheerders
      bij het kiezen van de juiste beleidseenheden voor hun
      situatie.</para>

    <para>De standaard &os; kernel kent geen ondersteuning voor het
      <acronym>MAC</acronym> framework en daarom dient de volgende
      kerneloptie toegevoegd te worden voordat op basis van de
      voorbeelden of informatie uit dit hoofdstuk wijzigen worden
      gemaakt:</para>

    <programlisting>options     MAC</programlisting>

    <para>Hierna dient de kernel herbouwd en ge&iuml;nstalleerd te
      worden.</para>

    <caution>
      <para>Hoewel in de verschillende hulppagina's voor
	<acronym>MAC</acronym> beleidsmodules staat dat ze in de kernel
	gebouwd kunnen worden, is het mogelijk het systeem van het
	netwerk af te sluiten en meer.  Het implementeren van
	<acronym>MAC</acronym> is net zoiets als het implementeren van
	een firewall en er moet opgepast worden dat een systeem niet
	totaal op slot gaat.  Er dient rekening gehouden te worden met
	het teruggaan naar een vorige instelling en het op afstand
	implementeren van <acronym>MAC</acronym> dient bijzonder
	voorzichtig te gebeuren.</para>
    </caution>
  </sect1>

  <sect1 id="mac-understandlabel">
    <title>MAC labels begrijpen</title>

    <para>Een <acronym>MAC</acronym> label is een beveiligingsattribuut
      dat toegepast kan worden op subjects en objecten die door het
      systeem gaan.</para>

    <para>Bij het instellen van een label moet de gebruiker in staat
      zijn om precies te begrijpen wat er gebeurt.  De attributen die
      voor een object beschikbaar zijn hangen af van de geladen
      beleidsmodule en die interpreteren hun attributen op nogal
      verschillende manieren.  Het resultaat kan resulteren in
      onverwacht en wellicht ongewenst gedrag van een systeem als
      het beleid door een gebrek aan begrip verkeerd is
      ingesteld.</para>

    <para>Het beveiligingslaven op een object wordt gebruikt als
      onderdeel van een beveiligingstoegangscontrolebeslissing door een
      beleidseenheid.  Voor sommige beleidseenheden bevat het label
      zelf alle informatie die nodig is voor het maken van een
      beslissing; in andere modellen kunnen de labels als onderdeel van
      een grotere set verwerkt worden, enzovoort.</para>

    <para>Zo staat bijvoorbeeld het instellen van het label
      <literal>biba/low</literal> op een bestand voor een label dat
      wordt beheerd door de beveiligingsbeleidsmodule Biba, met een
      waarde van <quote>low</quote>.</para>

    <para>Een aantal beleidsmodules die in &os; de mogelijkheid voor
      labelen ondersteunen, bieden drie specifieke voorgedefinieerde
      labels: low, high en equal.  Hoewel ze in verschillende
      beleidsmodules op een andere manier toegangscontrole afdwingen,
      is er de garantie dat het label <literal>low</literal> de laagst
      mogelijke instelling is, het label <literal>equal</literal> het
      subject of object uitschakelt of ongemoeid laat en het label
      <literal>high</literal> de hoogst mogelijk instelling afdwingt
      die beschikbaar is in de beleidsmodules Biba en
      <acronym>MLS</acronym>.</para>

    <para>Binnen een bestandssysteemomgeving met een enkelvoudig label
      kan er maar &eacute;&eacute;n label gebruikt worden op objecten.
      Hiermee wordt een set van toegangsrechten op het hele systeem
      opgelegd en dat is voor veel omgevingen voldoende.  Er zijn
      echter een aantal gevallen waarin het wenselijk is meervoudige
      label in te stellen op subject of objecten in het
      bestandssysteem.  In die gevallen kan de optie
      <option>multilabel</option> meergegeven worden aan
      &man.tunefs.8;.</para>

    <para>In het geval van Biba en <acronym>MLS</acronym>, kan er een
      numeriek label gezet worden om het precieze niveau van de
      hi&euml;rarchische controle kan worden aangegeven.  Dit
      numerieke niveau wordt gebruikt om informatie in verschillende
      groepen te partitioneren of te sorteren voor het klassificeren
      voor het geven van toegang voor een bepaalde groep of een groep
      van een hoger niveau.</para>

    <para>In de meeste gevallen stelt een beheerder alleen maar een
      enkelvoudig label in dat door het hele bestandssysteem wordt
      gebruikt.</para>

    <para><emphasis>Wacht eens, dat klinkt net als
      <acronym>DAC</acronym>!  <acronym>MAC</acronym> gaf de controle
      toch strikt aan de beheerder?</emphasis>  Dat klopt nog steeds,
      <username>root</username> heeft nog steeds de controle in handen
      en is degene die het beleid instelt zodat gebruikers in de
      juiste categorie en/of toegangsniveau's worden geplaatst.
      Daarnaast kunnen veel beleidsmodules ook de gebruiker
      <username>root</username> beperkingen opleggen.  Dan wordt de
      controle overgedragen aan een groep, maar kan
      <username>root</username> de instellingen op ieder gewenst
      moment intrekken of wijzigen.  Dit is het
      hi&euml;rarchische/toegangsmodel dat wordt afgedekt door
      beleidseenheden zoals Biba en <acronym>MLS</acronym>.</para>

    <sect2>
      <title>Labelinstellingen</title>

      <para>Vrijwel alle aspecten voor het instellen van labelbeleid
	worden uitgevoerd met basissysteemprogramma's.  Die commando's
	bieden een eenvoudige interface voor object- of
	subjectinstellingen of de manipulatie en verificatie van de
	instellingen.</para>

      <para>Alle instellingen kunnen gemaakt worden met de
	hulpprogramma's &man.setfmac.8; and &man.setpmac.8;.
	Het commando <command>setfmac</command> wordt gebruikt om
	<acronym>MAC</acronym> labels op systeemobjecten in te stellen
	en <command>setpmac</command> voor het instellen van de labels
	op on systeemsubjects:</para>

      <screen>&prompt.root; <userinput>setfmac biba/high test</userinput></screen>

      <para>Als het bovenstaande commando geen foutmeldingen heeft
	veroorzaakt, dan komt er een prompt terug.  Deze commando's
	geven altijd geen uitvoer, tenzij er een fout is tegengekomen;
	net als bij &man.chmod.1; en &man.chown.8;.  In sommige
	gevallen kan de foutmelding <errorname>Permission
	  denied</errorname> zijn en deze ontstaat meestal als het
	label wordt ingesteld of gewijzigd op een object dat is
	beperkt.
	
	<footnote>
	  <para>Andere condities kunnen andere foutmeldingen
	    veroorzaken.  De gebruiker die het object probeert te
	    herlabelen kan bijvoorbeeld niet de eigenaar zijn, het
	    object kan niet bestaan of alleen-lezen zijn.  Een
	    verplichte beleidsinstelling kan het proces niet toestaan
	    om een bestand te herlabelen, misschien om een
	    eigenschap van het bestand, een eigenschap van het proces
	    of een eigenschap van de voorgestelde nieuwe waarde van het
	    label.  Een gebruiker die met een lage integriteit draait,
	    probeert bijvoorbeeld het label van een bestand met een
	    hoge integriteit te veranderen of diezelfde gebruiker kan
	    proberen het label van een bestand met lage integriteit te
	    wijzigen in een label van een hoge integriteit.</para>
	</footnote>

	De systeembeheerder kan de volgende commando's gebruiken om dit
	probleem te voorkomen:</para>

      <screen>&prompt.root; <userinput>setfmac biba/high test</userinput>
<errorname>Permission denied</errorname>
&prompt.root; <userinput>setpmac biba/low setfmac biba/high test</userinput>
&prompt.root; <userinput>getfmac test</userinput>
test: biba/high</screen>

      <para>Hierboven is te zien dat <command>setpmac</command>
	gebruikt kan worden om aan de instellingen van een
	beleidsmodules voorbij te gaan door een ander label toe te
	wijzen aan het aangeroepen proces.  Het hulpprogramma
	<command>getpmac</command> wordt meestal toegepast op processen
	die al draaien, zoals <application>sendmail</application>:
	hoewel er een proces ID nodig is in plaats van een commando, is
	de logica gelijk.  Als gebruikers proberen een bestand te
	manipuleren waar ze geen toegang to hebben, onderhevig aan de
	regels van een geladen beleidsmodule, dan wordt de foutmelding
	<errorname>Operation not permitted</errorname> weergegeven door
	de functie <function>mac_set_link</function>.</para>

      <sect3>
	<title>Labeltypen</title>

	<para>Met de beleidsmodules &man.mac.biba.4;, &man.mac.mls.4;
	  en &man.mac.lomac.4; is het mogelijk eenvoudige labels toe te
	  wijzen.  Die kunnen hoog, gelijk aan en laag zijn.  Hieronder
	  een beschrijving van wat die labels betekenen:</para>

	<itemizedlist>
	  <listitem>
	    <para>Het label <literal>low</literal> is de laagst
	      mogelijke labelinstellingen die een object of subject kan
	      hebben.  Deze instelling op objecten of subjects blokkeert
	      hun toegang tot objecten or subjects met de markering
	      hoog.</para>
	  </listitem>

	  <listitem>
	    <para>Het label <literal>equal</literal> hoort alleen
	      ingesteld te worden op objecten die uitgesloten moeten
	      worden van een beleidsinstelling.</para>
	  </listitem>

	  <listitem>
	    <para>Het label <literal>high</literal> geeft een object of
	      subject de hoogst mogelijke instelling.</para>
	  </listitem>
	</itemizedlist>

	<para>Afhankelijke van iedere beleidsmodule heeft iedere
	  instelling een ander informatiestroomdirectief tot gevolg.
	  Het lezen van de hulppagina's die van toepassing zijn geeft
	  inzicht in de precieze eigenschappen van de standaard
	  labelinstellingen.</para>

        <sect4>
	  <title>Gevorderde labelinstellingen</title>

	  <para>Dit zijn numerieke graden die gebruikt worden voor
	    <literal>vergelijking:afdeling+afdeling</literal>;.</para>

	  <programlisting>biba/10:2+3+6(5:2+3-20:2+3+4+5+6)</programlisting>

	  <para>Het bovenstaande kan dus geiuml;nterpreteerd worden
	    als:</para>

	  <para><quote>Biba Policy Label</quote>/<quote>Graad
	      10</quote>:<quote>Afdelingen 2, 3 en 6</quote>:
	    (<quote>graad 5 ...</quote>)</para>

	  <para>In dit voorbeeld is de eerste graad de
	    <quote>effectieve graad</quote> met de <quote>effectieve
	    afdelingen</quote>, de tweede graag is is lage graagd en de
	    laatste is de hoge graad.  In de meeste instellingen worden
	    deze instellingen niet gebruikt.  Ze zijn inderdaad
	    instellingen voor gevorderden.</para>

	  <para>Als ze worden toegepast op systeemobjecten, hebben ze
	    alleen een huidige graad/afdeling in vergelijking met
	    systeemsubjects, omdat ze de reikwijdte van rechten in het
	    systeem en op netwerkinterfaces aangeven, waar ze gebruikt
	    worden door toegangscontrole.</para>

	  <para>De graad en afdelingen in een subject en object paar
	    wordt gebruikt om een relatie te construeren die ook wel
	    <quote>dominantie</quote> heet, waar een subject een object
	    domineert, geen van beiden domineert, of beiden elkaar
	    domineren.  Het geval <quote>beiden domineren</quote> komt
	    voor als de twee labels gelijk zijn.  Vanwege de natuur van
	    de informatiestroom van Biba, heeft een gebruiker rechten
	    op een set van afdelingen, <quote>need to know</quote>, die
	    overeen zouden kunnen komen met projecten, maar objecten
	    hebben ook een set van afdelingen.  Gebruikers dienen
	    wellicht hun rechten te subsetten met <command>su</command>
	    of <command>setpmac</command> om toegang te krijgen tot
	    objecten in een afdeling die geen verboden terrein voor
	    ze zijn.</para>
	</sect4>
      </sect3>

      <sect3>
	<title>Gebruikers en labelinstellingen</title>

	<para>Gebruikers moeten zelf labels hebben, zodat hun bestanden
	  en processen juist kunnen samenwerken met het
	  beveiligingsbeleid dat op een systeem is ingesteld.  Dit
	  wordt ingesteld via het bestand
	  <filename>login.conf</filename> door gebruik te maken van
	  aanmeldklassen.  Iedere beleidsmodule die labels gebruikt
	  maakt ook gebruik van de instelling voor
	  aanmeldklasse.</para>

	<para>Een voorbeeld dat iedere instelling uit de beleidsmodule
	  bevat is hieronder te zien:</para>

	<programlisting>default:\
        :copyright=/etc/COPYRIGHT:\
        :welcome=/etc/motd:\
        :setenv=MAIL=/var/mail/$,BLOCKSIZE=K:\
        :path=~/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:\
        :manpath=/usr/share/man /usr/local/man:\
        :nologin=/usr/sbin/nologin:\
        :cputime=1h30m:\
        :datasize=8M:\
        :vmemoryuse=100M:\
        :stacksize=2M:\
        :memorylocked=4M:\
        :memoryuse=8M:\
        :filesize=8M:\
        :coredumpsize=8M:\
        :openfiles=24:\
        :maxproc=32:\
        :priority=0:\
        :requirehome:\
        :passwordtime=91d:\
        :umask=022:\
        :ignoretime@:\
        :label=partition/13,mls/5,biba/10(5-15),lomac10[2]:</programlisting>

	<para>De optie <literal>label</literal> wordt gebruikt om het
	  standaardlabel voor aanmeldklasse in te stellen dat door
	  <acronym>MAC</acronym> wordt afgedwongen.  Het wordt
	  gebruikers nooit toegestaan deze waarde te wijzigen, dus kan
	  het gezien worden als niet optioneel vanuit het perspectief
	  van de gebruiker.  In de echte wereld besluit een beheerder
	  echter nooit iedere beleidsmodule te activeren.  Het wordt
	  sterk aangeraden de rest van die hoofdstuk te lezen alvorens
	  (een deel van) de bovenstaande instellingen te
	  implementeren.</para>

	<note>
	  <para>Gebruikers kunnen hun label wijzigen na het aanmelden,
	    maar dit is wel afhankelijk van de beperkingen van een
	    beleidsinstelling.  De instelling in het bovenstaande
	    voorbeeld is zodanig in de beleidseenheid Biba, dat de
	    minimale integriteit van een proces 5 en het maximum 15 is.
	    Standaard is het effectieve label 10.  Het proces draait
	    op niveau 10, totdat het label wordt gewijzigd, misschien
	    door een gebruiker die <command>setpmac</command> gebruikt,
	    bij het aanmelden beperkt tot de door Biba ingestelde
	    reeks.</para>
	</note>

	<para>In alle gevallen die de aanmeldklasse mogelijkheden
	  database opnieuw gebouwd te worden met
	  <command>cap_mkdb</command> na het wijzigen van
	  <filename>login.conf</filename>.  Dit wordt ook in alle
	  komende voorbeelden en beschijvingen gedaan.</para>

	<para>Het is belangrijk op te merken dat in veel gevallen
	  implementaties te maken hebben met bijzonder grote aantallen
	  gebruikers waardoor er een aantal verschillende
	  aanmeldklassen nodig zijn.  Het is dan nodig gedetailleerd
	  te plannen omdat de implementatie anders bijzonder complex
	  wordt om te onderhouden.</para>

	<para>Toekomstige versies van &os; kennen een nieuwe manier om
	  om te gaan met het koppelen van gebruikers aan labels.  Dit
	  komt echter niet beschikbaar tot enige tijd na
	  &os;&nbsp;5.3.</para>
      </sect3>

      <sect3>
	<title>Netwerkinterfaces en labelinstellingen</title>

	<para>Labels kunnen ook ingesteld worden op netwerkinterfaces
	  om te assisteren bij het controleren van het stromen van
	  gegevens over het netwerk.  In alle gevallen werken ze op
	  dezelfde wijze als het beleid werkt ten aanzien van objecten.
	  Gebruikers met bijvoorbeeld een hoge instelling in
	  <literal>biba</literal> krijgen geen toegang tot interfaces
	  met een laag label.</para>

	<para>Het <option>maclabel</option> kan meegegeven worden aan
	  <command>ifconfig</command> als het <acronym>MAC</acronym>
	  label op netwerkinterfaces wordt ingesteld:</para>

	<screen>&prompt.root; <userinput>ifconfig bge0 maclabel biba/equal</userinput></screen>

	<para>In het bovenstaande voorbeeld wordt het
	  <acronym>MAC</acronym> label van
	  <literal>biba/equal</literal> ingesteld op de &man.bge.4;
	  interface.  Als er een instelling wordt gebruikt die
	  gelijkvormig is aan <literal>biba/high(low-high)</literal>,
	  dan moet het volledige label worden ingegeven, anders treedt
	  er een fout op.</para>

	<para>Iedere beleidsmodule die labels ondersteunt een
	  instelling waarmee het <acronym>MAC</acronym> op
	  netwerkinterfaces kan worden uitgeschakeld.  Het label
	  instellen op <option>equal</option> heeft hetzelfde effect.
	  Deze instellingen zijn na te kijken in de uitvoer van
	  <command>sysctl</command>, de hulppagina van het beleid en
	  zelfs later in dit hoofdstuk.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Enkelvoudig label of meervoudig label?</title>

      <para>Standaard gebruikt een systeem de optie
	<option>singlelabel</option> option.  Wat betekent dit voor een
	beheerder?  Er zijn een aantal verschillen die allemaal hun
	eigen voor- en nadelen hebben voor de flexibiliteit in het
	beveiligingsmodel voor een systeem.</para>

      <para>Bij gebruik van <option>singlelabel</option> kan er maar
	&eacute;&eacute;n label, bijvoorbeeld
	<literal>biba/high</literal>, gebruikt worden voor ieder
	subject of object.  Hierdoor is er minder beheer nodig, maar de
	flexibiliteit voor beleid dat labels ondersteunt daalt erdoor.
	Veel beheerders willen de optie <option>multilabel</option>
	gebruiken in hun beveiligingsmodel.</para>

      <para>De optie <option>multilabel</option> staat ieder subject of
	object toe om zijn eigen onafhankelijke <acronym>MAC</acronym>
	label te hebben in plaats van de standaardoptie
	<option>singlelabel</option>, die maar &eacute;&eacute;n label
	toestaat op een hele partitie.  De labelopties
	<option>multilabel</option> en <option>single</option> zijn
	alleen verplicht voor de beleidseenheden die de mogelijkheid
	bieden om te labelen, waaronder de beleidsmorgelijkheden van
	Biba, Lomac, <acronym>MLS</acronym> en
	<acronym>SEBSD</acronym>.</para>

      <para>In veel gevallen hoeft <option>multilabel</option> niet\
	eens ingesteld te worden.  Stel er is de volgende situatie en
	beveiligingsmodel:</para>

      <itemizedlist>
	<listitem>
	  <para>&os; webserver die gebruik maakt van het
	    <acronym>MAC</acronym> framework en een mengeling van
	    verschillende beleidseenheden.</para>
	</listitem>

	<listitem>
	  <para>De webserver heeft maar een label nodig,
	  <literal>biba/high</literal>, voor alles in het systeem.
	    Hier is de optie <option>multilabel</option> voor het
	    bestandssysteem niet nodig, omdat een enkelvoudig label
	    altijd van toepassing is.</para>
	</listitem>

	<listitem>
	  <para>Maar omdat de machine als webserver dienst gaat doen,
	    dient de webserver te draaien als
	    <literal>biba/low</literal> om ****write up capabilities****
	    te voorkomen.  Later wordt beschreven hoe de Biba
	    beleidseenheid werkt, dus als de voorgaande opmerking wat
	    lastig te begrijpen is, lees dan verder en kom later nog
	    een keer terug.  De server zou een aparte partitie kunnen
	    gebruiken waarop <literal>biba/low</literal> van toepassing
	    kan zijn voor de meeste, zo niet alle, runtime statussen.
	    Er ontbreekt veel in dit voorbeeld, bijvoorbeeld de
	    restricties op gegevens en (gebruikers)instellingen.  Dit
	    was slechts een snel voorbeeld om de hiervoor aangehaalde
	    stelling te ondersteunen.</para>
	</listitem>
      </itemizedlist>

      <para>Als er een niet-labelende beleidseenheid wordt gebruikt,
	dan is de optie <option>multilabel</option> nooit verplicht.
	Hieronder vallen de beleidseenheden
	<literal>seeotheruids</literal>, <literal>portacl</literal> en
	<literal>partition</literal>.</para>

      <para>Bij gebruik van <option>multilabel</option> voor een
	partitie en het neerzetten van een beveiligingsmodel gebaseerd
	op <option>multilabel</option> functionaliteit gaat de deur
	open voor hogere administratieve overhead, omdat alles in een
	bestandssysteem een label krijgt.  Hieronder vallen mappen,
	bestanden en zelfs apparaatnodes.</para>

      <para>Het volgende commando stelt <option>multilabel</option> in
	op de bestandssystemen om meerdere labels te kunnen kringen.
	Dit kan alleen uitgevoerd worden in single user modus:</para>

      <screen>&prompt.root; <userinput>tunefs -l enable /</userinput></screen>

      <para>Dit is geen criterium voor het swap bestandssysteem.</para>

      <note>
	<para>Sommige gebruikers hebben problemen ondervonden met het
	  instelling van de vlag <option>multilabel</option> op de
	  rootpartitie.  Als dit het geval is, kijk dan naar <xref
	    linkend="mac-troubleshoot">.</para>
      </note>
    </sect2>

    <sect2>
      <title>MAC beheren met tunables</title>

      <para>Zonder dat er modules zijn geladen, kunnen er al onderdelen
	van <acronym>MAC</acronym> ingesteld worden met de
	<command>sysctl</command> interface.  Deze tunables worden
	hieronder beschreven en in alle gevallen betekent het getal een
	(1) ingeschakeld en nul (0) betekent uitgeschakeld:</para>

      <itemizedlist>
	<listitem>
	  <para><literal>security.mac.enforce_fs</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    bestandssysteembeleid af op bestandssystemen.</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_kld</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    kernellinkingbeleid af op de dynamische kernellinker (zie
	    &man.kld.4;).</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_network</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    netwerkbeleid af.</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_pipe</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    beleid op pipes af.</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_process</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    beleid af op processen die gebruik maken van inter-proces
	    communicatie.</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_socket</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    beleid op sockets af (zie &man.socket.2;).</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_system</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    beleid af op op systeemactiviteit zoals accounting en
	    herstarten.</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.enforce_vm</literal> staat
	    standaard op een (1) en dwingt <acronym>MAC</acronym>
	    beleid af op het virtuele geheugensysteem.</para>
	</listitem>
      </itemizedlist>

      <note>
	<para>Ieder beleid of <acronym>MAC</acronym> optie ondersteunt
	  tunables.  Die zijn in het algemeen te vinden in de
	  boomstructuur
	  <literal>security.mac.&lt;policyname&gt;</literal>.  Alle
	  tunables voor <acronym>MAC</acronym> zijn met het volgende
	  commando zichtbaar te maken:</para>

	<screen>&prompt.root; <userinput>sysctl -da | grep mac</userinput></screen>
      </note>

      <para>Dit moet opgevat worden als dat alle basis
	<acronym>MAC</acronym> beleidseenheden standaard worden
	afgedwonen.  Als de modules in de kernel zouden zijn gebouwd,
	zou een systeem bijzonder sterk zijn dichtgetimmerd en zeer
	waarschijnlijk niet kunnen communiceren met een lokaal netwerk
	of verbonden kunnen worden met internet, enzovoort.  Om deze
	reden is het inbouwen van modules in de kernel niet volledig
	aan te raden.  Niet omdat het de mogelijkheid om opties direct
	uit te schakelen met <command>sysctl</command> limiteert, maar
	het stelt een beheerder in staat om beleid direct aan of uit te
	schakelen zonder dat een nieuw systeem gebouwd en
	ge&iuml;nstalleerd hoeft te worden.</para>
    </sect2>
  </sect1>

  <sect1 id="mac-modules">
    <title>Module-instellingen</title>

    <para>Iedere module uit het <acronym>MAC</acronym> framework kan
      zoals zojuist aangegeven in de kernel worden gecompileerd of als
      runtime kernelmodule geladen worden.  De geadviseerde methode is
      de naam van een module toevoegen aan het bestand
      <filename>/boot/loader.conf</filename> zodat die wordt geladen
      tijdens de eerste fase van het starten van een systeem.</para>

    <para>In de volgende onderdelen worden de verschillende
      <acronym>MAC</acronym> modules en hun mogelijkheden beschreven.
      De implementatie in een specifieke omgeving wordt in dit
      hoofdstuk ook meegenomen.  Een aantal modules ondersteunt het
      gebruik van labelen, wat het beperken van toegang is door een
      label als <quote>dit is toegestaan en dat niet</quote> af te
      dwingen.  Een labelinstellingenbestand kan bepalen hoe bestanden
      kunnen worden benaderd, hoe netwerkcommunicatie wordt
      uitgewisseld en meer.  In het vorige onderdeel is beschreven hoe
      de vlag <option>multilabel</option> ingesteld kon worden op
      bestandssystemen om per bestand of per partitie toegangscontrole
      in te schakelen.</para>

    <para>Een instelling met een enkelvoudig label zou maar
      &eacute;&eacute;n label over een heel systeem afdwingen, daarom
      wordt de optie <command>tunefs</command>
      <option>multilabel</option> genoemd.</para>

    <sect2 id="mac-seeotheruids">
      <title>MAC module seeotheruids</title>

      <indexterm><primary>MAC zie andere UID's beleidsinstelling</primary></indexterm>

      <para>Modulenaam: <filename>mac_seeotheruids.ko</filename></para>

      <para>Kernelinstelling: <literal>options
	  MAC_SEEOTHERUIDS</literal></para>

      <para>Bootoptie:
	<literal>mac_seeotheruids_load="YES"</literal></para>

      <para>De module &man.mac.seeotheruids.4; imiteert de
	<command>sysctl</command> tunables
	<literal>security.bsd.see_other_uids</literal> en
	<literal>security.bsd.see_other_gids</literal> en bereidt deze
	uit.  Voor deze optie hoeven geen labels ingesteld te worden
	voor de instelling en hij werkt transparant met de andere
	modules.</para>

      <para>Na het laden van de module kunnen de volgende
	<command>sysctl</command> tunables gebruikt worden om de opties
	in te stellen:</para>

      <itemizedlist>
	<listitem>
	  <para><literal>security.mac.seeotheruids.enabled</literal>
	    schakelt de opties van de module in en gebruikt de
	    standaardinstellingen.  Deze standaardinstellingen
	    ontzeggen gebruikt de mogelijkheid processen en sockets te
	    zien die in eigendom zijn van andere gebruikers.</para>
	</listitem>

	<listitem>
	  <para><literal>security.mac.seeotheruids.specificgid_enabled</literal>
	    staat toe dat een bepaalde groep niet onder dit beleid
	    valt.  Om bepaalde groepen van dit beleid uit te sluiten,
	    kan de <command>sysctl</command> tunable
	    <literal>security.mac.seeotheruids.specificgid=<replaceable>XXX</replaceable></literal>
	     gebruikt worden.  In het bovenstaande voorbeeld dient
	    <replaceable>XXX</replaceable> vervangen te worden door het
	    numerieke ID van een groep die uitgesloten moet worden van
	    de beleidsinstelling.</para>
	</listitem>

	<listitem>
	  <para>
	    <literal>security.mac.seeotheruids.primarygroup_enabled</literal>
	    wordt gebruikt om specifieke primaire groepen uit te
	    sluiten van dit beleid.  Als deze tunable wordt gebruikt,
	    mag
	    <literal>security.mac.seeotheruids.specificgid_enabled</literal>
	    niet gebruikt worden.</para>
	</listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 id="mac-bsdextended">
    <title>MAC module bsdextended</title>

    <indexterm>
      <primary>MAC</primary>

      <secondary>bestandssysteem firewall beleidsinstelling</secondary>
    </indexterm>

    <para>Modulenaam: <filename>mac_bsdextended.ko</filename></para>

    <para>Kernelinstelling:
      <literal>options MAC_BSDEXTENDED</literal></para>

    <para>Bootoptie:
      <literal>mac_bsdextended_load="YES"</literal></para>

    <para>De module &man.mac.bsdextended.4; dwingt de
      bestandssysteemfirewall af.  Het beleid van deze module biedt een
      uitbreiding van het standaard rechtenmodel voor bestandssystemen,
      waardoor een beheerder een firewallachtige set met regels kan
      maken om bestanden, programma's en mappen in de
      bestandssysteemhierarchie te beschermen.</para>

    <para>Het beleid kan gemaakt worden met het hulpprogramma
      &man.ugidfw.8;, dat een syntaxis heeft die lijkt op die van
      &man.ipfw.8;.  Meer hulpprogramma's kunnen geschreven worden met
      de functies in de bibliotheek &man.libugidfw.3;.</para>

    <para>Bij het werken met deze module dient bijzondere
      voorzichtigheid in acht te worden genomen.  Verkeerd gebruik kan
      toegang tot bepaalde delen van het bestandssysteem
      blokkeren.</para>

    <sect2>
      <title>Voorbeelden</title>

      <para>Nadat de module &man.mac.bsdextended.4; is geladen, kan met
	het volgende commando de huidige regels getoond worden:</para>

      <screen>&prompt.root; <userinput>ugidfw list</userinput>
0 slots, 0 rules</screen>

      <para>Zoals verwacht zijn er geen regels ingesteld.  Dit betekent
	dat alles nodig steeds volledig toegankelijk is.  Om een regel
	te maken die alle toegang voor alle gebruikers behalve
	<username>root</username> ontzegt:</para>

      <screen>&prompt.root; <userinput>ugidfw add subject not uid root new object not uid root mode n</userinput></screen>

      <note>
	<para>In versies voor &os;&nbsp;5.3 bestond de parameter
	  <parameter>add</parameter> niet.  In die gevallen dient in
	  plaats daarvan <parameter>set</parameter> gebruikt te worden
	  als in het onderstaande voorbeeld.</para>
      </note>

      <para>Dit is een slecht idee, omdat het voorkomt dat alle
	gebruikers ook maar het meest eenvoudige commando kunnen
	uitvoeren, zoals <command>ls</command>.  Een betere lijst van
	regels zou kunnen zijn:</para>

      <screen>&prompt.root; <userinput>ugidfw set 2 subject uid <replaceable>user1</replaceable> object uid <replaceable>user2</replaceable> mode n</userinput>
&prompt.root; <userinput>ugidfw set 3 subject uid <replaceable>user1</replaceable> object gid <replaceable>user2</replaceable> mode n</userinput></screen>

      <para>Hiermee wordt alle toegang, inclusief het tonen van
	mapinhoud, tot de thuismap van
	<username><replaceable>user2</replaceable></username> ontzegd
	voor de gebruikersnaam <username>user1</username>.</para>

      <para>In plaats van <username>user1</username>, zou <option>not
	  uid <replaceable>user2</replaceable></option> kunnen worden
	opgegeven.  Hierdoor worden dezelfde restricties als hierboven
	actief voor alle gebruikers in plaats van voor slechts een
	gebruiker.</para>

      <note>
	<para>De gebruiker <username>root</username> blijft onaangetast
	  door deze wijzigingen.</para>
      </note>

      <para>Met deze informatie zou een basisbegrip moeten zijn
	ontstaan over hoe de module &man.mac.bsdextended.4; gebruikt
	kan worden om een bestandssysteem te beschermen.  Meer
	informatie staat in de hulppagina's van &man.mac.bsdextended.4;
	en &man.ugidfw.8;.</para>
    </sect2>
  </sect1>

  <sect1 id="mac-ifoff">
    <title>MAC module ifoff</title>

    <indexterm><primary>MAC Interface Silencing beleidsinstelling</primary></indexterm>

    <para>Modulenaam: <filename>mac_ifoff.ko</filename></para>

    <para>Kernelinstelling:
      <literal>options MAC_IFOFF</literal></para>

    <para>Bootoptie: <literal>mac_ifoff_load="YES"</literal></para>

    <para>!!!The &man.mac.ifoff.4; module exists solely to disable network
      interfaces on the fly and keep network interfaces from being
      brought up during the initial system boot.  It does not require
      any labels to be set up on the system, nor does it have a
      dependency on other <acronym>MAC</acronym> modules.</para>

    <para>Most of the control is done through the
      <command>sysctl</command> tunables listed below.</para>

    <itemizedlist>
      <listitem>
	<para><literal>security.mac.ifoff.lo_enabled</literal> will
	  enable/disable all traffic on the loopback (&man.lo.4;)
	  interface.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.ifoff.bpfrecv_enabled</literal> will
	  enable/disable all traffic on the Berkeley Packet Filter
	  interface (&man.bpf.4;)</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.ifoff.other_enabled</literal> will
	  enable/disable traffic on all other interfaces.</para>
      </listitem>
    </itemizedlist>

    <para>One of the most common uses of &man.mac.ifoff.4; is network
      monitoring in an environment where network traffic should not
      be permitted during the boot sequence.  Another suggested use
      would be to write a script which uses
      <filename role="package">security/aide</filename> to automatically
      block network traffic if it finds new or altered files in
      protected directories.</para>
  </sect1>

  <sect1 id="mac-portacl">
    <title>MAC module portacl</title>

    <indexterm><primary>MAC poort toegangscontrolelijst beleidsinstelling</primary></indexterm>

    <para>Modulenaam: <filename>mac_portacl.ko</filename></para>

    <para>Kernelinstelling:
      <literal>MAC_PORTACL</literal></para>

    <para>Bootoptie: <literal>mac_portacl_load="YES"</literal></para>

    <para>The &man.mac.portacl.4; module is used to limit binding to
      local <acronym>TCP</acronym> and <acronym>UDP</acronym> ports
      using a variety of <command>sysctl</command> variables.  In
      essence &man.mac.portacl.4; makes it possible to allow
      non-<username>root</username> users to bind to specified
      privileged ports, i.e. ports fewer than 1024.</para>

    <para>Once loaded, this module will enable the
      <acronym>MAC</acronym> policy on all sockets.  The following
      tunables are available:</para>

    <itemizedlist>
      <listitem>
	<para><literal>security.mac.portacl.enabled</literal> will
	  enable/disable the policy completely.<footnote><para>Due to
	  a bug the <literal>security.mac.portacl.enabled</literal>
	  <command>sysctl</command> variable will not work on
	  &os;&nbsp;5.2.1 or previous releases.</para></footnote></para>
      </listitem>

      <listitem>
	<para><literal>security.mac.portacl.port_high</literal> will set
	  the highest port number that &man.mac.portacl.4;
	  will enable protection for.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.portacl.suser_exempt</literal> will,
	  when set to a non-zero value, exempt the
	  <username>root</username> user from this policy.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.portacl.rules</literal> will
	  specify the actual mac_portacl policy; see below.</para>
      </listitem>
    </itemizedlist>

    <para>The actual <literal>mac_portacl</literal> policy, as
      specified in the <literal>security.mac.portacl.rules</literal>
      sysctl, is a text string of the form:
      <literal>rule[,rule,...]</literal> with as many rules as
      needed.  Each rule is of the form:
      <literal>idtype:id:protocol:port</literal>.  The
      <parameter>idtype</parameter> parameter can be
      <literal>uid</literal> or <literal>gid</literal> and used to
      interpret the <parameter>id</parameter> parameter as either a
      user id or group id, respectively.  The
      <parameter>protocol</parameter> parameter is used to determine if
      the rule should apply to <acronym>TCP</acronym> or
      <acronym>UDP</acronym> by setting the parameter to
      <literal>tcp</literal> or <literal>udp</literal>.  The final
      <parameter>port</parameter> parameter is the port number to allow
      the specified user or group to bind to.</para>

    <note>
      <para>Since the ruleset is interpreted directly by the kernel
	only numeric values can be used for the user ID, group ID, and
	port parameters.  I.e. user, group, and port service names
	cannot be used.</para>
    </note>

    <para>By default, on &unix;-like systems, ports fewer than 1024
      can only be used by/bound to privileged processes,
      i.e. those run as <username>root</username>.  For
      &man.mac.portacl.4; to allow non-privileged processes to bind
      to ports below 1024 this standard &unix; restriction has to be
      disabled.  This can be accomplished by setting the &man.sysctl.8;
      variables <literal>net.inet.ip.portrange.reservedlow</literal> and
      <literal>net.inet.ip.portrange.reservedhigh</literal>
      to zero.</para>

    <para>See the examples below or review the &man.mac.portacl.4;
      manual page for further information.</para>

    <sect2>
      <title>Voorbeelden</title>

      <para>The following examples should illuminate the above
	discussion a little better:</para>

      <screen>&prompt.root; <userinput>sysctl security.mac.portacl.port_high=1023</userinput>
&prompt.root; <userinput>sysctl net.inet.ip.portrange.reservedlow=0 net.inet.ip.portrange.reservedhigh=0</userinput></screen>

      <para>First we set &man.mac.portacl.4; to cover the standard
	privileged ports and disable the normal &unix; bind
	restrictions.</para>

      <screen>&prompt.root; <userinput>sysctl security.mac.portacl.suser_exempt=1</userinput></screen>

      <para>The <username>root</username> user should not be crippled
	by this policy, thus set the
	<literal>security.mac.portacl.suser_exempt</literal> to a
	non-zero value.  The &man.mac.portacl.4; module
	has now been set up to behave the same way &unix;-like systems
	behave by default.</para>

      <screen>&prompt.root; <userinput>sysctl security.mac.portacl.rules=uid:80:tcp:80</userinput></screen>

      <para>Allow the user with <acronym>UID</acronym> 80 (normally
	the <username>www</username> user) to bind to port 80.
	This can be used to allow the <username>www</username>
	user to run a web server without ever having
	<username>root</username> privilege.</para>

      <screen>&prompt.root; <userinput>sysctl security.mac.portacl.rules=uid:1001:tcp:110,uid:1001:tcp:995</userinput></screen>

      <para>Permit the user with the <acronym>UID</acronym> of
	1001 to	bind to the <acronym>TCP</acronym> ports 110
	(<quote>pop3</quote>) and 995 (<quote>pop3s</quote>).
	This will permit this user to start a server that accepts
	connections on ports 110 and 995.</para>
    </sect2>
  </sect1>

  <sect1 id="mac-labelingpolicies">
    <title>MAC beleidsinstellingen met labelmogelijkheden</title>

    <para>The next few sections will discuss <acronym>MAC</acronym>
      policies which use labels.</para>

    <para>From here on this chapter will focus on the features
      of &man.mac.biba.4;, &man.mac.lomac.4;,
      &man.mac.partition.4;, and &man.mac.mls.4;.</para>

    <note>
      <para>This is an example configuration only and should not be
	considered for a production implementation.  The goal is
	to document and show the syntax as well as examples for
	implementation and testing.</para>
    </note>

    <para>For these policies to work correctly several
      preparations must be made.</para>

    <sect2 id="mac-prep">
      <title>Voorbereiding voor labelbeleidsinstellingen</title>

      <para>The following changes are required in the
	<filename>login.conf</filename> file:</para>

      <itemizedlist>
	<listitem>
	  <para>An <literal>insecure</literal> class, or another
	    class of similar type, must be
	    added.  The login class of <literal>insecure</literal>
	    is not required and just used as an example here; different
	    configurations may use another class name.</para>
	</listitem>

	<listitem>
	  <para>The <literal>insecure</literal> class should have
	    the following settings and definitions.  Several of these
	    can be altered but the line which defines the default
	    label is a requirement and must remain.</para>

	  <programlisting>insecure:\
        :copyright=/etc/COPYRIGHT:\
        :welcome=/etc/motd:\
        :setenv=MAIL=/var/mail/$,BLOCKSIZE=K:\
        :path=~/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:\
        :manpath=/usr/share/man /usr/local/man:\
        :nologin=/usr/sbin/nologin:\
        :cputime=1h30m:\
        :datasize=8M:\
        :vmemoryuse=100M:\
        :stacksize=2M:\
        :memorylocked=4M:\
        :memoryuse=8M:\
        :filesize=8M:\
        :coredumpsize=8M:\
        :openfiles=24:\
        :maxproc=32:\
        :priority=0:\
        :requirehome:\
        :passwordtime=91d:\
        :umask=022:\
        :ignoretime@:\
        :label=partition/13,mls/5,biba/low:</programlisting>

	  <para>The &man.cap.mkdb.1; command needs to be ran on
	    &man.login.conf.5; before any of the
	    users can be switched over to the new class.</para>

	  <para>The <username>root</username> username should also be placed
	    into a login class; otherwise, almost every command
	    executed by <username>root</username> will require the
	    use of <command>setpmac</command>.</para>

	  <warning>
	    <para>Rebuilding the <filename>login.conf</filename>
	      database may cause some errors later with the daemon
	      class.  Simply uncommenting the daemon account and
	      rebuilding the database should alleviate these
	      issues.</para>
	  </warning>
	</listitem>

	<listitem>
	  <para>Ensure that all partitions on which
	    <acronym>MAC</acronym> labeling will be implemented support
	    the <option>multilabel</option>.  We must do this because
	    many of the examples here contain different labels for
	    testing purposes.  Review the output from the
	    <command>mount</command> command as a precautionary
	    measure.</para>
	</listitem>

	<listitem>
	  <para>Switch any users who will have the higher security
	    mechanisms enforced over to the new user class.  A quick
	    run of &man.pw.8; or &man.vipw.8; should do the
	    trick.</para>
	</listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 id="mac-partition">
    <title>MAC module partition</title>

    <indexterm><primary>MAC procespartitionering beleidsinstelling</primary></indexterm>

    <para>Modulenaam: <filename>mac_partition.ko</filename></para>

    <para>Kernelinstelling:
      <literal>options MAC_PARTITION</literal></para>

    <para>Bootoptie:
      <literal>mac_partition_load="YES"</literal></para>

    <para>The &man.mac.partition.4; policy will drop processes into
      specific <quote>partitions</quote> based on their
      <acronym>MAC</acronym> label.  Think of it as a special
      type of &man.jail.8;, though that is hardly a worthy
      comparison.</para>

    <para>This is one module that should be added to the
      &man.loader.conf.5; file so that it loads
      and enables the policy during the boot process.</para>

    <para>Most configuration for this policy is done using
      the &man.setpmac.8; utility which will be explained below.
      The following <command>sysctl</command> tunable is
      available for this policy:</para>

    <itemizedlist>
      <listitem>
	<para><literal>security.mac.partition.enabled</literal> will
	  enable the enforcement of <acronym>MAC</acronym> process
	  partitions.</para>
      </listitem>
    </itemizedlist>

    <para>When this policy is enabled, users will only be permitted
      to see their processes but will not be permitted to work with
      certain utilities.  For instance, a user in the
      <literal>insecure</literal> class above will not be permitted
      to access the <command>top</command> command as well as many
      other commands that must spawn a process.</para>

    <para>To set or drop utilities into a partition label, use the
      <command>setpmac</command> utility:</para>

    <screen>&prompt.root; <userinput>setpmac partition/13 top</userinput></screen>

    <para>This will add the <command>top</command> command to the
      label set on users in the <literal>insecure</literal> class.
      Note that all processes spawned by users
      in the <literal>insecure</literal> class will stay in the
      <literal>partition/13</literal> label.</para>

    <sect2>
      <title>Voorbeelden</title>

      <para>The following command will show you the partition label
	and the process list:</para>

      <screen>&prompt.root; <userinput>ps Zax</userinput></screen>

      <para>This next command will allow the viewing of another
	user's process partition label and that user's currently
	running processes:</para>

      <screen>&prompt.root; <userinput>ps -ZU trhodes</userinput></screen>

      <note>
	<para>Users can see processes in <username>root</username>'s
	  label unless the &man.mac.seeotheruids.4; policy is
	  loaded.</para>
      </note>

      <para>A really crafty implementation could have all of the
	services disabled in <filename>/etc/rc.conf</filename> and
	started by a script that starts them with the proper
	labeling set.</para>

      <note>
	<para>The following policies support integer settings
	  in place of the three default labels offered.  These options,
	  including their limitations, are further explained in
	  the module manual pages.</para>
      </note>
    </sect2>
  </sect1>

  <sect1 id="mac-mls">
    <title>MAC module meerlagen beveiliging</title>

    <indexterm><primary>MAC Multi-Level Security Policy</primary></indexterm>

    <indexterm><primary>MAC meerlaagse beveiliging beleidsinstelling</primary></indexterm>

    <para>Modulenaam: <filename>mac_mls.ko</filename></para>

    <para>Kernelinstelling:
      <literal>options MAC_MLS</literal></para>

    <para>Bootoptie: <literal>mac_mls_load="YES"</literal></para>

    <para>The &man.mac.mls.4; policy controls access between subjects
      and objects in the system by enforcing a strict information
      flow policy.</para>

    <para>In <acronym>MLS</acronym> environments, a
      <quote>clearance</quote> level is set in each subject or objects
      label, along with compartments.  Since these clearance or
      sensibility levels can reach numbers greater than six thousand;
      it would be a daunting task for any system administrator to
      thoroughly configure each subject or object.  Thankfully, three
      <quote>instant</quote> labels are already included in this
      policy.</para>

    <para>These labels are <literal>mls/low</literal>,
      <literal>mls/equal</literal> and <literal>mls/high</literal>.
      Since these labels are described in depth in the manual page,
      they will only get a brief description here:</para>

    <itemizedlist>
      <listitem>
	<para>The <literal>mls/low</literal> label contains a low
	  configuration which permits it to be dominated by all other
	  objects.  Anything labeled with <literal>mls/low</literal>
	  will have a low clearance level and not be permitted to access
	  information of a higher level.  In addition, this label will
	  prevent objects of a higher clearance level from writing or
	  passing information on to them.</para>
      </listitem>

      <listitem>
	<para>The <literal>mls/equal</literal> label should be
	  placed on objects considered to be exempt from the
	  policy.</para>
      </listitem>

      <listitem>
	<para>The <literal>mls/high</literal> label is the highest level
	  of clearance possible.  Objects assigned this label will
	  hold dominance over all other objects in the system; however,
	  they will not permit the leaking of information to objects
	  of a lower class.</para>
      </listitem>
    </itemizedlist>

    <para><acronym>MLS</acronym> provides for:</para>

    <itemizedlist>
      <listitem>
	<para>A hierarchical security level with a set of non
	  hierarchical categories;</para>
      </listitem>

      <listitem>
	<para>Fixed rules: no read up, no write down (a subject can
	  have read access to objects on its own level or below, but
	  not above.  Similarly, a subject can have write access to
	  objects on its own level or above but not beneath.);</para>
      </listitem>

      <listitem>
	<para>Secrecy (preventing inappropriate disclosure
	  of data);</para>
      </listitem>

      <listitem>
	<para>Basis for the design of systems that concurrently handle
	  data at multiple sensitivity levels (without leaking
	  information between secret and confidential).</para>
      </listitem>
    </itemizedlist>

    <para>The following <command>sysctl</command> tunables are
      available for the configuration of special services and
      interfaces:</para>

    <itemizedlist>
      <listitem>
	<para><literal>security.mac.mls.enabled</literal> is used to
	  enable/disable the <acronym>MLS</acronym> policy.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.mls.ptys_equal</literal> will label
	  all &man.pty.4; devices as <literal>mls/equal</literal> during
	  creation.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.mls.revocation_enabled</literal> is
	  used to revoke access to objects after their label changes
	  to a label of a lower grade.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.mls.max_compartments</literal> is
	  used to set the maximum number of compartment levels with
	  objects; basically the maximum compartment number allowed
	  on a system.</para>
      </listitem>
    </itemizedlist>

    <para>To manipulate the <acronym>MLS</acronym> labels, the
      &man.setfmac.8; command has been provided.  To assign a label
      to an object, issue the following command:</para>

    <screen>&prompt.root; <userinput>setfmac mls/5 test</userinput></screen>

    <para>To get the <acronym>MLS</acronym> label for the file
      <filename>test</filename> issue the following command:</para>

    <screen>&prompt.root; <userinput>getfmac test</userinput></screen>

    <para>This is a summary of the <acronym>MLS</acronym>
      policy's features.  Another approach is to create a master policy
      file in <filename class="directory">/etc</filename> which
      specifies the <acronym>MLS</acronym> policy information and to
      feed that file into the <command>setfmac</command> command.  This
      method will be explained after all policies are covered.</para>

    <para>Observations: an object with lower clearance is unable to
      observe higher clearance processes.  A basic policy would be
      to enforce <literal>mls/high</literal> on everything not to be
      read, even if it needs to be written.  Enforce
      <literal>mls/low</literal> on everything not to be written, even
      if it needs to be read.  And finally enforce
      <literal>mls/equal</literal> on the rest.  All users marked
      <literal>insecure</literal> should be set at
      <literal>mls/low</literal>.</para>
  </sect1>

  <sect1 id="mac-biba">
    <title>MAC module Biba</title>

    <indexterm><primary>MAC Biba Integrity Policy</primary></indexterm>

    <indexterm><primary>MAC Biba integriteit beleidsinstelling</primary></indexterm>

    <para>Modulenaam: <filename>mac_biba.ko</filename></para>

    <para>Kernelinstelling: <literal>options MAC_BIBA</literal></para>

    <para>Bootoptie: <literal>mac_biba_load="YES"</literal></para>

    <para>The &man.mac.biba.4; module loads the <acronym>MAC</acronym>
      Biba policy.  This policy works much like that of the
      <acronym>MLS</acronym> policy with the exception that the rules
      for information flow
      are slightly reversed.  This is said to prevent the downward
      flow of sensitive information whereas the <acronym>MLS</acronym>
      policy prevents the upward flow of sensitive information; thus,
      much of this section can apply to both policies.</para>

    <para>In Biba environments, an <quote>integrity</quote> label is
      set on each subject or object.  These labels are made up of
      hierarchal grades, and non-hierarchal components.  As an object's
      or subject's grade ascends, so does its integrity.</para>

    <para>Supported labels are <literal>biba/low</literal>,
      <literal>biba/equal</literal>, and <literal>biba/high</literal>;
      as explained below:</para>

    <itemizedlist>
      <listitem>
	<para>The <literal>biba/low</literal> label is considered the
	  lowest integrity an object or subject may have.  Setting
	  this on objects or subjects will block their write access
	  to objects or subjects marked high.  They still have read
	  access though.</para>
      </listitem>

      <listitem>
	<para>The <literal>biba/equal</literal> label should only be
	  placed on objects considered to be exempt from the
	  policy.</para>
      </listitem>

      <listitem>
	<para>The <literal>biba/high</literal> label will permit
	  writing to objects set at a lower label but not
	  permit reading that object.  It is recommended that this
	  label be placed on objects that affect the integrity of
	  the entire system.</para>
      </listitem>
    </itemizedlist>

    <para>Biba provides for:</para>

    <itemizedlist>
      <listitem>
	<para>Hierarchical integrity level with a set of non
	  hierarchical integrity categories;</para>
      </listitem>

      <listitem>
	<para>Fixed rules: no write up, no read down (opposite of
	  <acronym>MLS</acronym>).  A subject can have write access
	  to objects on its own level or below, but not above.  Similarly, a
	  subject can have read access to objects on its own level
	  or above, but not below;</para>
      </listitem>

      <listitem>
	<para>Integrity (preventing inappropriate modification of
	  data);</para>
      </listitem>

      <listitem>
	<para>Integrity levels (instead of MLS sensitivity
	  levels).</para>
      </listitem>
    </itemizedlist>

    <para>The following <command>sysctl</command> tunables can
      be used to manipulate the Biba policy.</para>

    <itemizedlist>
      <listitem>
	<para><literal>security.mac.biba.enabled</literal> may be used
	  to enable/disable enforcement of the Biba policy on the
	  target machine.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.biba.ptys_equal</literal> may be
	  used to disable the Biba policy on &man.pty.4;
	  devices.</para>
      </listitem>

      <listitem>
	<para><literal>security.mac.biba.revocation_enabled</literal>
	  will force the revocation of access to objects if the label
	  is changed to dominate the subject.</para>
      </listitem>
    </itemizedlist>

    <para>To access the Biba policy setting on system objects, use
      the <command>setfmac</command> and <command>getfmac</command>
      commands:</para>

    <screen>&prompt.root; <userinput>setfmac biba/low test</userinput>
&prompt.root; <userinput>getfmac test</userinput>
test: biba/low</screen>

    <para>Observations: a lower integrity subject is unable to write
      to a higher integrity subject; a higher integrity subject cannot
      observe or read a lower integrity object.</para>
  </sect1>

  <sect1 id="mac-lomac">
    <title>MAC module LOMAC</title>

    <indexterm><primary>MAC LOMAC</primary></indexterm>

    <para>Modulenaam: <filename>mac_lomac.ko</filename></para>

    <para>Kernelinstelling: <literal>options MAC_LOMAC</literal></para>
    <para>Bootoptie: <literal>mac_lomac_load="YES"</literal></para>

    <para>Unlike the <acronym>MAC</acronym> Biba policy, the
      &man.mac.lomac.4; policy permits access to lower integrity
      objects only after decreasing the integrity level to not disrupt
      any integrity rules.</para>

    <para>The <acronym>MAC</acronym> version of the Low-watermark
      integrity policy, not to be confused with the older &man.lomac.4;
      implementation, works almost identically to Biba but with the
      exception of using floating labels to support subject
      demotion via an auxiliary grade compartment.  This secondary
      compartment takes the form of <literal>[auxgrade]</literal>.
      When assigning a lomac policy with an auxiliary grade, it
      should look a little bit like: <literal>lomac/10[2]</literal>
      where the number two (2) is the auxiliary grade.</para>

    <para>The <acronym>MAC</acronym> LOMAC policy relies on the
      ubiquitous labeling of all system objects with integrity labels,
      permitting subjects to read from low integrity objects and then
      downgrading the label on the subject to prevent future writes to
      high integrity objects.  This is the
      <literal>[auxgrade]</literal> option discussed above, thus the
      policy may provide for greater compatibility and require less
      initial configuration than Biba.</para>

    <sect2>
      <title>Voorbeelden</title>

      <para>Like the Biba and <acronym>MLS</acronym> policies;
	the <command>setfmac</command> and <command>setpmac</command>
	utilities may be used to place labels on system objects:</para>

      <screen>&prompt.root; <userinput>setfmac /usr/home/trhodes lomac/high[low]</userinput>
&prompt.root; <userinput>getfmac /usr/home/trhodes</userinput> lomac/high[low]</screen>

      <para>Notice the auxiliary grade here is <literal>low</literal>,
	this is a feature provided only by the <acronym>MAC</acronym>
	LOMAC policy.</para>
    </sect2>
  </sect1>

  <sect1 id="mac-implementing">
    <title>Instellen van een veilige omgeving met MAC</title>

    <indexterm><primary>MAC voorbeeld implementatie</primary></indexterm>

    <para>The following demonstration will implement a secure
      environment using various <acronym>MAC</acronym> modules
      with properly configured policies.  This is only a test and
      should not be considered the complete answer to everyone's
      security woes.  Just implementing a policy and ignoring it
      never works and could be disastrous in a production
      environment.</para>

    <para>Before beginning this process, the
      <literal>multilabel</literal> option must be set on each file
      system as stated at the beginning of this chapter.  Not doing
      so will result in errors.</para>

    <sect2>
      <title><literal>insecure</literal> user class maken</title>

      <para>Begin the procedure by adding the following user class
       to the <filename>/etc/login.conf</filename> file:</para>

      <programlisting>insecure:\
        :copyright=/etc/COPYRIGHT:\
        :welcome=/etc/motd:\
        :setenv=MAIL=/var/mail/$,BLOCKSIZE=K:\
        :path=~/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
        :manpath=/usr/share/man /usr/local/man:\
        :nologin=/usr/sbin/nologin:\
        :cputime=1h30m:\
        :datasize=8M:\
        :vmemoryuse=100M:\
        :stacksize=2M:\
        :memorylocked=4M:\
        :memoryuse=8M:\
        :filesize=8M:\
        :coredumpsize=8M:\
        :openfiles=24:\
        :maxproc=32:\
        :priority=0:\
        :requirehome:\
        :passwordtime=91d:\
        :umask=022:\
        :ignoretime@:\
        :label=partition/13,mls/5:</programlisting>

      <para>And adding the following line to the default user
	class:</para>

      <programlisting>:label=mls/equal,biba/equal,partition/15:</programlisting>

      <para>Once this is completed, the following command must be
	issued to rebuild the database:</para>

      <screen>&prompt.root; <userinput>cap_mkdb /etc/login.conf</userinput></screen>
    </sect2>

    <sect2>
      <title>Opstarten met de juiste modules</title>

      <para>Add the following lines to
	<filename>/boot/loader.conf</filename> so the required
	modules will load during system initialization:</para>

      <programlisting>mac_biba_load="YES"
mac_mls_load="YES"
mac_seeotheruids_load="YES"
mac_partition_load="YES"</programlisting>
    </sect2>

    <sect2>
      <title>Alle gebruikers naar insecure zetten</title>

      <para>All user accounts that are not <username>root</username>
	or system users will now require a login class.  The login
	class is required otherwise users will be refused access
	to common commands such as &man.vi.1;.
	The following <command>sh</command> script should do the
	trick:</para>

      <screen>&prompt.root; <userinput>for x in `awk -F: '($3 &gt;= 1001) &amp;&amp; ($3 != 65534) { print $1 }' \</userinput>
	<userinput>/etc/passwd`; do pw usermod $x -L insecure; done;</userinput></screen>

      <para>The <command>cap_mkdb</command> command will need to be
	run on <filename>/etc/master.passwd</filename> after this
	change.</para>
    </sect2>

    <sect2>
      <title>Instellingen voltooien</title>

      <para>A contexts file should now be created; the following
	example was taken from Robert Watson's example policy and
	should be placed in
	<filename>/etc/policy.contexts</filename>.</para>

      <programlisting># This is the default BIBA/MLS policy for this system.

.*                              biba/high,mls/high
/sbin/dhclient                  biba/high(low),mls/high(low)
/dev(/.*)?                      biba/equal,mls/equal
# This is not an exhaustive list of all "privileged" devices.
/dev/mdctl                      biba/high,mls/high
/dev/pci                        biba/high,mls/high
/dev/k?mem                      biba/high,mls/high
/dev/io                         biba/high,mls/high
/dev/agp.*                      biba/high,mls/high
(/var)?/tmp(/.*)?               biba/equal,mls/equal
/tmp/\.X11-unix                 biba/high(equal),mls/high(equal)
/tmp/\.X11-unix/.*              biba/equal,mls/equal
/proc(/.*)?                     biba/equal,mls/equal
/mnt.*                          biba/low,mls/low
(/usr)?/home                    biba/high(low),mls/high(low)
(/usr)?/home/.*                 biba/low,mls/low
/var/mail(/.*)?                 biba/low,mls/low
/var/spool/mqueue(/.*)?         biba/low,mls/low
(/mnt)?/cdrom(/.*)?             biba/high,mls/high
(/usr)?/home/(ftp|samba)(/.*)?  biba/high,mls/high
/var/log/sendmail\.st           biba/low,mls/low
/var/run/utmp                   biba/equal,mls/equal
/var/log/(lastlog|wtmp)         biba/equal,mls/equal</programlisting>

      <para>This policy will enforce security by setting restrictions
	on both the downward and upward flow of information with
	regards to the directories and utilities listed on the
	left.</para>

      <para>This can now be read into our system by issuing the
	following command:</para>

      <screen>&prompt.root; <userinput>setfsmac -ef /etc/policy.contexts /</userinput>
&prompt.root; <userinput>setfsmac -ef /etc/policy.contexts /usr</userinput></screen>

      <note>
	<para>The above file system layout may be different depending
	  on environment.</para>
      </note>

      <para>The <filename>/etc/mac.conf</filename> file requires
	the following modifications in the main section:</para>

      <programlisting>default_labels file ?biba,?mls
default_labels ifnet ?biba,?mls
default_labels process ?biba,?mls,?partition
default_labels socket ?biba,?mls</programlisting>
    </sect2>

    <sect2>
      <title>Instellingen testen</title>

      <indexterm><primary>MAC instellingen testen</primary></indexterm>

      <para>Add a user with the <command>adduser</command> command
	and place that user in the <literal>insecure</literal>
	class for these tests.</para>

      <para>The examples below will show a mix of
	<username>root</username> and regular user tests; use the
	prompt to distinguish between the two.</para>

      <sect3>
	<title>Basis labeltests</title>

	<screen>&prompt.user; <userinput>getpmac</userinput>
biba/15(15-15),mls/15(15-15),partition/15
&prompt.root; <userinput>setpmac partition/15,mls/equal top</userinput></screen>

	<note>
	  <para>The top process will be killed before we start
	    another top process.</para>
	</note>
      </sect3>

      <sect3>
	<title>MAC seeotheruids tests</title>

	<screen>&prompt.user; <userinput>ps Zax</userinput>
biba/15(15-15),mls/15(15-15),partition/15  1096 #C:  S      0:00.03 -su (bash)
biba/15(15-15),mls/15(15-15),partition/15  1101 #C:  R+     0:00.01 ps Zax</screen>

	<para>We should not be permitted to see any processes
	  owned by other users.</para>
      </sect3>

      <sect3>
	<title>MAC partition test</title>

	<para>Schakel de <acronym>MAC</acronym> beleidseenheid
	  <literal>seeotheruids</literal> tijdens de rest van de tests
	  uit:</para>

	<screen>&prompt.root; <userinput>sysctl security.mac.seeotheruids.enabled=0</userinput>
&prompt.user; <userinput>ps Zax</userinput>
LABEL                                                   PID  TT  STAT      TIME COMMAND
  biba/equal(low-high),mls/equal(low-high),partition/15  1122 #C:  S+     0:00.02 top
  biba/15(15-15),mls/15(15-15),partition/15              1096 #C:  S      0:00.05 -su (bash)
  biba/15(15-15),mls/15(15-15),partition/15              1123 #C:  R+     0:00.01 ps Zax</screen>

	<para>Alle gebruikers moet toegestaan worden ieder proces in
	  zijn partitie te zien.</para>
      </sect3>

      <sect3>
	<title>Biba en MLS labels testen</title>

	<screen>&prompt.root; <userinput>setpmac partition/15,mls/equal,biba/high\(high-high\) top</userinput>
&prompt.user; <userinput>ps Zax</userinput>
LABEL                                                   PID  TT  STAT    TIME   COMMAND
  biba/high(high-high),mls/equal(low-high),partition/15   1251 #C:  S+     0:00.02 top
  biba/15(15-15),mls/15(15-15),partition/15               1096 #C:  S      0:00.06 -su (bash)
  biba/15(15-15),mls/15(15-15),partition/15               1157 #C:  R+     0:00.00 ps Zax</screen>

	<para>De beleidseenheid Biba staat toe hoger gelabelde objecten
	  te lezen.</para>

	<screen>&prompt.root; <userinput>setpmac partition/15,mls/equal,biba/low top</userinput>
&prompt.user; <userinput>ps Zax</userinput>
LABEL                                       PID  TT  STAT      TIME COMMAND
  biba/15(15-15),mls/15(15-15),partition/15  1096 #C:  S      0:00.07 -su (bash)
  biba/15(15-15),mls/15(15-15),partition/15  1226 #C:  R+     0:00.01 ps Zax</screen>

	<para>De beleidseenheid Biba staat niet toe dat lager gelabelde
	  objecten worden gelezen.  Dit staat <acronym>MLS</acronym>
	  wel toe.</para>

	<screen>&prompt.user; <userinput>ifconfig bge0 | grep maclabel</userinput>
maclabel biba/low(low-low),mls/low(low-low)
&prompt.user; <userinput>ping -c 1 192.0.34.166</userinput>
PING 192.0.34.166 (192.0.34.166): 56 data bytes
ping: sendto: Permission denied</screen>

	<para>Gebruikers kunnen <hostid
	    role="domainname">example.com</hostid> en willekeurig welk
	  ander domein niet pingen.</para>

	<para>Voer het volgende commando uit om deze fout te
	  voorkomen:</para>

	<screen>&prompt.root; <userinput>sysctl security.mac.biba.trust_all_interfaces=1</userinput></screen>

	<para>Hiermee wordt het standaard interfacelabel insteld in de
	  modus insecure, zodat het standaard Biba beleidslabel niet
	  wordt afgedwongen.</para>

	<screen>&prompt.root; <userinput>ifconfig bge0 maclabel biba/equal\(low-high\),mls/equal\(low-high\)</userinput>
&prompt.user; <userinput>ping -c 1 192.0.34.166</userinput>
PING 192.0.34.166 (192.0.34.166): 56 data bytes
64 bytes from 192.0.34.166: icmp_seq=0 ttl=50 time=204.455 ms
--- 192.0.34.166 ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max/stddev = 204.455/204.455/204.455/0.000 ms</screen>

	<para>Door een meer correct label in te stellen kan
	  <command>ping</command> wel gebruikt worden.</para>

	<para>Maak nu een aantal nieuwe bestanden aan voor wat lees- en
	schrijftesten:</para>

	<screen>&prompt.root; <userinput>touch test1 test2 test3 test4 test5</userinput>
&prompt.root; <userinput>getfmac test1</userinput>
test1: biba/equal,mls/equal
&prompt.root; <userinput>setfmac biba/low test1 test2; setfmac biba/high test4 test5; \
  setfmac mls/low test1 test3; setfmac mls/high test2 test4</userinput>
&prompt.root; <userinput>setfmac mls/equal,biba/equal test3 &amp;&amp; getfmac test?</userinput>
test1: biba/low,mls/low
test2: biba/low,mls/high
test3: biba/equal,mls/equal
test4: biba/high,mls/high
test5: biba/high,mls/equal
&prompt.root; <userinput>chown testuser:testuser test?</userinput></screen>

	<para>Nu moet <username>testuser</username> eigenaar zijn van
	  alle bestanden.  Nu de leestesten:</para>

	<screen>&prompt.user; <userinput>ls</userinput>
test1   test2   test3   test4   test5
&prompt.user; <userinput>ls test?</userinput>
ls: test1: Permission denied
ls: test2: Permission denied
ls: test4: Permission denied
test3   test5</screen>

	<para>Paren observeren hoort niet toegestaan te worden,
	  bijvoorbeeld:
	  <literal>(biba/low,mls/low)</literal>,
	  <literal>(biba/low,mls/high)</literal> en
	  <literal>(biba/high,mls/high)</literal>.  Natuurlijk is
	  leestoegang ook niet mogelijk.  Dan nu de
	  schrijftesten:</para>

	<screen>&prompt.user; <userinput>for i in `echo test*`; do echo 1 &gt; $i; done</userinput>
-su: test1: Permission denied
-su: test4: Permission denied
-su: test5: Permission denied</screen>

	<para>Net als met de leestesten, hoort schrijftoegang ook niet
	  toegestaan te worden om paren te schrijven, bijvoorbeeld:
	  <literal>(biba/low,mls/high)</literal> en
	  <literal>(biba/equal,mls/equal)</literal>.</para>

	<screen>&prompt.user; <userinput>cat test?</userinput>
cat: test1: Permission denied
cat: test2: Permission denied
1
cat: test4: Permission denied</screen>

	<para>En nu als <username>root</username>:</para>

	<screen>&prompt.root; <userinput>cat test2</userinput>
1</screen>
      </sect3>
    </sect2>
  </sect1>

  <sect1 id="MAC-examplehttpd">
    <title>Nog een voorbeeld: MAC gebruiken om een webserver in te
      perken</title>

    <para>Er wordt een aparte plaats toegewezen voor de webgegevens
      waar gebruikers bij moeten kunnen.  Dit geeft
      <literal>biba/high</literal> processen toegang tot de
      webgegevens.</para>

    <para>Begin met het maken van een map om de webgegevens in op te
      slaan:</para>

    <screen>&prompt.root; <userinput>mkdir /usr/home/cvs</userinput></screen>

    <para>Initialiseer met <command>cvs</command>:</para>

    <screen>&prompt.root; <userinput>cvs -d /usr/home/cvs init</userinput></screen>

    <para>Het eerste doel is om de beleidseenheid
      <literal>biba</literal> in te schakelen en dus moet
      <literal>mac_biba_enable="YES"</literal> opgenomen worden in
      <filename>/boot/loader.conf</filename>.  Er wordt aangenomen dat
      ondersteuning voor <acronym>MAC</acronym> in de kernel is
      ingeschakeld.</para>

    <para>Vanaf dit moment hoort alles in een systeem standaard
      ingesteld te staan op <literal>biba/high</literal>.</para>

    <para>In het bestand <filename>login.conf</filename> dient onder
      de standaard gebruikersklasse de volgende wijziging gemaakt te
      worden:</para>

    <programlisting>:ignoretime@:\
:umask=022:\
:label=biba/high:</programlisting>

    <para>Iedere gebruiker moet nu in de standaardklasse geplaatst
      worden en met een commando als het volgende is dat zo
      gedaan:</para>

    <screen>&prompt.root; <userinput>for x in `awk -F: '($3 &gt;= 1001) &amp;&amp; ($3 != 65534) { print $1 }' \</userinput>
<userinput>/etc/passwd`; do pw usermod $x -L default; done;</userinput></screen>

    <para>Maak nu een andere klasse, web, een kopie van de
      standaardklasse, met een labelinstelling
      <literal>biba/low</literal>.</para>

    <para>Maak een gebruikers die gebruikt wordt om te werken met de
      centrale webgegevens die staan opgeslagen in een
      <application>cvs</application> repository.  Deze gebruiker moet
      in de nieuwe aanmeldklasse geplaats worden,
      <username>web</username>.</para>

    <para>Omdat overal de standaard <literal>biba/high</literal> is,
      geldt dat ook voor de repository.  De webgegevens moeten ook
      gelijk zijn zodat gebruikers er lees- en schrijfrechten op
      hebben.  Maar omdat de webserver gegevens serveert waar
      <literal>biba/high</literal> bij moeten kunnen, moeten de
      gegevens in hun geheel gedowngrade worden.</para>

    <para>Hiervoor zijn de perfecte hulpmiddelen &man.sh.1; en
      &man.cron.8; als in &os; aanwezig.  Het volgende script doet
      alles wat nodig is:</para>

    <programlisting>PATH=/bin:/usr/bin:/usr/local/bin; export PATH;
CVSROOT=/home/repo; export CVSROOT;
cd /home/web;
cvs -qR checkout -P htdocs;
exit;</programlisting>

    <note>
      <para>In veel gevallen moeten de <command>cvs</command> Id tags
	in de databestanden van de website gezet worden.</para>
      </note>

    <para>Dit script kan nu in de thuismap van de gebruiker
      <username>web</username> geplaatst worden waarna de volgende
      regel aan de &man.crontab.1; toegevoegd kan worden:</para>

    <programlisting># Check de webgegevens iedere twaalf uur uit als biba/low:
0       */12       *       *       *       web    /home/web/checkout.sh</programlisting>

    <para>Hiermee wordt de <acronym>HTML</acronym> broncode iedere
      twaalf uur uitgecheckt.</para>

    <para>De standaard opstartmethode voor de webserver moet ook
      aangepast worden om het proces te starten als
      <literal>biba/low</literal>.  Dit kan met de volgende
      verandering in het script
      <filename>/usr/local/etc/rc.d/apache.sh</filename>:</para>

    <programlisting>command="setpmac biba/low /usr/local/sbin/httpd"</programlisting>

    <para>De instellingen voor <application>Apache</application> moeten
      aangepast worden om met het <literal>biba/low</literal> beleid te
      werken.  In dit geval moet de software ingesteld worden om
      logboekmeldingen weg te schrijven naar een map die ingesteld
      staat op <literal>biba/low</literal> omdat er anders
      foutmeldingen van het type <errorname>access denied</errorname>
      ontstaan.</para>

    <note>
      <para>Voor dit voorbeeld is het noodzakelijk dat het directief
	<literal>docroot</literal> wordt ingesteld voor
	<filename>/home/web/htdocs</filename>.  Anders faalt
	<application>Apache</application> als het probeert de map te
	vinden waaruit documenten geserveerd moeten worden.</para>
    </note>

    <para>Er moeten ook nog andere instellingen gewijzigd worden,
      waaronder <acronym>PID</acronym>-bestand,
      <literal>Scoreboardfile</literal>,
      <literal>DocumentRoot</literal>, plaatsen voor logboekbestanden
      en andere variabelen waarvoor schrijftoegang nodig is.  Als
      <literal>biba</literal> wordt gebruikt, wordt iedere vorm van
      schrijftoegang aan de server ontzegd waar
      <emphasis>geen</emphasis> <literal>biba/low</literal> is
      ingesteld.</para>
<!--
PROBLEM: CAN THIS WORK?  OR SHOULD IT BE start_precmd?  More testing need here.
-->
  </sect1>

<!--
  <sect1 id="mac-examplesandbox">
    <title>Voorbeeld van een MAC zandbak</title>

    <para>Hier hoort een voorbeeld te komen voor het in een zandbak
      plaatsen van gebruiker met <acronym>MAC</acronym>.</para>
  </sect1>
-->

  <sect1 id="mac-troubleshoot">
    <title>Problemen oplossen met het MAC framework</title>

    <indexterm><primary>MAC problemen oplossen</primary></indexterm>

    <para>Tijdens de ontwikkeling hebben een aantal gebruikers
      problemen aangegeven met normale instellingen.  Hieronder worden
      een aantal van die problemen beschreven:</para>

    <sect2>
      <title>De optie <option>multilabel</option> kan niet ingeschakeld
	worden op <filename>/</filename></title>

      <para>De vlag <option>multilabel</option> blijft niet
	ingeschakeld op de rootpartitie
	(<filename>/</filename>)!</para>

      <para>Het lijkt er inderdaad op dat een paar procent van de
	gebruikers dit probleem heeft.  Nadere analyse van het probleem
	doet vermoeden dat deze zogenaamde <quote>bug</quote> het
	resultaat is van ofwel injuiste documentatie ofwel verkeerde
	interpretatie van de documentatie.  Hoe het probleem ook is
	ontstaan, met de volgende stappen is het te verhelpen:</para>

      <procedure>
	<step>
	  <para>Wijzig <filename>/etc/fstab</filename> en stel de
	    rootpartitie in op <option>ro</option> voor
	    alleen-lezen.</para>
	</step>

	<step>
	  <para>Herstart in single-user modus.</para>
	</step>

	<step>
	  <para>Draai <command>tunefs</command> <option>-l
	      enable</option> op <filename>/</filename>.</para>
	</step>

	<step>
	  <para>Herstart in normale modus.</para>
	</step>

	<step>
	  <para>Draai <command>mount</command> <option>-urw</option>
	  <filename>/</filename> en wijzig <option>ro</option> terug in
	  <option>rw</option> in <filename>/etc/fstab</filename> en
	  start het systeem opnieuw.</para>
	</step>

	<step>
	  <para>Controleer de uitvoer van <command>mount</command> om
	    zeker te zijn dat <option>multilabel</option> juist is
	    ingesteld op het root bestandssysteem.</para>
	</step>
      </procedure>
    </sect2>

    <sect2>
      <title>Kan geen X11 server starten na
	<acronym>MAC</acronym></title>

      <para>Na het instellen van een beveiligde omgeving met
	<acronym>MAC</acronym> start X niet meer!</para>

      <para>Dit kan komen door de <acronym>MAC</acronym> beleidseenheid
	<literal>partition</literal> of door een verkeerde labeling van
	een van de <acronym>MAC</acronym> labeling beleidseenheden.
	Probeer als volgt te debuggen:</para>

      <procedure>
	<step>
	  <para>Controleer de foutmelding.  Als de gebruiker in de
	    klasse <literal>insecure</literal> zit, kan de
	    beleidseenheid <literal>partition</literal> het probleem
	    zijn.  Zet de klasse voor de gebruiker terug naar de
	    <literal>default</literal> klasse en herbouw de database
	    met het commando <command>cap_mkdb</command> command.  Ga
	    naar stap twee als hiermee het probleem niet is
	    opgelost.</para>
	</step>

	<step>
	  <para>Controleer de labelbeleidseenheden nog een keer.  Stel
	    zeker dat het beleid voor de bewuste gebruiker, de X11
	    applicati en de onderdelen van <filename
	      class="directory">/dev</filename> juist zijn
	      ingesteld.</para>
	</step>

	<step>
	  <para>Als geen van beide methodes het probleem oplossen,
	    stuur dan de foutmelding en een beschrijving van de
	    omgeving naar de TrustedBSD discussielijsten van de <ulink
	      url="http://www.TrustedBSD.org">TrustedBSD</ulink>
	    website of naar de &a.questions; mailinglijst.</para>
	</step>
      </procedure>
    </sect2>

    <sect2>
      <title>Error: &man..secure.path.3; cannot stat
	<filename>.login_conf</filename></title>

      <para>Bij het wisselen van <username>root</username> naar een
	andere gebruiker in het systeem, verschijnt de foutmelding
	<errorname>_secure_path: unable to state .login_conf</errorname>.</para>

      <para>Deze melding komt meestal voor als de gebruiker een hogere
	labelinstelling heeft dan de gebruiker waarnaar wordt
	gewisseld.  Als bijvoorbeeld gebruiker <username>joe</username>
	een standaardlabel <option>biba/low</option>, dan kan gebruiker
	<username>root</username>, die een label
	<option>biba/high</option> de thuismap van
	<username>joe</username> niet zien.  Dit gebeurt zonder
	rekening te houden met de mogelijkheid dat
	<username>root</username> met <command>su</command> de
	indentiteit van <username>joe</username> heeft aangenomen.  In
	dit scenario staat het integriteitsmodel van Biba niet toe dat
	<username>root</username> objecten kan zien met van een lager
	integriteitsniveau.</para>
    </sect2>

    <sect2>
      <title>De gebruikersnaam <username>root</username> is
	stuk!</title>

      <para>In normale, of zelfs in single user modus, wordt
	<username>root</username> niet herkend.  Het commando
	<command>whoami</command> geeft 0 (nul) terug en
	<command>su</command> heeft als resultaat <errorname>who are
	  you?</errorname>.  Wat is er aan de hand?</para>

      <para>Dit kan gebeuren als een labelbeleid is uitgeschakeld,
	ofwel door &man.sysctl.8; of doordat de beleidsmodule niet meer
	is geladen.  Als de beleidseenheid (tijdelijk) is uitgeschakeld
	dan moet de aanmeldmogelijkheden database opnieuw worden
	ingesteld, waarbij de optie <option>label</option> wordt
	verwijderd.  Er dient voor te worden zorggedragen dat het
	bestand <filename>login.conf</filename> wordt ontdaan van alle
	opties met <option>label</option>, waarna de database opnieuw
	gebouwd kan worden met <command>cap_mkdb</command>.</para>

      <para>Dit kan ook gebeuren als een beleid toegang verhinderd tot
	het <filename>master.passwd</filename> bestand of database.
	Meestal wordt dit veroorzaakt door een beheerder die het bestand
	veranderd onder een label, welke conflicteert met het globale
	beleid dat gebruikt wordt op het systeem.  In deze gevallen
	wordt de gebruikers informatie gelezen door het systeem en wordt
	de toegang geblokkeerd omdat het bestand een nieuw label erft.
	Zet het beleid uit doormiddel van &man.sysctl.8; en alles zou
	weer terug naar normaal moeten gaan.</para>
    </sect2>
  </sect1>
</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
